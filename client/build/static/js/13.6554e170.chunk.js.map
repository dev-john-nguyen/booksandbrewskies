{"version":3,"sources":["components/Modal.js","components/contact/components/ContactForm.js","components/home/components/Contact.js"],"names":["MyModal","props","svg","useState","showValue","show","setShow","svgType","className","width","height","viewBox","fill","xmlns","fillRule","d","clipRule","style","color","x","y","rx","onHide","window","location","replace","history","push","aria-labelledby","centered","dialogClassName","Header","closeButton","Title","title","Body","description","Footer","onClick","handleState","closeDirect","buttonName","ContactForm","renderInput","input","label","meta","error","touched","type","placeholder","autoComplete","renderError","onSubmit","formValues","marginBottom","this","handleSubmit","name","component","loading","role","aria-hidden","React","Component","reduxForm","form","validate","errors","firstName","lastName","email","Contact","a","axios","post","then","res","setState","success","catch","err","state","duplicate","id","backgroundColor","fontSize","top","minWidth","maxWidth"],"mappings":"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","file":"static/js/13.6554e170.chunk.js","sourcesContent":["import React from 'react';\nimport {Modal , Button} from 'react-bootstrap';\nimport { useState } from 'react';\nimport history from '../history';\n\nimport './css/modal.css';\n\nconst MyModal = ( props ) => {\n    const [show, setShow] = useState(props.showValue);\n\n    const handleClose = () => {\n      setShow(false);\n\n      if(props.svgType === \"success\"){\n        window.location.replace('/')\n      }else{\n        history.push('/');\n      }\n    }\n\n    const handleButton = () => {\n      if(props.handleState){\n        props.handleState();\n      }\n\n      setShow(false);\n\n      if(props.svgType === \"success\"){\n        window.location.replace('/')\n      }else{\n        history.push(props.closeDirect);\n      }\n      \n    }\n\n    let svg;\n\n    switch (props.svgType) {\n      case 'empty':\n        svg = (\n          <svg className=\"bi bi-bucket\" width=\"2.5em\" height=\"2.5em\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fillRule=\"evenodd\" d=\"M10 3.5A4.5 4.5 0 005.5 8h-1a5.5 5.5 0 1111 0h-1A4.5 4.5 0 0010 3.5z\" clipRule=\"evenodd\"></path>\n            <path fillRule=\"evenodd\" d=\"M3.61 7.687A.5.5 0 014 7.5h12a.5.5 0 01.488.608l-1.826 8.217a1.5 1.5 0 01-1.464 1.175H6.802a1.5 1.5 0 01-1.464-1.175L3.512 8.108a.5.5 0 01.098-.42zm1.013.813l1.691 7.608a.5.5 0 00.488.392h6.396a.5.5 0 00.488-.392l1.69-7.608H4.624z\" clipRule=\"evenodd\"></path>\n          </svg>\n        )\n        break;\n      case 'warning':\n        svg = (\n          <svg className=\"bi bi-alert-triangle\" style={{color:\"orange\"}} width=\"2.5em\" height=\"2.5em\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fillRule=\"evenodd\" d=\"M9.938 4.016a.146.146 0 00-.054.057L3.027 15.74a.176.176 0 00-.002.183c.016.03.037.05.054.06.015.01.034.017.066.017h13.713a.12.12 0 00.066-.017.163.163 0 00.055-.06.176.176 0 00-.003-.183L10.12 4.073a.146.146 0 00-.054-.057.13.13 0 00-.063-.016.13.13 0 00-.064.016zm1.043-.45a1.13 1.13 0 00-1.96 0L2.166 15.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L10.982 3.566z\" clipRule=\"evenodd\">\n            </path>\n            <rect width=\"2\" height=\"2\" x=\"9.002\" y=\"13\" rx=\"1\"></rect>\n            <path d=\"M9.1 7.995a.905.905 0 111.8 0l-.35 3.507a.553.553 0 01-1.1 0L9.1 7.995z\"></path>\n          </svg>\n        )\n        break;\n      case 'error':\n        svg = (\n                <svg className=\"bi bi-alert-octagon\" style ={{color:\"red\"}} width=\"2.5em\" height=\"2.5em\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path fillRule=\"evenodd\" d=\"M6.54 2.146A.5.5 0 016.893 2h6.214a.5.5 0 01.353.146l4.394 4.394a.5.5 0 01.146.353v6.214a.5.5 0 01-.146.353l-4.394 4.394a.5.5 0 01-.353.146H6.893a.5.5 0 01-.353-.146L2.146 13.46A.5.5 0 012 13.107V6.893a.5.5 0 01.146-.353L6.54 2.146zM7.1 3L3 7.1v5.8L7.1 17h5.8l4.1-4.1V7.1L12.9 3H7.1z\" clipRule=\"evenodd\"></path>\n                  <rect width=\"2\" height=\"2\" x=\"9.002\" y=\"12\" rx=\"1\"></rect>\n                  <path d=\"M9.1 6.995a.905.905 0 111.8 0l-.35 3.507a.553.553 0 01-1.1 0L9.1 6.995z\"></path>\n                </svg>\n            )\n        break;\n      default:\n        svg = (\n          <svg className=\"bi bi-check-circle\" style={{color:\"green\"}} width=\"2.5em\" height=\"2.5em\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fillRule=\"evenodd\" d=\"M17.354 4.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3-3a.5.5 0 11.708-.708L10 11.293l6.646-6.647a.5.5 0 01.708 0z\" clipRule=\"evenodd\"></path>\n            <path fillRule=\"evenodd\" d=\"M10 4.5a5.5 5.5 0 105.5 5.5.5.5 0 011 0 6.5 6.5 0 11-3.25-5.63.5.5 0 11-.5.865A5.472 5.472 0 0010 4.5z\" clipRule=\"evenodd\"></path>\n          </svg>\n        )\n    }\n\n    return (\n      <>\n        <Modal show={show}\n          onHide={handleClose}\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n          dialogClassName={\"contactModal text-center\"}\n          >\n          <Modal.Header closeButton>\n            <Modal.Title>\n            {svg}\n            <br/>\n            <h4>{props.title}</h4>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{props.description}</Modal.Body>\n          <Modal.Footer>\n            <Button className=\"btn btn-primary btn-block\" onClick={handleButton}>\n              {props.buttonName}\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\nexport default MyModal;\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass ContactForm extends React.Component {\n  renderError({ error, touched }) {\n    if (touched && error) {\n      return (\n        <div className=\"invalid-feedback\" style={{marginBottom: \".25rem\"}}>\n          {error}\n        </div>\n      )\n    }\n  }\n\n  renderInput = ({ input, label, meta }) => {\n    const className = `form-control ${meta.error && meta.touched ? 'is-invalid':''}`\n    const type = label === 'Email' ? 'email': 'text';\n    if (label === 'Message'){\n      return (\n        <div>\n          <textarea {...input}\n            className={className}\n            placeholder={label}\n            autoComplete=\"off\"\n            type = {type}\n            />\n          {this.renderError(meta)}\n        </div>\n      )\n    }\n    return (\n      <div>\n        <input {...input}\n          className={className}\n          placeholder={label}\n          autoComplete=\"off\"\n          type = {type}\n          />\n        {this.renderError(meta)}\n      </div>\n    );\n  };\n\n  onSubmit= (formValues) => {\n    this.props.onSubmit(formValues);\n  }\n\n\n\n  render() {\n    return (\n      <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n        <div className=\"form-row mb-3 contact-name\">\n          <div className=\"col\">\n            <Field name=\"firstName\"\n              component={this.renderInput}\n              label=\"First Name\" />\n          </div>\n          <div className=\"col\">\n            <Field name=\"lastName\"\n              component={this.renderInput}\n              label=\"Last Name\" />\n          </div>\n        </div>\n        <div className=\"form-group mb-3\">\n          <Field name=\"email\"\n            component={this.renderInput}\n            label=\"Email\"\n            />\n        </div>\n        <div className=\"form-group mb-3\">\n          <Field name=\"message\"\n            component={this.renderInput}\n            label=\"Message\"\n            />\n        </div>\n        <button className=\"btn btn-primary btn-block\" type=\"submit\">\n        {this.props.loading && <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> }\n        Submit\n        </button>\n      </form>\n    )\n  }\n}\n\nconst validate = (formValues) => {\n  const errors = {};\n\n  if (!formValues.firstName) {\n    errors.firstName = \"Invalid First Name\";\n  }\n  if(!formValues.lastName) {\n    errors.lastName = \"Invalid Last Name\";\n  }\n  if(!formValues.email) {\n    errors.email = \"Invalid Email\";\n  }\n\n  return errors;\n}\n\nexport default reduxForm({\n  form: 'contactForm',\n  validate: validate\n})(ContactForm);\n","import React from 'react';\nimport ContactForm from '../../contact/components/ContactForm';\nimport axios from 'axios'\nimport Mymodal from '../../Modal';\n\nclass Contact extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: false,\n        loading: false,\n        success: false,\n        duplicate: false,\n        firstName: '',\n        lastName: ''\n      };\n    }\n  \n    onSubmit = async(formValues) => {\n  \n      await axios.post('/contact', {...formValues})\n        .then(res => {\n          this.setState({success: true})\n        })\n        .catch(err => this.setState({ error: true }));\n    }\n  \n    render() {\n        const {error, success, loading, firstName, lastName} = this.state;\n        if(error){\n          const clientErrorDescription = `Looks like we are having problems on our side. I apologize\n          for the inconvience. Please feel free to email us at beersandbrewskies@gmail.com.`\n    \n          return (\n                <Mymodal\n                showValue={true}\n                closeDirect = '/'\n                buttonName = 'Close'\n                title='Oops!'\n                description= {clientErrorDescription}\n                svgType=\"error\"\n                />\n          );\n        }\n    \n        if(success){\n          const descriptionOrderCompleted = `We will get back to you as soon as possible!`;\n    \n          return(\n            <Mymodal\n            showValue={true}\n            closeDirect = '/'\n            buttonName = 'OK'\n            title={`Thank You ${firstName} ${lastName}!`}\n            description= {descriptionOrderCompleted}\n            svgType=\"success\"\n            />\n          )\n        }\n    return (\n        <div className=\"pt-6 pb-6 text-center special-events\" id=\"contact\" style={{ color: '#332212', backgroundColor: '#fff' }}>\n          <div className=\"row m-auto\">\n          <div className=\"col\">\n              <h1 className=\"text-center\" style={{ fontSize: '3rem' }}>Contact Us</h1>\n              <div id=\"chevron\" style={{ width: '100%', top: '20px', minWidth: '200px', maxWidth: '400px' }} />\n            </div>\n          </div>\n          <div className=\"row m-auto mt-6 align-items-center contact-section\">\n              <div className=\"d-block text-white ml-4\">\n                  <h4 className=\"mb-4\">You can ask us anything</h4>\n                <ContactForm onSubmit={this.onSubmit} loading={loading}/>\n              </div>\n          </div>\n        </div>\n    )\n    }\n}\n\nexport default Contact;"],"sourceRoot":""}