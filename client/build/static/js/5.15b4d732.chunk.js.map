{"version":3,"sources":["services/shelf/actions.js","components/shop/components/shelf/components/Product.js","components/shop/components/shelf/components/ProductList.js","components/shop/components/shelf/components/Selectbox/index.js","components/shop/components/shelf/components/Sort/index.js","services/sort/actions.js","components/shop/components/shelf/components/ShelfHeader.js","components/shop/components/shelf/index.js","components/shop/components/shelf/components/Checkbox/index.js","components/shop/components/shelf/components/Filter/index.js","services/filters/actions.js","components/shop/index.js"],"names":["compare","lowestprice","a","b","price","highestprice","connect","addProduct","product","quantity","formattedPrice","formatPrice","currencyId","className","onClick","data-sku","sku","Thumb","classes","src","alt","title","currencyFormat","substr","length","ProductList","products","map","p","key","id","Selectbox","options","handleOnChange","onChange","e","target","value","o","label","createOptions","sortBy","state","sort","type","updateSort","UPDATE_SORT","payload","ShelfHeader","props","productsLength","Shelf","isLoading","filters","handleFetchProducts","setState","fetchProducts","this","prevProps","prevState","nextFilters","nextSort","undefined","Fragment","nextProps","React","Component","shelf","items","callback","dispatch","axios","get","response","console","log","data","filter","find","f","availableSizes","size","FETCH_PRODUCTS","Checkbox","isChecked","toggleCheckboxChange","handleCheckboxChange","checked","Filter","toggleCheckbox","selectedCheckboxes","has","delete","add","updateFilters","Array","from","createCheckbox","createCheckboxes","Set","UPDATE_FILTER","Shop","window","scrollTo"],"mappings":"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","file":"static/js/5.15b4d732.chunk.js","sourcesContent":["// import jsonApi from '../../apis/api';\nimport axios from 'axios';\nimport { FETCH_PRODUCTS } from './actionTypes';\n\nconst compare = {\n  lowestprice: (a, b) => {\n    if (a.price < b.price) return -1;\n    if (a.price > b.price) return 1;\n    return 0;\n  },\n  highestprice: (a, b) => {\n    if (a.price > b.price) return -1;\n    if (a.price < b.price) return 1;\n    return 0;\n  }\n};\n\nexport const fetchProducts = (filters, sortBy, callback) => async dispatch => {\n  let response;\n\n  try {\n   response = await axios.get('/products');\n  } catch (e) {\n    return console.log(e.response);\n  }\n\n  let products = response.data;\n\n    if (!!filters && filters.length > 0) {\n      products = products.filter(p =>\n        filters.find(f => p.availableSizes.find(size => size === f))\n      );\n    }\n\n    if (!!sortBy) {\n      products = products.sort(compare[sortBy]);\n    }\n\n    if (!!callback) {\n      callback();\n    }\n\n  dispatch({ type: FETCH_PRODUCTS, payload: products });\n}\n\n// export const fetchProducts = (filters, sortBy, callback) => dispatch => {\n//   return axios\n//     .get(productsAPI)\n//     .then(res => {\n//       let { products } = res.data;\n//\n//       if (!!filters && filters.length > 0) {\n//         products = products.filter(p =>\n//           filters.find(f => p.availableSizes.find(size => size === f))\n//         );\n//       }\n//\n//       if (!!sortBy) {\n//         products = products.sort(compare[sortBy]);\n//       }\n//\n//       if (!!callback) {\n//         callback();\n//       }\n//\n//       return dispatch({\n//         type: FETCH_PRODUCTS,\n//         payload: products\n//       });\n//     })\n//     .catch(err => {\n//       console.log('Could not fetch products. Try again later.');\n//     });\n// };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Thumb from '../../Thumb';\nimport { formatPrice } from '../../util';\nimport { addProduct } from '../../../../../services/cart/actions';\n\nconst Product = ({ product, addProduct }) => {\n  product.quantity = 1;\n\n  let formattedPrice = formatPrice(product.price, product.currencyId);\n\n  return (\n    <div\n      className=\"shelf-item\"\n      onClick={() => addProduct(product)}\n      data-sku={product.sku}\n    >\n      <Thumb\n        classes=\"shelf-item__thumb\"\n        src={'https://vangogh.teespring.com/v3/image/PrximIkrAEA63AH8HjyFOy8SBGk/480/560.jpg'}\n        alt={product.title}\n      />\n      <p className=\"shelf-item__title\">{product.title}</p>\n      <div className=\"shelf-item__price\">\n        <div className=\"val\">\n          <small>{product.currencyFormat}</small>\n          <b>{formattedPrice.substr(0, formattedPrice.length - 3)}</b>\n          <span>{formattedPrice.substr(formattedPrice.length - 3, 3)}</span>\n        </div>\n      </div>\n      <div className=\"shelf-item__buy-btn\">Add to cart</div>\n    </div>\n  );\n};\n\nProduct.propTypes = {\n  product: PropTypes.object.isRequired,\n  addProduct: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addProduct }\n)(Product);\n","import React from 'react';\n\nimport Product from './Product';\n\nconst ProductList = ({ products }) => {\n  return products.map(p => {\n    return <Product product={p} key={p.id} />;\n  });\n};\n\nexport default ProductList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Selectbox = ({ options, classes, handleOnChange }) => {\n  const createOptions = options =>\n    options.map(o => (\n      <option value={o.value} key={o.value}>\n        {o.label}\n      </option>\n    ));\n\n  return (\n    <select onChange={e => handleOnChange(e.target.value)} className={classes}>\n      {createOptions(options)}\n    </select>\n  );\n};\n\nSelectbox.propTypes = {\n  options: PropTypes.array.isRequired,\n  classes: PropTypes.string,\n  handleOnChange: PropTypes.func.isRequired\n};\n\nexport default Selectbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { updateSort } from '../../../../../../services/sort/actions';\nimport Selectbox from '../Selectbox';\n\nconst sortBy = [\n  { value: '', label: 'Select' },\n  { value: 'lowestprice', label: 'Lowest to highest' },\n  { value: 'highestprice', label: 'Highest to lowest' }\n];\n\nconst Sort = ({ updateSort, sort }) => (\n  <div className=\"sort\">\n    Order by\n    <Selectbox options={sortBy} handleOnChange={value => updateSort(value)} />\n  </div>\n);\n\nSort.propTypes = {\n  updateSort: PropTypes.func.isRequired,\n  sort: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  sort: state.sort.type\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateSort }\n)(Sort);\n","import { UPDATE_SORT } from './actionTypes';\n\nexport const updateSort = sort => ({\n  type: UPDATE_SORT,\n  payload: sort\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Sort from './Sort';\n\nconst ShelfHeader = props => {\n  return (\n    <div className=\"shelf-container-header\">\n      <small className=\"products-found\">\n        <span>{props.productsLength} Product(s) found.</span>\n      </small>\n      <Sort />\n    </div>\n  );\n};\n\nShelfHeader.propTypes = {\n  productsLength: PropTypes.number.isRequired\n};\n\nexport default ShelfHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchProducts } from '../../../../services/shelf/actions';\nimport ProductList from './components/ProductList';\nimport ShelfHeader from './components/ShelfHeader';\nimport Spinner from '../../../spinner';\nimport './css/style.scss';\n\nclass Shelf extends React.Component {\n  static propTypes = {\n    fetchProducts: PropTypes.func.isRequired,\n    products: PropTypes.array.isRequired,\n    filters: PropTypes.array,\n    sort: PropTypes.string\n  };\n\n  state = {\n    isLoading: false,\n    filters: this.props.filters,\n    sort: this.props.sort\n  };\n\n  componentDidMount() {\n    this.props.fetchProducts();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n  if (nextProps.filters.length !== prevState.filters.length) {\n    return { filters: nextProps.filters };\n  }\n\n  if (nextProps.sort !== prevState.sort) {\n    return { sort: nextProps.sort };\n  }\n\n  return null;\n}\n\ncomponentDidUpdate(prevProps, prevState) {\n  const { filters: nextFilters, sort: nextSort } = this.state;\n  const { filters, sort } = prevState;\n\n  if (nextFilters.length !== filters.length) {\n    this.handleFetchProducts(nextFilters, undefined);\n  }\n\n  if (nextSort !== sort) {\n    this.handleFetchProducts(undefined, nextSort);\n  }\n}\n\nhandleFetchProducts = (\n  filters = this.state.filters,\n  sort = this.state.sort\n) => {\n  this.setState({ isLoading: true });\n  this.props.fetchProducts(filters, sort, () => {\n    this.setState({ isLoading: false });\n  });\n};\n\n  render() {\n    const { products } = this.props;\n    const { isLoading } = this.state;\n\n    return (\n      <React.Fragment>\n        {isLoading && <Spinner />}\n        <div className=\"shelf-container\">\n          <ShelfHeader productsLength={products.length} />\n          <ProductList products={products} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  products: state.shelf.products,\n  filters: state.filters.items,\n  sort: state.sort.type\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchProducts }\n)(Shelf);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Checkbox extends React.Component {\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    handleCheckboxChange: PropTypes.func.isRequired\n  };\n\n  state = {\n    isChecked: false\n  };\n\n  toggleCheckboxChange = () => {\n    const { handleCheckboxChange, label } = this.props;\n\n    this.setState(({ isChecked }) => ({\n      isChecked: !isChecked\n    }));\n\n    handleCheckboxChange(label);\n  };\n\n  render() {\n    const { label, classes } = this.props;\n    const { isChecked } = this.state;\n\n    return (\n      <div className={classes}>\n        <label>\n          <input\n            type=\"checkbox\"\n            value={label}\n            checked={isChecked}\n            onChange={this.toggleCheckboxChange}\n          />\n\n          <span className=\"checkmark\">{label}</span>\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Checkbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { updateFilters } from '../../../../../../services/filters/actions';\nimport Checkbox from '../Checkbox';\n\nimport './css/style.scss';\n\nconst availableSizes = ['XS', 'S', 'M', 'ML', 'L', 'XL', 'XXL'];\n\nclass Filter extends React.Component {\n  static propTypes = {\n    updateFilters: PropTypes.func.isRequired,\n    filters: PropTypes.array\n  };\n\n  componentDidMount() {\n    this.selectedCheckboxes = new Set();\n  }\n\n  toggleCheckbox = label => {\n    if (this.selectedCheckboxes.has(label)) {\n      this.selectedCheckboxes.delete(label);\n    } else {\n      this.selectedCheckboxes.add(label);\n    }\n\n    this.props.updateFilters(Array.from(this.selectedCheckboxes));\n  };\n\n  createCheckbox = label => (\n    <Checkbox\n      classes=\"filters-available-size\"\n      label={label}\n      handleCheckboxChange={this.toggleCheckbox}\n      key={label}\n    />\n  );\n\n  createCheckboxes = () => availableSizes.map(this.createCheckbox);\n\n  render() {\n    return (\n      <div className=\"store__filters filters\">\n        <h4 className=\"title\">Sizes:</h4>\n        {this.createCheckboxes()}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { updateFilters }\n)(Filter);\n","import { UPDATE_FILTER } from './actionTypes';\n\nexport const updateFilters = filters => ({\n  type: UPDATE_FILTER,\n  payload: filters\n});\n","import React from 'react';\n\nimport Shelf from './components/shelf';\nimport Filter from './components/shelf/components/Filter';\n\nclass Shop extends React.Component {\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n\n    return (\n      <div className=\"store\">\n        <Filter />\n        {/* <div className=\"alert alert-warning alert-dismissible fade show text-center\" role=\"alert\">\n          <strong>None of the items are for purchase. This is only for testing purposes.</strong>\n          <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div> */}\n        <div className='store__header'>\n          <div className=\"store__text\">\n            <h1>Store</h1>\n          </div>\n        </div>\n        <div className=\"store__shelf\">\n          <Shelf />\n        </div>\n      </div>\n    )\n  }\n};\n\nexport default Shop;\n"],"sourceRoot":""}