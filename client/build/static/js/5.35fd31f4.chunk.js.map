{"version":3,"sources":["components/contact/components/ContactForm.js","components/Modal.js","components/contact/index.js","services/contact/actions.js"],"names":["ContactForm","renderInput","input","label","meta","className","error","touched","type","placeholder","autoComplete","renderError","onSubmit","formValues","props","style","marginBottom","this","handleSubmit","Field","name","component","loading","role","aria-hidden","React","Component","reduxForm","form","validate","errors","firstName","lastName","email","MyModal","useState","showValue","show","setShow","console","log","svg","svgType","width","height","viewBox","fill","xmlns","fillRule","d","clipRule","color","x","y","rx","Modal","onHide","history","push","aria-labelledby","centered","dialogClassName","Header","closeButton","Title","title","Body","description","Footer","Button","onClick","handleState","closeDirect","buttonName","Contact","setState","contact","then","res","success","catch","err","state","duplicate","connect","dispatch","getState","a","async","axios","post","response","CONTACTED","payload","data"],"mappings":"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","file":"static/js/5.35fd31f4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nclass ContactForm extends React.Component {\r\n  renderError({ error, touched }) {\r\n    if (touched && error) {\r\n      return (\r\n        <div className=\"invalid-feedback\" style={{marginBottom: \".25rem\"}}>\r\n          {error}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  renderInput = ({ input, label, meta }) => {\r\n    const className = `form-control ${meta.error && meta.touched ? 'is-invalid':''}`\r\n    const type = label === 'Email' ? 'email': 'text';\r\n    if (label === 'Message'){\r\n      return (\r\n        <div>\r\n          <textarea {...input}\r\n            className={className}\r\n            placeholder={label}\r\n            autoComplete=\"off\"\r\n            type = {type}\r\n            />\r\n          {this.renderError(meta)}\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        <input {...input}\r\n          className={className}\r\n          placeholder={label}\r\n          autoComplete=\"off\"\r\n          type = {type}\r\n          />\r\n        {this.renderError(meta)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onSubmit= (formValues) => {\r\n    this.props.onSubmit(formValues);\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n        <div className=\"form-row mb-3\">\r\n          <div className=\"col\">\r\n            <Field name=\"firstName\"\r\n              component={this.renderInput}\r\n              label=\"First Name\" />\r\n          </div>\r\n          <div className=\"col\">\r\n            <Field name=\"lastName\"\r\n              component={this.renderInput}\r\n              label=\"Last Name\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group mb-3\">\r\n          <Field name=\"email\"\r\n            component={this.renderInput}\r\n            label=\"Email\"\r\n            />\r\n        </div>\r\n        <div className=\"form-group mb-3\">\r\n          <Field name=\"message\"\r\n            component={this.renderInput}\r\n            label=\"Message\"\r\n            />\r\n        </div>\r\n        <button className=\"btn btn-primary btn-block\" type=\"submit\">\r\n        {this.props.loading && <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> }\r\n        Submit\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n  const errors = {};\r\n\r\n  if (!formValues.firstName) {\r\n    errors.firstName = \"Invalid First Name\";\r\n  }\r\n  if(!formValues.lastName) {\r\n    errors.lastName = \"Invalid Last Name\";\r\n  }\r\n  if(!formValues.email) {\r\n    errors.email = \"Invalid Email\";\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'contactForm',\r\n  validate: validate\r\n})(ContactForm);\r\n","import React from 'react';\r\nimport {Modal , Button} from 'react-bootstrap';\r\nimport { useState } from 'react';\r\nimport history from '../history';\r\n\r\nimport './css/modal.css';\r\n\r\nconst MyModal = ( props ) => {\r\n    const [show, setShow] = useState(props.showValue);\r\n\r\n    console.log(props);\r\n    const handleClose = () => {\r\n      setShow(false);\r\n      history.push('/');\r\n    }\r\n\r\n    const handleButton = () => {\r\n      if(props.handleState){\r\n        props.handleState();\r\n      }\r\n\r\n      setShow(false);\r\n      history.push(props.closeDirect);\r\n    }\r\n\r\n    let svg;\r\n\r\n    switch (props.svgType) {\r\n      case 'empty':\r\n        svg = (\r\n          <svg className=\"bi bi-bucket\" width=\"2.5em\" height=\"2.5em\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fillRule=\"evenodd\" d=\"M10 3.5A4.5 4.5 0 005.5 8h-1a5.5 5.5 0 1111 0h-1A4.5 4.5 0 0010 3.5z\" clipRule=\"evenodd\"></path>\r\n            <path fillRule=\"evenodd\" d=\"M3.61 7.687A.5.5 0 014 7.5h12a.5.5 0 01.488.608l-1.826 8.217a1.5 1.5 0 01-1.464 1.175H6.802a1.5 1.5 0 01-1.464-1.175L3.512 8.108a.5.5 0 01.098-.42zm1.013.813l1.691 7.608a.5.5 0 00.488.392h6.396a.5.5 0 00.488-.392l1.69-7.608H4.624z\" clipRule=\"evenodd\"></path>\r\n          </svg>\r\n        )\r\n        break;\r\n      case 'warning':\r\n        svg = (\r\n          <svg className=\"bi bi-alert-triangle\" style={{color:\"orange\"}} width=\"2.5em\" height=\"2.5em\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fillRule=\"evenodd\" d=\"M9.938 4.016a.146.146 0 00-.054.057L3.027 15.74a.176.176 0 00-.002.183c.016.03.037.05.054.06.015.01.034.017.066.017h13.713a.12.12 0 00.066-.017.163.163 0 00.055-.06.176.176 0 00-.003-.183L10.12 4.073a.146.146 0 00-.054-.057.13.13 0 00-.063-.016.13.13 0 00-.064.016zm1.043-.45a1.13 1.13 0 00-1.96 0L2.166 15.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L10.982 3.566z\" clipRule=\"evenodd\">\r\n            </path>\r\n            <rect width=\"2\" height=\"2\" x=\"9.002\" y=\"13\" rx=\"1\"></rect>\r\n            <path d=\"M9.1 7.995a.905.905 0 111.8 0l-.35 3.507a.553.553 0 01-1.1 0L9.1 7.995z\"></path>\r\n          </svg>\r\n        )\r\n        break;\r\n      case 'error':\r\n        svg = (\r\n                <svg className=\"bi bi-alert-octagon\" style ={{color:\"red\"}} width=\"2.5em\" height=\"2.5em\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path fillRule=\"evenodd\" d=\"M6.54 2.146A.5.5 0 016.893 2h6.214a.5.5 0 01.353.146l4.394 4.394a.5.5 0 01.146.353v6.214a.5.5 0 01-.146.353l-4.394 4.394a.5.5 0 01-.353.146H6.893a.5.5 0 01-.353-.146L2.146 13.46A.5.5 0 012 13.107V6.893a.5.5 0 01.146-.353L6.54 2.146zM7.1 3L3 7.1v5.8L7.1 17h5.8l4.1-4.1V7.1L12.9 3H7.1z\" clipRule=\"evenodd\"></path>\r\n                  <rect width=\"2\" height=\"2\" x=\"9.002\" y=\"12\" rx=\"1\"></rect>\r\n                  <path d=\"M9.1 6.995a.905.905 0 111.8 0l-.35 3.507a.553.553 0 01-1.1 0L9.1 6.995z\"></path>\r\n                </svg>\r\n            )\r\n        break;\r\n      default:\r\n        svg = (\r\n          <svg className=\"bi bi-check-circle\" style={{color:\"green\"}} width=\"2.5em\" height=\"2.5em\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fillRule=\"evenodd\" d=\"M17.354 4.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3-3a.5.5 0 11.708-.708L10 11.293l6.646-6.647a.5.5 0 01.708 0z\" clipRule=\"evenodd\"></path>\r\n            <path fillRule=\"evenodd\" d=\"M10 4.5a5.5 5.5 0 105.5 5.5.5.5 0 011 0 6.5 6.5 0 11-3.25-5.63.5.5 0 11-.5.865A5.472 5.472 0 0010 4.5z\" clipRule=\"evenodd\"></path>\r\n          </svg>\r\n        )\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Modal show={show}\r\n          onHide={handleClose}\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          dialogClassName={\"contactModal\"}\r\n          >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n            {svg}\r\n            <br/>\r\n            <h4>{props.title}</h4>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>{props.description}</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button className=\"btn btn-primary btn-block\" onClick={handleButton}>\r\n              {props.buttonName}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default MyModal;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactForm from './components/ContactForm';\r\nimport { contact } from '../../services/contact/actions';\r\nimport Mymodal from '../Modal';\r\nimport {Modal} from 'react-bootstrap';\r\nimport history from '../../history';\r\n\r\nclass Contact extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: false,\r\n      loading: false,\r\n      success: false,\r\n      duplicate: false,\r\n      firstName: '',\r\n      lastName: ''\r\n    };\r\n  }\r\n\r\n  onSubmit = formValues => {\r\n\r\n    this.setState({\r\n      loading: true,\r\n      firstName: formValues.firstName,\r\n      lastName: formValues.lastName\r\n    });\r\n\r\n    this.props.contact(formValues)\r\n      .then(res => this.setState({success: true}))\r\n      .catch(err => this.setState({ error: true }));\r\n  }\r\n\r\n  render() {\r\n    const {error, success, loading, firstName, lastName} = this.state;\r\n    if(error){\r\n      const clientErrorDescription = `Looks like we are having problems on our side. I apologize\r\n      for the inconvience. Please feel free to email us at beersandbrewskies@gmail.com.`\r\n\r\n      return (\r\n            <Mymodal\r\n            showValue={true}\r\n            closeDirect = '/'\r\n            buttonName = 'Close'\r\n            title='Oops!'\r\n            description= {clientErrorDescription}\r\n            svgType=\"error\"\r\n            />\r\n      );\r\n    }\r\n\r\n    if(success){\r\n      const descriptionOrderCompleted = `We will get back to you as soon as possible!`;\r\n\r\n      return(\r\n        <Mymodal\r\n        showValue={true}\r\n        closeDirect = '/'\r\n        buttonName = 'OK'\r\n        title={`Thank You ${firstName} ${lastName}!`}\r\n        description= {descriptionOrderCompleted}\r\n        svgType=\"success\"\r\n        />\r\n      )\r\n    }\r\n\r\n      return (\r\n        <Modal show={true}\r\n          onHide={() => history.push('/')}\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              Say Or Ask Us Anything\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <ContactForm onSubmit={this.onSubmit} loading={loading}/>\r\n          </Modal.Body>\r\n        </Modal>\r\n    )\r\n  }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     contacted: state.contact.contacted,\r\n//     contactInfo: state.contact.contactInfo\r\n//   }\r\n// };\r\n\r\n\r\nexport default connect(null,{ contact })(Contact);\r\n","// import jsonApi from '../../apis/api';\r\nimport axios from 'axios';\r\nimport { CONTACTED } from './actionTypes';\r\n\r\nexport const contact = (formValues) => async (dispatch, getState) => {\r\n\r\n  // const response = await contacts.post('/contacts/add', {...formValues});\r\n  const response = await axios.post('/contact', {...formValues});\r\n\r\n  dispatch({ type: CONTACTED, payload: response.data });\r\n\r\n  // history.push('/contact?success');\r\n};\r\n"],"sourceRoot":""}