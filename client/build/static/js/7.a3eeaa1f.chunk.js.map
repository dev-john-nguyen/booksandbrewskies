{"version":3,"sources":["services/bb/actions.js","components/BB/components/StarRating.js","components/BB/components/Item.js","components/BB/utils/index.js","components/BB/index.js"],"names":["insert_rating","rating","id","a","async","isEmpty","axios","post","console","log","err","insert_comment","name","comment","StarRating","props","handleOnClick","e","itemId","setError","target","then","obj","setState","catch","state","hover","error","this","checkMark","className","width","height","viewBox","fill","xmlns","fillRule","d","clipRule","starSvg","fullStarSvg","starArray","i","push","key","onClick","onMouseOver","style","color","onMouseLeave","fontSize","React","Component","Item","comments","image","custAvg","custStar","myAvg","myStar","myComment","handleClose","useState","formName","setFormName","formComment","setFormComment","empty","setEmpty","commentSuccessObj","setCommentSuccessObj","loading","setLoading","Modal","showValue","closeDirect","buttonName","handleState","title","description","svgType","mapComments","map","item","index","src","alt","tabIndex","role","mousewheel","minHeight","overflow","type","aria-label","aria-hidden","onSubmit","preventDefault","placeholder","onChange","value","required","maxLength","halfStartSvg","BB","componentDidMount","get","reviewItems","data","handleLogin","password","login","enter","alert","itemObj","filterBB","review","filter","starRating","myReview","_id","custRating","ratings","length","sum","parseInt","avgCustomerRating","toFixed","avgCustStarRating","handleStarRating","imageUrl","top","data-toggle","minWidth","autoComplete","defaultChecked","flexWrap"],"mappings":"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","file":"static/js/7.a3eeaa1f.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { isEmpty } from 'lodash';\r\n\r\nexport const insert_rating = async(rating, id) => {\r\n\r\n    if (isEmpty(rating)) throw 'Rating is Empty';\r\n\r\n    if (isEmpty(id)) throw 'No Item';\r\n\r\n    let response;\r\n\r\n    try {\r\n        response = await axios.post('reviews/rating', {rating, id});\r\n    }catch(e){\r\n        console.log(e)\r\n        return {err : 'Sorry, we are having issues submitting your rating'};\r\n    }\r\n\r\n    return {rating: rating};\r\n}\r\n\r\nexport const insert_comment = async(name, comment, id) => {\r\n\r\n    if(isEmpty(comment)) throw 'No Comment';\r\n\r\n    if(isEmpty(name)) throw 'No Name';\r\n    \r\n    if(isEmpty(id))  throw 'No Item';\r\n\r\n    let response;\r\n\r\n    try {\r\n        response = await axios.post('reviews/comment', {name, comment, id});\r\n    }catch(e){\r\n        console.log(e)\r\n        return {err: 'Sorry, we are having issues submitting your comment'};\r\n    }\r\n\r\n    return {name, comment}\r\n}","import React from 'react'\r\nimport { insert_rating } from '../../../services/bb/actions';\r\n\r\nclass StarRating extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            rating: 0,\r\n            hover: 0,\r\n            error: false\r\n        }\r\n    }\r\n\r\n    handleOnClick = (e) => {\r\n\r\n        const { itemId, setError } = this.props;\r\n\r\n        insert_rating(e.target.name, itemId)\r\n            .then((obj) => {\r\n                if(obj.err) return setError();\r\n                this.setState({ rating: obj.rating });\r\n            })\r\n            .catch((e) => {\r\n                console.log(e)\r\n                setError();\r\n            });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { itemId } = this.props;\r\n\r\n        const checkMark = (\r\n            <svg className=\"bi bi-check-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\" d=\"M15.354 2.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3-3a.5.5 0 11.708-.708L8 9.293l6.646-6.647a.5.5 0 01.708 0z\" clipRule=\"evenodd\" />\r\n                <path fillRule=\"evenodd\" d=\"M8 2.5A5.5 5.5 0 1013.5 8a.5.5 0 011 0 6.5 6.5 0 11-3.25-5.63.5.5 0 11-.5.865A5.472 5.472 0 008 2.5z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n        )\r\n\r\n        const starSvg = (\r\n            <svg className=\"bi bi-star\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\" d=\"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.523-3.356c.329-.314.158-.888-.283-.95l-4.898-.696L8.465.792a.513.513 0 00-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767l-3.686 1.894.694-3.957a.565.565 0 00-.163-.505L1.71 6.745l4.052-.576a.525.525 0 00.393-.288l1.847-3.658 1.846 3.658a.525.525 0 00.393.288l4.052.575-2.906 2.77a.564.564 0 00-.163.506l.694 3.957-3.686-1.894a.503.503 0 00-.461 0z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n        )\r\n\r\n        const fullStarSvg = (\r\n            <svg className=\"bi bi-star-fill\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\" />\r\n            </svg>\r\n        )\r\n\r\n        let starArray = [];\r\n\r\n        if (this.state.rating === 0) {\r\n            for (let i = 1; i < 6; i++) {\r\n                starArray.push(\r\n                    <a className=\"p-1 mb-0\"\r\n                        key={itemId + i}\r\n                        name={i}\r\n                        onClick={this.handleOnClick}\r\n                        onMouseOver={(e) => this.setState({ hover: e.target.name })}\r\n                        style={this.state.hover > i ? { color: '#eabf00' } : {}}\r\n                    >\r\n                        {starSvg}\r\n                    </a>\r\n                )\r\n            }\r\n        } else {\r\n\r\n            for (let i = 1; i < 6; i++) {\r\n                if (this.state.rating >= i) {\r\n                    starArray.push(<p className=\"p-1 mb-0\" key={itemId + i}>{fullStarSvg}</p>);\r\n                } else {\r\n                    starArray.push(<p className=\"p-1 mb-0\" key={itemId + i}>{starSvg}</p>);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return (\r\n            <div className=\"star d-flex user-star-rating m-auto\" onMouseLeave={() => this.setState({ hover: 0 })} style={{ width: 'fit-content', fontSize: '1.5rem' }}>\r\n                {starArray}\r\n                {this.state.rating !== 0 && checkMark}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StarRating;","import React, { useState } from 'react';\r\nimport { isEmpty } from 'lodash';\r\nimport StarRating from './StarRating';\r\nimport { insert_comment } from '../../../services/bb/actions';\r\nimport Modal from '../../Modal';\r\n\r\nconst Item = ({ name, id, comments, image, custAvg, custStar, myAvg, myStar, myComment, handleClose }) => {\r\n    const [formName, setFormName] = useState('');\r\n    const [formComment, setFormComment] = useState('');\r\n    const [empty, setEmpty] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [commentSuccessObj, setCommentSuccessObj] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        if (isEmpty(formName) || isEmpty(formComment)) {\r\n            setEmpty(true);\r\n            setLoading(false);\r\n        }\r\n\r\n        insert_comment(formName, formComment, id)\r\n            .then((obj) => {\r\n                setCommentSuccessObj({ name: obj.name, comment: obj.comment });\r\n                setFormComment('');\r\n                setLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setError(true);\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    if (empty) {\r\n        return (\r\n            <Modal\r\n                showValue={true}\r\n                closeDirect='/bb'\r\n                buttonName='Back'\r\n                handleState={() => {\r\n                    setEmpty(false);\r\n                }}\r\n                title='Empty'\r\n                description='One of the fields are empty.'\r\n                svgType=\"empty\"\r\n            />\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <Modal\r\n                showValue={true}\r\n                closeDirect='/bb'\r\n                buttonName='Back'\r\n                handleState={() => {\r\n                    setError(false);\r\n                    handleClose()\r\n                }}\r\n                title='Error'\r\n                description='Sorry, something went wrong'\r\n                svgType=\"error\"\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n\r\n    if (!isEmpty(commentSuccessObj)) {\r\n        comments.push(commentSuccessObj);\r\n        setCommentSuccessObj({});\r\n    }\r\n\r\n    let mapComments = [];\r\n\r\n    if (!isEmpty(comments)) {\r\n        mapComments = comments.map((item, index) => {\r\n            return (\r\n                <div className=\"media\" key={index}>\r\n                    <img src=\"./media/logo.png\" className=\"mr-3\" alt=\"BB\" />\r\n                    <div className=\"media-body\">\r\n                        <p className=\"mt-0 mb-0\" style={{ fontSize: \"1rem\" }}>{item.name}</p>\r\n                        <p className=\"text-muted\">{item.comment}</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"modal d-flex\" tabIndex=\"-1\" role=\"dialog\" id='main' mousewheel='passive'>\r\n                <div className=\"position-absolute h-100 w-100\" onClick={handleClose} />\r\n                <div className=\"modal-dialog w-100\" role=\"document\">\r\n                    <div className=\"modal-content\" style={{ minHeight: '90vh', overflow: 'auto' }}>\r\n                        <div className=\"modal-header justify-content-end\">\r\n                            <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={handleClose}>\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"container-fluid\">\r\n                        <div className=\"row m-auto\" style={{ fontSize: '.6rem' }}>\r\n                            <div className=\"col-6 text-right\"><img src={image} className=\"img-fluid rounded shadow\" alt=\"item image\" /></div>\r\n\r\n                            <div className=\"col\">\r\n                                <h5 className=\"modal-title\">{name}</h5>\r\n                                <div className=\"d-flex\"><p>Our<br />Rating:</p><div className=\"star d-flex mb-0 ml-1\">{myStar}{myAvg}</div></div>\r\n                                <div className=\"d-flex\"><p>Average<br />Rating:</p><div className=\"star d-flex mb-0 ml-1\">{custStar}{custAvg}</div></div>\r\n                                <div className=\"d-flex\">Our<br />Comment:<p className=\"text-muted mb-0 ml-1\">{myComment}</p></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row m-auto w-100\">\r\n                            <div className=\"col\">\r\n                        <form onSubmit={handleFormSubmit}>\r\n                            <div className=\"modal-body\">\r\n                                {(!isEmpty(mapComments)) ? mapComments : <p>No Comments</p>}\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Name\" name=\"Name\"\r\n                                        onChange={(e) => setFormName(e.target.value)}\r\n                                        value={formName}\r\n                                        required />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        maxLength='500'\r\n                                        placeholder=\"What do you think?\"\r\n                                        name=\"Comment\"\r\n                                        onChange={(e) => setFormComment(e.target.value)}\r\n                                        value={formComment} style={{ minHeight: '150px' }}\r\n                                        required />\r\n                                </div>\r\n                                <p className=\"m-0\">Rating</p>\r\n                                <StarRating itemId={id} setError={() => setError(true)} />\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"submit\" className='btn btn-primary btn-block'>\r\n                                    {loading && <span className=\"spinner-border spinner-border-sm mb-1\" role=\"status\" aria-hidden=\"true\"></span>}\r\n                            Submit\r\n                            </button>\r\n                            </div>\r\n                        </form>\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Item;","import React from 'react';\r\n\r\nconst starSvg = (\r\n    <svg className=\"bi bi-star\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path fillRule=\"evenodd\" d=\"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.523-3.356c.329-.314.158-.888-.283-.95l-4.898-.696L8.465.792a.513.513 0 00-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767l-3.686 1.894.694-3.957a.565.565 0 00-.163-.505L1.71 6.745l4.052-.576a.525.525 0 00.393-.288l1.847-3.658 1.846 3.658a.525.525 0 00.393.288l4.052.575-2.906 2.77a.564.564 0 00-.163.506l.694 3.957-3.686-1.894a.503.503 0 00-.461 0z\" clipRule=\"evenodd\" />\r\n    </svg>\r\n)\r\n\r\nconst fullStarSvg = (\r\n    <svg className=\"bi bi-star-fill\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\" />\r\n    </svg>\r\n)\r\n\r\nconst halfStartSvg = (\r\n    <svg className=\"bi bi-star-half\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path fillRule=\"evenodd\" d=\"M5.354 5.119L7.538.792A.516.516 0 018 .5c.183 0 .366.097.465.292l2.184 4.327 4.898.696A.537.537 0 0116 6.32a.55.55 0 01-.17.445l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256a.519.519 0 01-.146.05c-.341.06-.668-.254-.6-.642l.83-4.73L.173 6.765a.55.55 0 01-.171-.403.59.59 0 01.084-.302.513.513 0 01.37-.245l4.898-.696zM8 12.027c.08 0 .16.018.232.056l3.686 1.894-.694-3.957a.564.564 0 01.163-.505l2.906-2.77-4.052-.576a.525.525 0 01-.393-.288L8.002 2.223 8 2.226v9.8z\" clipRule=\"evenodd\" />\r\n    </svg>\r\n)\r\n\r\n\r\nexport const handleStarRating = (ratings) => {\r\n            //calc customer rating avg\r\n\r\n            if(ratings.length < 1){\r\n                ratings.push(0)\r\n            }\r\n            let sum = 0;\r\n            for (let i = 0; i < ratings.length; i++) {\r\n                sum += parseInt(ratings[i], 10);\r\n            }\r\n\r\n            let avgCustomerRating = sum / ratings.length;\r\n\r\n            avgCustomerRating % 1 !== 0 && (avgCustomerRating = avgCustomerRating.toFixed(1))\r\n\r\n            let avgCustStarRating = [];\r\n\r\n            for (let i = 1; i < 6; i++) {\r\n                if (avgCustomerRating >= i) {\r\n                    avgCustStarRating.push(<p className=\"p-1\" key={'avg' + i}>{fullStarSvg}</p>);\r\n                } else {\r\n                    if (avgCustomerRating <= (i - .5) && avgCustomerRating > (i - 1)) {\r\n                        avgCustStarRating.push(<p className=\"p-1\" key={'avg' + i}>{halfStartSvg}</p>);\r\n                    } else {\r\n                        avgCustStarRating.push(<p className=\"p-1\" key={'avg' + i}>{starSvg}</p>);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return {avgCustomerRating, avgCustStarRating}\r\n}","import React from 'react';\r\nimport { isEmpty } from 'lodash';\r\nimport axios from 'axios';\r\nimport Modal from '../Modal';\r\nimport Spinner from '../spinner';\r\nimport Item from './components/Item';\r\nimport { handleStarRating } from './utils';\r\n\r\nclass BB extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            reviewItems: [],\r\n            error: false,\r\n            loading: true,\r\n            itemObj: {},\r\n            filterBB: 'all',\r\n            login: {enter: false, password: 'ShaneHasABigLeftNut'},\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        let reviewItems;\r\n\r\n        try {\r\n            reviewItems = await axios.get('/reviews');\r\n        } catch (e) {\r\n            console.log(e)\r\n            return this.setState({ error: true, loading: false })\r\n        }\r\n\r\n        this.setState({ reviewItems: reviewItems.data, loading: false });\r\n\r\n    }\r\n\r\n    handleLogin = (e) => {\r\n        e.preventDefault()\r\n        if(this.state.password === this.state.login.password){\r\n            this.setState({login: {enter: true}})\r\n        }else{\r\n            alert('Incorrect Password');\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.login.enter) {\r\n            return (\r\n                <div className=\"row align-items-center m-auto text-center\" style={{height: '90vh'}}>\r\n                    <div className=\"col align-self-center\">                     \r\n                        <form className=\"login m-auto w-50 rounded\" onSubmit={this.handleLogin}>\r\n                        <h1>Only Men Can Enter</h1>\r\n                            <input type='password' placeholder=\"password\" name='password' className=\"form-control\" value={this.state.password} onChange={(e) => this.setState({ password: e.target.value })} />\r\n                            <button type=\"submit\" className=\"btn btn-primary mt-3 ml-auto mr-auto\">Login</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const starSvg = (\r\n            <svg className=\"bi bi-star\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\" d=\"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.523-3.356c.329-.314.158-.888-.283-.95l-4.898-.696L8.465.792a.513.513 0 00-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767l-3.686 1.894.694-3.957a.565.565 0 00-.163-.505L1.71 6.745l4.052-.576a.525.525 0 00.393-.288l1.847-3.658 1.846 3.658a.525.525 0 00.393.288l4.052.575-2.906 2.77a.564.564 0 00-.163.506l.694 3.957-3.686-1.894a.503.503 0 00-.461 0z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n        )\r\n\r\n        const fullStarSvg = (\r\n            <svg className=\"bi bi-star-fill\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\" />\r\n            </svg>\r\n        )\r\n\r\n        const halfStartSvg = (\r\n            <svg className=\"bi bi-star-half\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\" d=\"M5.354 5.119L7.538.792A.516.516 0 018 .5c.183 0 .366.097.465.292l2.184 4.327 4.898.696A.537.537 0 0116 6.32a.55.55 0 01-.17.445l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256a.519.519 0 01-.146.05c-.341.06-.668-.254-.6-.642l.83-4.73L.173 6.765a.55.55 0 01-.171-.403.59.59 0 01.084-.302.513.513 0 01.37-.245l4.898-.696zM8 12.027c.08 0 .16.018.232.056l3.686 1.894-.694-3.957a.564.564 0 01.163-.505l2.906-2.77-4.052-.576a.525.525 0 01-.393-.288L8.002 2.223 8 2.226v9.8z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n        )\r\n\r\n\r\n        if (this.state.loading) return <Spinner />;\r\n\r\n        if (this.state.error) {\r\n            return (\r\n                <Modal\r\n                    showValue={true}\r\n                    closeDirect='/'\r\n                    buttonName='Close'\r\n                    title='Error'\r\n                    description='Sorry, we are undergoing maintenance. Check back again later.'\r\n                    svgType=\"error\"\r\n                />\r\n            )\r\n        }\r\n\r\n        if (isEmpty(this.state.reviewItems)) {\r\n            return (\r\n                <Modal\r\n                    showValue={true}\r\n                    closeDirect='/'\r\n                    buttonName='Close'\r\n                    title='Empty'\r\n                    description=\"We currently don't have any items. Check back again later.\"\r\n                    svgType=\"empty\"\r\n                />\r\n            )\r\n\r\n        }\r\n\r\n        const review = this.state.reviewItems.filter((item) => {\r\n            if (this.state.filterBB === 'all') {\r\n                return true;\r\n            } else if (item.type === this.state.filterBB) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }).map((item, index) => {\r\n            let starRating = [];\r\n\r\n            for (let i = 1; i < 6; i++) {\r\n                if (item.myReview.rating >= i) {\r\n                    starRating.push(<p className=\"p-1\" key={item._id + i}>{fullStarSvg}</p>);\r\n                } else {\r\n                    if (item.myReview.rating <= (i - .5) && item.myReview.rating > (i - 1)) {\r\n                        starRating.push(<p className=\"p-1\" key={item._id + i}>{halfStartSvg}</p>);\r\n                    } else {\r\n                        starRating.push(<p className=\"p-1\" key={item._id + i}>{starSvg}</p>);\r\n                    }\r\n                }\r\n            }\r\n\r\n            const custRating = handleStarRating(item.ratings);\r\n\r\n            // //calc customer rating avg\r\n            // let sum = 0;\r\n            // for (let i = 0; i < item.ratings.length; i++) {\r\n            //     sum += parseInt(item.ratings[i], 10);\r\n            // }\r\n\r\n            // let avgCustomerRating = sum / item.ratings.length;\r\n\r\n            // avgCustomerRating % 1 !== 0 && (avgCustomerRating = avgCustomerRating.toFixed(1))\r\n\r\n            // let avgCustStarRating = [];\r\n\r\n            // for (let i = 1; i < 6; i++) {\r\n            //     if (avgCustomerRating >= i) {\r\n            //         avgCustStarRating.push(<p className=\"p-1\" key={'avg' + i}>{fullStarSvg}</p>);\r\n            //     } else {\r\n            //         if (avgCustomerRating <= (i - .5) && avgCustomerRating > (i - 1)) {\r\n            //             avgCustStarRating.push(<p className=\"p-1\" key={'avg' + i}>{halfStartSvg}</p>);\r\n            //         } else {\r\n            //             avgCustStarRating.push(<p className=\"p-1\" key={'avg' + i}>{starSvg}</p>);\r\n            //         }\r\n            //     }\r\n            // }\r\n\r\n            return (\r\n                <div className=\"bb-item m-3 p-2 d-flex align-items-start flex-column rounded\" style={{ width: '250px' }} key={index}>\r\n                    <img className=\"img-fluid rounded shadow\" src={item.imageUrl} alt={item.name} width='250' height='350' key={index} style={{ height: '350px' }} />\r\n                    <div className=\"item-content\">\r\n                        <h2>{item.name}</h2>\r\n                        <p>From: {item.description}</p>\r\n                        <div className=\"d-flex\">\r\n                            <p>Our<br />Rating:</p>\r\n                            <div className=\"star d-flex ml-1\">\r\n                                {starRating}\r\n                                <div>{item.myReview.rating}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"cust-avg-rating d-flex\">\r\n                            <p>Average<br />rating:</p>\r\n                            <div className=\"star ml-1 d-flex\">{custRating.avgCustStarRating}{custRating.avgCustomerRating}</div></div>\r\n                    </div>\r\n                    <button\r\n                        className=\"btn btn-primary btn-block mt-auto p-2\"\r\n                        onClick={() => this.setState(\r\n                            {\r\n                                itemObj:\r\n                                {\r\n                                    name: item.name,\r\n                                    id: item._id,\r\n                                    comments: item.comments,\r\n                                    image: item.imageUrl,\r\n                                    custAvg: custRating.avgCustomerRating,\r\n                                    custStar: custRating.avgCustStarRating,\r\n                                    myAvg: item.myReview.rating,\r\n                                    myComment: item.myReview.comment,\r\n                                    myStar: starRating\r\n                                }\r\n                            })}>\r\n                        View\r\n                    </button>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        const { itemObj, filterBB } = this.state;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row mb-5\">\r\n                    <h1 className=\"m-auto position-relative\" style={{top: '20px'}}>B/B Reviews</h1>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"btn-group btn-group-toggle m-auto w-50\" data-toggle=\"buttons\" style={{minWidth: '300px'}}>\r\n                        <label className=\"btn btn-secondary\">\r\n                            <input type=\"radio\" name=\"book\" id=\"book\" autoComplete=\"off\" onClick={() => this.setState({filterBB: 'book'})} />\r\n                            Books\r\n                        </label>\r\n                        <label className=\"btn btn-secondary active\">\r\n                            <input type=\"radio\" name=\"all\" id=\"all\" autoComplete=\"off\" onClick={() => this.setState({filterBB: 'all'})} defaultChecked/>\r\n                            All\r\n                         </label>\r\n                        <label className=\"btn btn-secondary\">\r\n                            <input type=\"radio\" name=\"beer\" id=\"beer\" autoComplete=\"off\" onClick={() => this.setState({filterBB: 'beer'})}/>\r\n                            Beers\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\" style={{ flexWrap: 'wrap' }}>\r\n                    {review}\r\n                </div>\r\n                {!isEmpty(itemObj) && <Item\r\n                    name={itemObj.name}\r\n                    id={itemObj.id}\r\n                    comments={itemObj.comments}\r\n                    image={itemObj.image}\r\n                    custAvg={itemObj.custAvg}\r\n                    custStar={itemObj.custStar}\r\n                    myAvg={itemObj.myAvg}\r\n                    myStar={itemObj.myStar}\r\n                    myComment={itemObj.myComment}\r\n                    handleClose={() => this.setState({ itemObj: {} })\r\n                    }\r\n                />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BB;"],"sourceRoot":""}