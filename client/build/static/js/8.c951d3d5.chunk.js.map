{"version":3,"sources":["components/contact/components/ContactForm.js","components/contact/index.js","services/contact/actions.js"],"names":["ContactForm","renderInput","input","label","meta","className","error","touched","type","placeholder","autoComplete","renderError","onSubmit","formValues","props","style","marginBottom","this","handleSubmit","Field","name","component","loading","role","aria-hidden","React","Component","reduxForm","form","validate","errors","firstName","lastName","email","Contact","setState","contact","then","res","success","catch","err","state","duplicate","showValue","closeDirect","buttonName","title","description","svgType","show","onHide","history","push","aria-labelledby","centered","Header","closeButton","Title","Body","connect","dispatch","getState","a","async","axios","post","response","CONTACTED","payload","data"],"mappings":"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","file":"static/js/8.c951d3d5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nclass ContactForm extends React.Component {\r\n  renderError({ error, touched }) {\r\n    if (touched && error) {\r\n      return (\r\n        <div className=\"invalid-feedback\" style={{marginBottom: \".25rem\"}}>\r\n          {error}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  renderInput = ({ input, label, meta }) => {\r\n    const className = `form-control ${meta.error && meta.touched ? 'is-invalid':''}`\r\n    const type = label === 'Email' ? 'email': 'text';\r\n    if (label === 'Message'){\r\n      return (\r\n        <div>\r\n          <textarea {...input}\r\n            className={className}\r\n            placeholder={label}\r\n            autoComplete=\"off\"\r\n            type = {type}\r\n            />\r\n          {this.renderError(meta)}\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        <input {...input}\r\n          className={className}\r\n          placeholder={label}\r\n          autoComplete=\"off\"\r\n          type = {type}\r\n          />\r\n        {this.renderError(meta)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onSubmit= (formValues) => {\r\n    this.props.onSubmit(formValues);\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n        <div className=\"form-row mb-3\">\r\n          <div className=\"col\">\r\n            <Field name=\"firstName\"\r\n              component={this.renderInput}\r\n              label=\"First Name\" />\r\n          </div>\r\n          <div className=\"col\">\r\n            <Field name=\"lastName\"\r\n              component={this.renderInput}\r\n              label=\"Last Name\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group mb-3\">\r\n          <Field name=\"email\"\r\n            component={this.renderInput}\r\n            label=\"Email\"\r\n            />\r\n        </div>\r\n        <div className=\"form-group mb-3\">\r\n          <Field name=\"message\"\r\n            component={this.renderInput}\r\n            label=\"Message\"\r\n            />\r\n        </div>\r\n        <button className=\"btn btn-primary btn-block\" type=\"submit\">\r\n        {this.props.loading && <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> }\r\n        Submit\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n  const errors = {};\r\n\r\n  if (!formValues.firstName) {\r\n    errors.firstName = \"Invalid First Name\";\r\n  }\r\n  if(!formValues.lastName) {\r\n    errors.lastName = \"Invalid Last Name\";\r\n  }\r\n  if(!formValues.email) {\r\n    errors.email = \"Invalid Email\";\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'contactForm',\r\n  validate: validate\r\n})(ContactForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactForm from './components/ContactForm';\r\nimport { contact } from '../../services/contact/actions';\r\nimport Mymodal from '../Modal';\r\nimport {Modal} from 'react-bootstrap';\r\nimport history from '../../history';\r\n\r\nclass Contact extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: false,\r\n      loading: false,\r\n      success: false,\r\n      duplicate: false,\r\n      firstName: '',\r\n      lastName: ''\r\n    };\r\n  }\r\n\r\n  onSubmit = formValues => {\r\n\r\n    this.setState({\r\n      loading: true,\r\n      firstName: formValues.firstName,\r\n      lastName: formValues.lastName\r\n    });\r\n\r\n    this.props.contact(formValues)\r\n      .then(res => this.setState({success: true}))\r\n      .catch(err => this.setState({ error: true }));\r\n  }\r\n\r\n  render() {\r\n    const {error, success, loading, firstName, lastName} = this.state;\r\n    if(error){\r\n      const clientErrorDescription = `Looks like we are having problems on our side. I apologize\r\n      for the inconvience. Please feel free to email us at beersandbrewskies@gmail.com.`\r\n\r\n      return (\r\n            <Mymodal\r\n            showValue={true}\r\n            closeDirect = '/'\r\n            buttonName = 'Close'\r\n            title='Oops!'\r\n            description= {clientErrorDescription}\r\n            svgType=\"error\"\r\n            />\r\n      );\r\n    }\r\n\r\n    if(success){\r\n      const descriptionOrderCompleted = `We will get back to you as soon as possible!`;\r\n\r\n      return(\r\n        <Mymodal\r\n        showValue={true}\r\n        closeDirect = '/'\r\n        buttonName = 'OK'\r\n        title={`Thank You ${firstName} ${lastName}!`}\r\n        description= {descriptionOrderCompleted}\r\n        svgType=\"success\"\r\n        />\r\n      )\r\n    }\r\n\r\n      return (\r\n        <Modal show={true}\r\n          onHide={() => history.push('/')}\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              Say Or Ask Us Anything\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <ContactForm onSubmit={this.onSubmit} loading={loading}/>\r\n          </Modal.Body>\r\n        </Modal>\r\n    )\r\n  }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     contacted: state.contact.contacted,\r\n//     contactInfo: state.contact.contactInfo\r\n//   }\r\n// };\r\n\r\n\r\nexport default connect(null,{ contact })(Contact);\r\n","// import jsonApi from '../../apis/api';\r\nimport axios from 'axios';\r\nimport { CONTACTED } from './actionTypes';\r\n\r\nexport const contact = (formValues) => async (dispatch, getState) => {\r\n\r\n  // const response = await contacts.post('/contacts/add', {...formValues});\r\n  const response = await axios.post('/contact', {...formValues});\r\n\r\n  dispatch({ type: CONTACTED, payload: response.data });\r\n\r\n  // history.push('/contact?success');\r\n};\r\n"],"sourceRoot":""}