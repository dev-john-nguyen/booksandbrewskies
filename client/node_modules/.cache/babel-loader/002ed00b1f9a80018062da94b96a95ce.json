{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskiesproject\\\\beersandbrewskies\\\\src\\\\components\\\\contact\\\\components\\\\ContactForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass ContactForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderInput = ({\n      input,\n      label,\n      meta\n    }) => {\n      const className = `form-control ${meta.error && meta.touched ? 'is-invalid' : ''}`;\n      const type = label === 'Email' ? 'email' : 'text';\n\n      if (label === 'Message') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(\"textarea\", Object.assign({}, input, {\n          className: className,\n          placeholder: label,\n          autoComplete: \"off\",\n          type: type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        })), this.renderError(meta));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({}, input, {\n        className: className,\n        placeholder: label,\n        autoComplete: \"off\",\n        type: type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })), this.renderError(meta));\n    };\n\n    this.onSubmit = formValues => {\n      this.props.onSubmit(formValues);\n    };\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        style: {\n          marginBottom: \".25rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, error);\n    }\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"firstName\",\n      component: this.renderInput,\n      label: \"First Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"lastName\",\n      component: this.renderInput,\n      label: \"Last Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"email\",\n      component: this.renderInput,\n      label: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"message\",\n      component: this.renderInput,\n      label: \"Message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.firstName) {\n    errors.firstName = \"Invalid First Name\";\n  }\n\n  if (!formValues.lastName) {\n    errors.lastName = \"Invalid Last Name\";\n  }\n\n  if (!formValues.email) {\n    errors.email = \"Invalid Email\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'contactForm',\n  validate: validate\n})(ContactForm);","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskiesproject/beersandbrewskies/src/components/contact/components/ContactForm.js"],"names":["React","Field","reduxForm","ContactForm","Component","renderInput","input","label","meta","className","error","touched","type","renderError","onSubmit","formValues","props","marginBottom","render","handleSubmit","validate","errors","firstName","lastName","email","form"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nclass ContactForm extends React.Component {\r\n  renderError({ error, touched }) {\r\n    if (touched && error) {\r\n      return (\r\n        <div className=\"invalid-feedback\" style={{marginBottom: \".25rem\"}}>\r\n          {error}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  renderInput = ({ input, label, meta }) => {\r\n    const className = `form-control ${meta.error && meta.touched ? 'is-invalid':''}`\r\n    const type = label === 'Email' ? 'email': 'text';\r\n    if (label === 'Message'){\r\n      return (\r\n        <div>\r\n          <textarea {...input}\r\n            className={className}\r\n            placeholder={label}\r\n            autoComplete=\"off\"\r\n            type = {type}\r\n            />\r\n          {this.renderError(meta)}\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        <input {...input}\r\n          className={className}\r\n          placeholder={label}\r\n          autoComplete=\"off\"\r\n          type = {type}\r\n          />\r\n        {this.renderError(meta)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onSubmit= (formValues) => {\r\n    this.props.onSubmit(formValues);\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col\">\r\n            <Field name=\"firstName\"\r\n              component={this.renderInput}\r\n              label=\"First Name\" />\r\n          </div>\r\n          <div className=\"col\">\r\n            <Field name=\"lastName\"\r\n              component={this.renderInput}\r\n              label=\"Last Name\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-3\">\r\n          <Field name=\"email\"\r\n            component={this.renderInput}\r\n            label=\"Email\"\r\n            />\r\n        </div>\r\n        <div className=\"row mb-3\">\r\n          <Field name=\"message\"\r\n            component={this.renderInput}\r\n            label=\"Message\"\r\n            />\r\n        </div>\r\n        <button className=\"btn btn-primary btn-block\" type=\"submit\">Submit</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n  const errors = {};\r\n\r\n  if (!formValues.firstName) {\r\n    errors.firstName = \"Invalid First Name\";\r\n  }\r\n  if(!formValues.lastName) {\r\n    errors.lastName = \"Invalid Last Name\";\r\n  }\r\n  if(!formValues.email) {\r\n    errors.email = \"Invalid Email\";\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'contactForm',\r\n  validate: validate\r\n})(ContactForm);\r\n"]},"metadata":{},"sourceType":"module"}