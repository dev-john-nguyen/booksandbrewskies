{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskiesproject\\\\booksandbrewskies\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskiesproject\\\\booksandbrewskies\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskiesproject\\\\booksandbrewskies\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskiesproject\\\\booksandbrewskies\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskiesproject\\\\booksandbrewskies\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{Field,reduxForm}from'redux-form';var ContactForm=/*#__PURE__*/function(_React$Component){_inherits(ContactForm,_React$Component);function ContactForm(){var _getPrototypeOf2;var _this;_classCallCheck(this,ContactForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ContactForm)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.renderInput=function(_ref){var input=_ref.input,label=_ref.label,meta=_ref.meta;var className=\"form-control \".concat(meta.error&&meta.touched?'is-invalid':'');var type=label==='Email'?'email':'text';if(label==='Message'){return React.createElement(\"div\",null,React.createElement(\"textarea\",Object.assign({},input,{className:className,placeholder:label,autoComplete:\"off\",type:type})),_this.renderError(meta));}return React.createElement(\"div\",null,React.createElement(\"input\",Object.assign({},input,{className:className,placeholder:label,autoComplete:\"off\",type:type})),_this.renderError(meta));};_this.onSubmit=function(formValues){_this.props.onSubmit(formValues);};return _this;}_createClass(ContactForm,[{key:\"renderError\",value:function renderError(_ref2){var error=_ref2.error,touched=_ref2.touched;if(touched&&error){return React.createElement(\"div\",{className:\"invalid-feedback\",style:{marginBottom:\".25rem\"}},error);}}},{key:\"render\",value:function render(){return React.createElement(\"form\",{onSubmit:this.props.handleSubmit(this.onSubmit)},React.createElement(\"div\",{className:\"form-row mb-3\"},React.createElement(\"div\",{className:\"col\"},React.createElement(Field,{name:\"firstName\",component:this.renderInput,label:\"First Name\"})),React.createElement(\"div\",{className:\"col\"},React.createElement(Field,{name:\"lastName\",component:this.renderInput,label:\"Last Name\"}))),React.createElement(\"div\",{className:\"form-group mb-3\"},React.createElement(Field,{name:\"email\",component:this.renderInput,label:\"Email\"})),React.createElement(\"div\",{className:\"form-group mb-3\"},React.createElement(Field,{name:\"message\",component:this.renderInput,label:\"Message\"})),React.createElement(\"button\",{className:\"btn btn-primary btn-block\",type:\"submit\"},this.props.loading&&React.createElement(\"span\",{className:\"spinner-border spinner-border-sm\",role:\"status\",\"aria-hidden\":\"true\"}),\"Submit\"));}}]);return ContactForm;}(React.Component);var validate=function validate(formValues){var errors={};if(!formValues.firstName){errors.firstName=\"Invalid First Name\";}if(!formValues.lastName){errors.lastName=\"Invalid Last Name\";}if(!formValues.email){errors.email=\"Invalid Email\";}return errors;};export default reduxForm({form:'contactForm',validate:validate})(ContactForm);","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskiesproject/booksandbrewskies/client/src/components/contact/components/ContactForm.js"],"names":["React","Field","reduxForm","ContactForm","renderInput","input","label","meta","className","error","touched","type","renderError","onSubmit","formValues","props","marginBottom","handleSubmit","loading","Component","validate","errors","firstName","lastName","email","form"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nclass ContactForm extends React.Component {\r\n  renderError({ error, touched }) {\r\n    if (touched && error) {\r\n      return (\r\n        <div className=\"invalid-feedback\" style={{marginBottom: \".25rem\"}}>\r\n          {error}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  renderInput = ({ input, label, meta }) => {\r\n    const className = `form-control ${meta.error && meta.touched ? 'is-invalid':''}`\r\n    const type = label === 'Email' ? 'email': 'text';\r\n    if (label === 'Message'){\r\n      return (\r\n        <div>\r\n          <textarea {...input}\r\n            className={className}\r\n            placeholder={label}\r\n            autoComplete=\"off\"\r\n            type = {type}\r\n            />\r\n          {this.renderError(meta)}\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        <input {...input}\r\n          className={className}\r\n          placeholder={label}\r\n          autoComplete=\"off\"\r\n          type = {type}\r\n          />\r\n        {this.renderError(meta)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onSubmit= (formValues) => {\r\n    this.props.onSubmit(formValues);\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n        <div className=\"form-row mb-3\">\r\n          <div className=\"col\">\r\n            <Field name=\"firstName\"\r\n              component={this.renderInput}\r\n              label=\"First Name\" />\r\n          </div>\r\n          <div className=\"col\">\r\n            <Field name=\"lastName\"\r\n              component={this.renderInput}\r\n              label=\"Last Name\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group mb-3\">\r\n          <Field name=\"email\"\r\n            component={this.renderInput}\r\n            label=\"Email\"\r\n            />\r\n        </div>\r\n        <div className=\"form-group mb-3\">\r\n          <Field name=\"message\"\r\n            component={this.renderInput}\r\n            label=\"Message\"\r\n            />\r\n        </div>\r\n        <button className=\"btn btn-primary btn-block\" type=\"submit\">\r\n        {this.props.loading && <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> }\r\n        Submit\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n  const errors = {};\r\n\r\n  if (!formValues.firstName) {\r\n    errors.firstName = \"Invalid First Name\";\r\n  }\r\n  if(!formValues.lastName) {\r\n    errors.lastName = \"Invalid Last Name\";\r\n  }\r\n  if(!formValues.email) {\r\n    errors.email = \"Invalid Email\";\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'contactForm',\r\n  validate: validate\r\n})(ContactForm);\r\n"]},"metadata":{},"sourceType":"module"}