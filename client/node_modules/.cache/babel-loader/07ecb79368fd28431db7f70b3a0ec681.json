{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskies\\\\beersandbrewskies\\\\src\\\\components\\\\shop\\\\components\\\\FloatCart.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { loadCart, removeProduct, changeProductQuantity } from '../../../actions';\nimport CartProduct from './CartProduct';\nimport './style.scss';\n\nclass FloatCart extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOpen: false,\n      newProduct: [],\n      productToRemove: [],\n      productToChange: []\n    };\n\n    this.openFloatCart = () => {\n      this.setState({\n        isOpen: true\n      });\n    };\n\n    this.closeFloatCart = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n\n    this.addProduct = product => {\n      const cartProducts = this.props.cartProducts;\n      let productAlreadyInCart = false;\n      cartProducts.forEach(cp => {\n        if (cp.id === product.id) {\n          cp.quantity += product.quantity;\n          productAlreadyInCart = true;\n        }\n      });\n\n      if (!productAlreadyInCart) {\n        cartProducts.push(product);\n      }\n    };\n\n    this.removeProduct = product => {\n      const cartProducts = this.props.cartProducts;\n      const index = cartProducts.findIndex(p => p.id === product.id);\n\n      if (index >= 0) {\n        cartProducts.splice(index, 1);\n      }\n    };\n\n    this.changeProductQuantity = changedProduct => {\n      const cartProducts = this.props.cartProducts;\n      const product = cartProducts.find(p => p.id === changedProduct.id);\n      product.quantity = changedProduct.quantity;\n\n      if (product.quantity <= 0) {\n        this.removeProduct(product);\n      }\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.newProduct !== nextProps.newProduct) {\n      return {\n        newProduct: nextProps.newProduct\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    console.log(this.state.newProduct);\n  }\n\n  render() {\n    const _this$props = this.props,\n          cartProducts = _this$props.cartProducts,\n          removeProduct = _this$props.removeProduct,\n          changeProductQuantity = _this$props.changeProductQuantity;\n    const products = cartProducts.map(p => {\n      return React.createElement(CartProduct, {\n        product: p,\n        removeProduct: removeProduct,\n        changeProductQuantity: changeProductQuantity,\n        key: p.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      });\n    });\n    let classes = ['float-cart'];\n\n    if (!!this.state.isOpen) {\n      classes.push('float-cart--open');\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.isOpen && React.createElement(\"div\", {\n      onClick: () => this.closeFloatCart(),\n      className: \"float-cart__close-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"X\"), !this.state.isOpen && React.createElement(\"span\", {\n      onClick: () => this.openFloatCart(),\n      className: \"bag bag--float-cart-closed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag__quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"float-cart__content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-cart__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag__quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Cart\")), React.createElement(\"div\", {\n      className: \"float-cart__shelf-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, products, !products.length && React.createElement(\"p\", {\n      className: \"shelf-empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Add some products in the cart \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), \":)\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cartProducts: state.cart.products,\n    newProduct: state.cart.productToAdd,\n    productToRemove: state.cart.productToRemove,\n    productToChange: state.cart.productToChange\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadCart,\n  removeProduct,\n  changeProductQuantity\n})(FloatCart);","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/components/shop/components/FloatCart.js"],"names":["React","connect","loadCart","removeProduct","changeProductQuantity","CartProduct","FloatCart","Component","state","isOpen","newProduct","productToRemove","productToChange","openFloatCart","setState","closeFloatCart","addProduct","product","cartProducts","props","productAlreadyInCart","forEach","cp","id","quantity","push","index","findIndex","p","splice","changedProduct","find","getDerivedStateFromProps","nextProps","prevState","componentDidMount","console","log","render","products","map","classes","join","length","mapStateToProps","cart","productToAdd"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  loadCart,\r\n  removeProduct,\r\n  changeProductQuantity\r\n} from '../../../actions';\r\nimport CartProduct from './CartProduct';\r\n\r\nimport './style.scss';\r\n\r\nclass FloatCart extends React.Component {\r\n  state = {\r\n    isOpen: false,\r\n    newProduct: [],\r\n    productToRemove: [],\r\n    productToChange: []\r\n  };\r\n\r\n\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if(prevState.newProduct !== nextProps.newProduct){\r\n      return {\r\n        newProduct: nextProps.newProduct\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.state.newProduct);\r\n  }\r\n\r\n  openFloatCart = () => {\r\n    this.setState({ isOpen: true });\r\n  };\r\n\r\n  closeFloatCart = () => {\r\n    this.setState({ isOpen: false });\r\n  };\r\n\r\n  addProduct = (product) => {\r\n    const { cartProducts} = this.props;\r\n    let productAlreadyInCart = false;\r\n\r\n    cartProducts.forEach(cp => {\r\n      if (cp.id === product.id) {\r\n        cp.quantity += product.quantity;\r\n        productAlreadyInCart = true;\r\n      }\r\n    });\r\n\r\n    if (!productAlreadyInCart) {\r\n      cartProducts.push(product);\r\n    }\r\n\r\n  }\r\n\r\n  removeProduct = (product) => {\r\n    const { cartProducts } = this.props;\r\n\r\n    const index = cartProducts.findIndex(p => p.id === product.id);\r\n    if (index >= 0) {\r\n      cartProducts.splice(index, 1);\r\n    }\r\n\r\n  };\r\n\r\n  changeProductQuantity = (changedProduct) => {\r\n    const { cartProducts } = this.props;\r\n\r\n    const product = cartProducts.find(p => p.id === changedProduct.id);\r\n    product.quantity = changedProduct.quantity;\r\n    if (product.quantity <= 0) {\r\n      this.removeProduct(product);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const { cartProducts, removeProduct, changeProductQuantity } = this.props;\r\n\r\n    const products = cartProducts.map(p => {\r\n      return (\r\n        <CartProduct product={p} removeProduct={removeProduct} changeProductQuantity={changeProductQuantity} key={p.id} />\r\n      );\r\n    });\r\n\r\n    let classes = ['float-cart'];\r\n\r\n    if (!!this.state.isOpen) {\r\n      classes.push('float-cart--open');\r\n    }\r\n\r\n    return (\r\n      <div className={classes.join(' ')}>\r\n        {/* If cart open, show close (x) button */}\r\n        {this.state.isOpen && (\r\n          <div\r\n            onClick={() => this.closeFloatCart()}\r\n            className=\"float-cart__close-btn\"\r\n          >\r\n            X\r\n          </div>\r\n        )}\r\n\r\n        {/* If cart is closed, show bag with quantity of product and open cart action */}\r\n        {!this.state.isOpen && (\r\n          <span\r\n            onClick={() => this.openFloatCart()}\r\n            className=\"bag bag--float-cart-closed\"\r\n          >\r\n            <span className=\"bag__quantity\"></span>\r\n          </span>\r\n        )}\r\n\r\n        <div className=\"float-cart__content\">\r\n          <div className=\"float-cart__header\">\r\n            <span className=\"bag\">\r\n              <span className=\"bag__quantity\"></span>\r\n            </span>\r\n            <span className=\"header-title\">Cart</span>\r\n          </div>\r\n\r\n          <div className=\"float-cart__shelf-container\">\r\n            {products}\r\n            {!products.length && (\r\n              <p className=\"shelf-empty\">\r\n                Add some products in the cart <br />\r\n                :)\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cartProducts: state.cart.products,\r\n    newProduct: state.cart.productToAdd,\r\n    productToRemove: state.cart.productToRemove,\r\n    productToChange: state.cart.productToChange,\r\n  }\r\n};\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {loadCart, removeProduct, changeProductQuantity})\r\n  (FloatCart);\r\n"]},"metadata":{},"sourceType":"module"}