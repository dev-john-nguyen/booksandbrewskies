{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskies\\\\beersandbrewskies\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\n//import contacts from '../apis/api';\nimport jsonApi from '../apis/api'; // import history from '../history';\n\nimport { FETCH_PRODUCTS } from './actionTypes';\nimport { LOAD_CART, ADD_PRODUCT, REMOVE_PRODUCT, CHANGE_PRODUCT_QUANTITY, UPDATE_CART_TOTAL } from './actionTypes';\nexport const contact = formValues => async (dispatch, getState) => {\n  // const response = await contacts.post('/contacts/add', {...formValues});\n  const response = await jsonApi.post('/contacts', _objectSpread({}, formValues));\n  dispatch({\n    type: 'CONTACTED',\n    payload: response.data\n  }); // history.push('/contact?success');\n};\nexport const fetchProducts = () => async dispatch => {\n  const response = await jsonApi.get('/products');\n  dispatch({\n    type: FETCH_PRODUCTS,\n    payload: response.data\n  });\n};\nexport const loadCart = products => ({\n  type: LOAD_CART,\n  payload: products\n});\nexport const addProduct = product => ({\n  type: ADD_PRODUCT,\n  payload: product\n});\nexport const removeProduct = product => ({\n  type: REMOVE_PRODUCT,\n  payload: product\n});\nexport const changeProductQuantity = ({\n  product,\n  index\n}) => ({\n  type: CHANGE_PRODUCT_QUANTITY,\n  payload: {\n    product,\n    index\n  }\n});\nexport const updateCartTotal = cartProducts => dispatch => {\n  let productQuantity = cartProducts.reduce((sum, p) => {\n    sum += p.quantity;\n    return sum;\n  }, 0);\n  let totalPrice = cartProducts.reduce((sum, p) => {\n    sum += p.price * p.quantity;\n    return sum;\n  }, 0);\n  let installments = cartProducts.reduce((greater, p) => {\n    greater = p.installments > greater ? p.installments : greater;\n    return greater;\n  }, 0);\n  let cartTotal = {\n    productQuantity,\n    installments,\n    totalPrice: 10,\n    currencyId: 'USD',\n    currencyFormat: '$'\n  };\n  dispatch({\n    type: UPDATE_CART_TOTAL,\n    payload: cartTotal\n  });\n};","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/actions/index.js"],"names":["jsonApi","FETCH_PRODUCTS","LOAD_CART","ADD_PRODUCT","REMOVE_PRODUCT","CHANGE_PRODUCT_QUANTITY","UPDATE_CART_TOTAL","contact","formValues","dispatch","getState","response","post","type","payload","data","fetchProducts","get","loadCart","products","addProduct","product","removeProduct","changeProductQuantity","index","updateCartTotal","cartProducts","productQuantity","reduce","sum","p","quantity","totalPrice","price","installments","greater","cartTotal","currencyId","currencyFormat"],"mappings":";AAAA;AACA,OAAOA,OAAP,MAAoB,aAApB,C,CACA;;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,SAAT,EACEC,WADF,EAEEC,cAFF,EAGEC,uBAHF,EAIEC,iBAJF,QAKO,eALP;AAQA,OAAO,MAAMC,OAAO,GAAIC,UAAD,IAAgB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAEnE;AACA,QAAMC,QAAQ,GAAG,MAAMX,OAAO,CAACY,IAAR,CAAa,WAAb,oBAA8BJ,UAA9B,EAAvB;AAEAC,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAvC,GAAD,CAAR,CALmE,CAOnE;AACD,CARM;AAUP,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAMP,QAAN,IAAkB;AACnD,QAAME,QAAQ,GAAG,MAAMX,OAAO,CAACiB,GAAR,CAAY,WAAZ,CAAvB;AAEAR,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAEZ,cAAR;AAAwBa,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA1C,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMG,QAAQ,GAAGC,QAAQ,KAAK;AACnCN,EAAAA,IAAI,EAAEX,SAD6B;AAEnCY,EAAAA,OAAO,EAAEK;AAF0B,CAAL,CAAzB;AAKP,OAAO,MAAMC,UAAU,GAAGC,OAAO,KAAK;AACpCR,EAAAA,IAAI,EAAEV,WAD8B;AAEpCW,EAAAA,OAAO,EAAEO;AAF2B,CAAL,CAA1B;AAKP,OAAO,MAAMC,aAAa,GAAGD,OAAO,KAAK;AACvCR,EAAAA,IAAI,EAAET,cADiC;AAEvCU,EAAAA,OAAO,EAAEO;AAF8B,CAAL,CAA7B;AAKP,OAAO,MAAME,qBAAqB,GAAG,CAAC;AAACF,EAAAA,OAAD;AAAUG,EAAAA;AAAV,CAAD,MAAuB;AAC1DX,EAAAA,IAAI,EAAER,uBADoD;AAE1DS,EAAAA,OAAO,EAAE;AAACO,IAAAA,OAAD;AAASG,IAAAA;AAAT;AAFiD,CAAvB,CAA9B;AAKP,OAAO,MAAMC,eAAe,GAAGC,YAAY,IAAIjB,QAAQ,IAAI;AACzD,MAAIkB,eAAe,GAAGD,YAAY,CAACE,MAAb,CAAoB,CAACC,GAAD,EAAMC,CAAN,KAAY;AACpDD,IAAAA,GAAG,IAAIC,CAAC,CAACC,QAAT;AACA,WAAOF,GAAP;AACD,GAHqB,EAGnB,CAHmB,CAAtB;AAKA,MAAIG,UAAU,GAAGN,YAAY,CAACE,MAAb,CAAoB,CAACC,GAAD,EAAMC,CAAN,KAAY;AAC/CD,IAAAA,GAAG,IAAIC,CAAC,CAACG,KAAF,GAAUH,CAAC,CAACC,QAAnB;AACA,WAAOF,GAAP;AACD,GAHgB,EAGd,CAHc,CAAjB;AAKA,MAAIK,YAAY,GAAGR,YAAY,CAACE,MAAb,CAAoB,CAACO,OAAD,EAAUL,CAAV,KAAgB;AACrDK,IAAAA,OAAO,GAAGL,CAAC,CAACI,YAAF,GAAiBC,OAAjB,GAA2BL,CAAC,CAACI,YAA7B,GAA4CC,OAAtD;AACA,WAAOA,OAAP;AACD,GAHkB,EAGhB,CAHgB,CAAnB;AAKA,MAAIC,SAAS,GAAG;AACdT,IAAAA,eADc;AAEdO,IAAAA,YAFc;AAGdF,IAAAA,UAAU,EAAE,EAHE;AAIdK,IAAAA,UAAU,EAAE,KAJE;AAKdC,IAAAA,cAAc,EAAE;AALF,GAAhB;AAQA7B,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAEP,iBADC;AAEPQ,IAAAA,OAAO,EAAEsB;AAFF,GAAD,CAAR;AAID,CA5BM","sourcesContent":["//import contacts from '../apis/api';\r\nimport jsonApi from '../apis/api';\r\n// import history from '../history';\r\nimport { FETCH_PRODUCTS } from './actionTypes';\r\nimport { LOAD_CART,\r\n  ADD_PRODUCT,\r\n  REMOVE_PRODUCT,\r\n  CHANGE_PRODUCT_QUANTITY,\r\n  UPDATE_CART_TOTAL\r\n} from './actionTypes';\r\n\r\n\r\nexport const contact = (formValues) => async (dispatch, getState) => {\r\n\r\n  // const response = await contacts.post('/contacts/add', {...formValues});\r\n  const response = await jsonApi.post('/contacts', {...formValues});\r\n\r\n  dispatch({ type: 'CONTACTED', payload: response.data });\r\n\r\n  // history.push('/contact?success');\r\n};\r\n\r\nexport const fetchProducts = () => async dispatch => {\r\n  const response = await jsonApi.get('/products')\r\n\r\n  dispatch({ type: FETCH_PRODUCTS, payload: response.data });\r\n}\r\n\r\nexport const loadCart = products => ({\r\n  type: LOAD_CART,\r\n  payload: products\r\n});\r\n\r\nexport const addProduct = product => ({\r\n  type: ADD_PRODUCT,\r\n  payload: product\r\n});\r\n\r\nexport const removeProduct = product => ({\r\n  type: REMOVE_PRODUCT,\r\n  payload: product\r\n});\r\n\r\nexport const changeProductQuantity = ({product, index}) => ({\r\n  type: CHANGE_PRODUCT_QUANTITY,\r\n  payload: {product,index}\r\n});\r\n\r\nexport const updateCartTotal = cartProducts => dispatch => {\r\n  let productQuantity = cartProducts.reduce((sum, p) => {\r\n    sum += p.quantity;\r\n    return sum;\r\n  }, 0);\r\n\r\n  let totalPrice = cartProducts.reduce((sum, p) => {\r\n    sum += p.price * p.quantity;\r\n    return sum;\r\n  }, 0);\r\n\r\n  let installments = cartProducts.reduce((greater, p) => {\r\n    greater = p.installments > greater ? p.installments : greater;\r\n    return greater;\r\n  }, 0);\r\n\r\n  let cartTotal = {\r\n    productQuantity,\r\n    installments,\r\n    totalPrice: 10,\r\n    currencyId: 'USD',\r\n    currencyFormat: '$'\r\n  };\r\n\r\n  dispatch({\r\n    type: UPDATE_CART_TOTAL,\r\n    payload: cartTotal\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}