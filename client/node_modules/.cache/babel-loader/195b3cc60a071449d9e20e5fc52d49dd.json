{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskies\\\\beersandbrewskies\\\\src\\\\components\\\\shop\\\\components\\\\FloatCart.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { loadCart, removeProduct, changeProductQuantity } from '../../../actions';\nimport CartProduct from './CartProduct';\nimport './style.scss';\n\nclass FloatCart extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOpen: false\n    };\n\n    this.openFloatCart = () => {\n      this.setState({\n        isOpen: true\n      });\n    };\n\n    this.closeFloatCart = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n\n    this.removeProduct = product => {\n      const cartProducts = this.props.cartProducts;\n      const index = cartProducts.findIndex(p => p.id === product.id);\n\n      if (index >= 0) {\n        cartProducts.splice(index, 1);\n      }\n    };\n\n    this.changeProductQuantity = changedProduct => {\n      const cartProducts = this.props.cartProducts;\n      const product = cartProducts.find(p => p.id === changedProduct.id);\n      product.quantity = changedProduct.quantity;\n\n      if (product.quantity <= 0) {\n        this.removeProduct(product);\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps) {}\n\n  render() {\n    const _this$props = this.props,\n          cartProducts = _this$props.cartProducts,\n          removeProduct = _this$props.removeProduct,\n          changeProductQuantity = _this$props.changeProductQuantity;\n    const officialCart = cartProducts.forEach(cp => {\n      cartProducts.forEach(function (p, i) {\n        if (i !== 0) {\n          console.log(p);\n        }\n      });\n    });\n    const products = cartProducts.map(p => {\n      return React.createElement(CartProduct, {\n        product: p,\n        removeProduct: removeProduct,\n        changeProductQuantity: changeProductQuantity,\n        key: p.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    });\n    let classes = ['float-cart'];\n\n    if (!!this.state.isOpen) {\n      classes.push('float-cart--open');\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.state.isOpen && React.createElement(\"div\", {\n      onClick: () => this.closeFloatCart(),\n      className: \"float-cart__close-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"X\"), !this.state.isOpen && React.createElement(\"span\", {\n      onClick: () => this.openFloatCart(),\n      className: \"bag bag--float-cart-closed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag__quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"float-cart__content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-cart__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag__quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Cart\")), React.createElement(\"div\", {\n      className: \"float-cart__shelf-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, products, !products.length && React.createElement(\"p\", {\n      className: \"shelf-empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Add some products in the cart \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), \":)\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cartProducts: state.cart.products,\n    newProduct: state.cart.productToAdd,\n    productToRemove: state.cart.productToRemove,\n    productToChange: state.cart.productToChange\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadCart,\n  removeProduct,\n  changeProductQuantity\n})(FloatCart);","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/components/shop/components/FloatCart.js"],"names":["React","connect","loadCart","removeProduct","changeProductQuantity","CartProduct","FloatCart","Component","state","isOpen","openFloatCart","setState","closeFloatCart","product","cartProducts","props","index","findIndex","p","id","splice","changedProduct","find","quantity","componentDidUpdate","prevProps","render","officialCart","forEach","cp","i","console","log","products","map","classes","push","join","length","mapStateToProps","cart","newProduct","productToAdd","productToRemove","productToChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  loadCart,\r\n  removeProduct,\r\n  changeProductQuantity\r\n} from '../../../actions';\r\nimport CartProduct from './CartProduct';\r\n\r\nimport './style.scss';\r\n\r\nclass FloatCart extends React.Component {\r\n  state = {\r\n    isOpen: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n\r\n  }\r\n\r\n  openFloatCart = () => {\r\n    this.setState({ isOpen: true });\r\n  };\r\n\r\n  closeFloatCart = () => {\r\n    this.setState({ isOpen: false });\r\n  };\r\n\r\n  removeProduct = (product) => {\r\n    const { cartProducts } = this.props;\r\n\r\n    const index = cartProducts.findIndex(p => p.id === product.id);\r\n    if (index >= 0) {\r\n      cartProducts.splice(index, 1);\r\n    }\r\n\r\n  };\r\n\r\n  changeProductQuantity = (changedProduct) => {\r\n    const { cartProducts } = this.props;\r\n\r\n    const product = cartProducts.find(p => p.id === changedProduct.id);\r\n    product.quantity = changedProduct.quantity;\r\n    if (product.quantity <= 0) {\r\n      this.removeProduct(product);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const { cartProducts, removeProduct, changeProductQuantity } = this.props;\r\n\r\n    const officialCart = cartProducts.forEach(cp => {\r\n      cartProducts.forEach(function(p, i) {\r\n        if(i !== 0){\r\n          console.log(p);\r\n        }\r\n      });\r\n    });\r\n\r\n    const products = cartProducts.map(p => {\r\n      return (\r\n        <CartProduct product={p} removeProduct={removeProduct} changeProductQuantity={changeProductQuantity} key={p.id} />\r\n      );\r\n    });\r\n\r\n    let classes = ['float-cart'];\r\n\r\n    if (!!this.state.isOpen) {\r\n      classes.push('float-cart--open');\r\n    }\r\n\r\n    return (\r\n      <div className={classes.join(' ')}>\r\n        {/* If cart open, show close (x) button */}\r\n        {this.state.isOpen && (\r\n          <div\r\n            onClick={() => this.closeFloatCart()}\r\n            className=\"float-cart__close-btn\"\r\n          >\r\n            X\r\n          </div>\r\n        )}\r\n\r\n        {/* If cart is closed, show bag with quantity of product and open cart action */}\r\n        {!this.state.isOpen && (\r\n          <span\r\n            onClick={() => this.openFloatCart()}\r\n            className=\"bag bag--float-cart-closed\"\r\n          >\r\n            <span className=\"bag__quantity\"></span>\r\n          </span>\r\n        )}\r\n\r\n        <div className=\"float-cart__content\">\r\n          <div className=\"float-cart__header\">\r\n            <span className=\"bag\">\r\n              <span className=\"bag__quantity\"></span>\r\n            </span>\r\n            <span className=\"header-title\">Cart</span>\r\n          </div>\r\n\r\n          <div className=\"float-cart__shelf-container\">\r\n            {products}\r\n            {!products.length && (\r\n              <p className=\"shelf-empty\">\r\n                Add some products in the cart <br />\r\n                :)\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cartProducts: state.cart.products,\r\n    newProduct: state.cart.productToAdd,\r\n    productToRemove: state.cart.productToRemove,\r\n    productToChange: state.cart.productToChange,\r\n  }\r\n};\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {loadCart, removeProduct, changeProductQuantity})\r\n  (FloatCart);\r\n"]},"metadata":{},"sourceType":"module"}