{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskiesproject\\\\booksandbrewskies\\\\client\\\\src\\\\components\\\\shop\\\\components\\\\floatcart\\\\index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loadCart, removeProduct, changeProductQuantity } from '../../../../services/cart/actions';\nimport { updateCart } from '../../../../services/total/actions';\nimport CartProduct from './components/CartProduct';\nimport { formatPrice, getSessionStorageUpdateCart, updateSessionStorage } from '../util';\nimport { Link } from 'react-router-dom';\nimport './css/style.scss';\n\nclass FloatCart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newProduct: this.props.newProduct,\n      productToChange: this.props.productToChange,\n      productToRemove: this.props.productToRemove,\n      isOpen: false\n    };\n\n    this.openFloatCart = () => {\n      this.setState({\n        isOpen: true\n      });\n    };\n\n    this.closeFloatCart = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n\n    this.addProduct = product => {\n      const _this$props = this.props,\n            cartProducts = _this$props.cartProducts,\n            updateCart = _this$props.updateCart;\n      let productAlreadyInCart = false;\n      cartProducts.forEach(cp => {\n        if (cp.id === product.id) {\n          cp.quantity += product.quantity;\n          productAlreadyInCart = true;\n        }\n      });\n\n      if (!productAlreadyInCart) {\n        cartProducts.push(product);\n      }\n\n      updateCart(cartProducts);\n      this.openFloatCart();\n    };\n\n    this.removeProduct = product => {\n      const _this$props2 = this.props,\n            cartProducts = _this$props2.cartProducts,\n            updateCart = _this$props2.updateCart;\n      const index = cartProducts.findIndex(p => p.id === product.id);\n\n      if (index >= 0) {\n        cartProducts.splice(index, 1);\n        updateCart(cartProducts);\n      }\n    };\n\n    this.changeProductQuantity = changedProduct => {\n      const _this$props3 = this.props,\n            cartProducts = _this$props3.cartProducts,\n            updateCart = _this$props3.updateCart;\n      const product = cartProducts.find(p => p.id === changedProduct.id);\n      product.quantity = changedProduct.quantity;\n\n      if (product.quantity <= 0) {\n        this.removeProduct(product);\n      }\n\n      updateCart(cartProducts);\n    };\n\n    const _cartProducts = props.cartProducts,\n          cartTotal = props.cartTotal;\n    getSessionStorageUpdateCart(_cartProducts, cartTotal);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.newProduct !== prevState.newProduct) {\n      return {\n        newProduct: nextProps.newProduct\n      };\n    }\n\n    if (nextProps.productToRemove !== prevState.productToRemove) {\n      return {\n        productToRemove: nextProps.productToRemove\n      };\n    }\n\n    if (nextProps.productToChange !== prevState.productToChange) {\n      return {\n        productToChange: nextProps.productToChange\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.newProduct !== this.state.newProduct) {\n      this.addProduct(this.state.newProduct);\n    }\n\n    if (prevState.productToRemove !== this.state.productToRemove) {\n      this.removeProduct(this.state.productToRemove);\n    }\n\n    if (prevState.productToChange !== this.state.productToChange) {\n      this.changeProductQuantity(this.state.productToChange);\n    }\n\n    const _this$props4 = this.props,\n          cartProducts = _this$props4.cartProducts,\n          cartTotal = _this$props4.cartTotal;\n    updateSessionStorage(cartProducts, cartTotal);\n  } //  componentDidMount() {\n  //    const {cartProducts, cartTotal} = this.props;\n  //    getSessionStorageUpdateCart(cartProducts, cartTotal);\n  //  }\n\n\n  render() {\n    const _this$props5 = this.props,\n          cartTotal = _this$props5.cartTotal,\n          cartProducts = _this$props5.cartProducts,\n          removeProduct = _this$props5.removeProduct,\n          changeProductQuantity = _this$props5.changeProductQuantity;\n    const products = cartProducts.map(p => {\n      return React.createElement(CartProduct, {\n        product: p,\n        removeProduct: removeProduct,\n        changeProductQuantity: changeProductQuantity,\n        key: p.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      });\n    });\n    let classes = ['float-cart'];\n\n    if (!!this.state.isOpen) {\n      classes.push('float-cart--open');\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.state.isOpen && React.createElement(\"div\", {\n      onClick: () => this.closeFloatCart(),\n      className: \"float-cart__close-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"X\"), !this.state.isOpen && React.createElement(\"span\", {\n      onClick: () => this.openFloatCart(),\n      className: \"bag bag--float-cart-closed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag__quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, cartTotal.productQuantity)), React.createElement(\"div\", {\n      className: \"float-cart__content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-cart__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag__quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, cartTotal.productQuantity)), React.createElement(\"span\", {\n      className: \"header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Cart\")), React.createElement(\"div\", {\n      className: \"float-cart__shelf-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, products, !products.length && React.createElement(\"p\", {\n      className: \"shelf-empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Add some products in the cart \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), \":)\")), React.createElement(\"div\", {\n      className: \"float-cart__footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sub\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"SUBTOTAL\"), React.createElement(\"div\", {\n      className: \"sub-price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"sub-price__val\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, `${cartTotal.currencyFormat} ${formatPrice(cartTotal.totalPrice, cartTotal.currencyId)}`)), React.createElement(Link, {\n      to: \"/store/checkout\",\n      className: \"btn btn-primary\",\n      onClick: this.openFloatCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Checkout\"))));\n  }\n\n}\n\nFloatCart.propTypes = {\n  loadCart: PropTypes.func.isRequired,\n  updateCart: PropTypes.func.isRequired,\n  cartProducts: PropTypes.array.isRequired,\n  newProduct: PropTypes.object,\n  removeProduct: PropTypes.func,\n  productToRemove: PropTypes.object,\n  changeProductQuantity: PropTypes.func,\n  productToChange: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  cartProducts: state.cart.products,\n  newProduct: state.cart.productToAdd,\n  productToRemove: state.cart.productToRemove,\n  productToChange: state.cart.productToChange,\n  cartTotal: state.total.data\n});\n\nexport default connect(mapStateToProps, {\n  loadCart,\n  updateCart,\n  removeProduct,\n  changeProductQuantity\n})(FloatCart);","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskiesproject/booksandbrewskies/client/src/components/shop/components/floatcart/index.js"],"names":["React","Component","PropTypes","connect","loadCart","removeProduct","changeProductQuantity","updateCart","CartProduct","formatPrice","getSessionStorageUpdateCart","updateSessionStorage","Link","FloatCart","constructor","props","state","newProduct","productToChange","productToRemove","isOpen","openFloatCart","setState","closeFloatCart","addProduct","product","cartProducts","productAlreadyInCart","forEach","cp","id","quantity","push","index","findIndex","p","splice","changedProduct","find","cartTotal","getDerivedStateFromProps","nextProps","prevState","componentDidUpdate","prevProps","render","products","map","classes","join","productQuantity","length","currencyFormat","totalPrice","currencyId","propTypes","func","isRequired","array","object","mapStateToProps","cart","productToAdd","total","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { loadCart, removeProduct, changeProductQuantity } from '../../../../services/cart/actions';\r\nimport { updateCart } from '../../../../services/total/actions';\r\nimport CartProduct from './components/CartProduct';\r\nimport { formatPrice, getSessionStorageUpdateCart, updateSessionStorage } from '../util';\r\nimport { Link } from 'react-router-dom';\r\nimport './css/style.scss';\r\n\r\nclass FloatCart extends Component {\r\n  static propTypes = {\r\n     loadCart: PropTypes.func.isRequired,\r\n     updateCart: PropTypes.func.isRequired,\r\n     cartProducts: PropTypes.array.isRequired,\r\n     newProduct: PropTypes.object,\r\n     removeProduct: PropTypes.func,\r\n     productToRemove: PropTypes.object,\r\n     changeProductQuantity: PropTypes.func,\r\n     productToChange: PropTypes.object\r\n   };\r\n\r\n   constructor(props){\r\n     super(props);\r\n\r\n     const {cartProducts, cartTotal} = props;\r\n     getSessionStorageUpdateCart(cartProducts, cartTotal);\r\n   }\r\n\r\n   state = {\r\n     newProduct: this.props.newProduct,\r\n     productToChange: this.props.productToChange,\r\n     productToRemove: this.props.productToRemove,\r\n     isOpen: false\r\n   };\r\n\r\n   static getDerivedStateFromProps(nextProps, prevState) {\r\n\r\n     if (nextProps.newProduct !== prevState.newProduct) {\r\n       return { newProduct : nextProps.newProduct }\r\n     }\r\n\r\n     if(nextProps.productToRemove !== prevState.productToRemove){\r\n       return { productToRemove: nextProps.productToRemove };\r\n     }\r\n\r\n     if (nextProps.productToChange !== prevState.productToChange) {\r\n       return { productToChange: nextProps.productToChange };\r\n     }\r\n     return null;\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState){\r\n     if(prevState.newProduct !== this.state.newProduct){\r\n       this.addProduct(this.state.newProduct);\r\n     }\r\n\r\n     if (prevState.productToRemove !== this.state.productToRemove) {\r\n       this.removeProduct(this.state.productToRemove);\r\n     }\r\n\r\n     if (prevState.productToChange !== this.state.productToChange) {\r\n       this.changeProductQuantity(this.state.productToChange);\r\n     }\r\n\r\n     const {cartProducts, cartTotal} = this.props;\r\n     updateSessionStorage(cartProducts, cartTotal);\r\n\r\n   }\r\n\r\n  //  componentDidMount() {\r\n  //    const {cartProducts, cartTotal} = this.props;\r\n  //    getSessionStorageUpdateCart(cartProducts, cartTotal);\r\n  //  }\r\n\r\n  openFloatCart = () => {\r\n    this.setState({ isOpen: true });\r\n  };\r\n\r\n  closeFloatCart = () => {\r\n    this.setState({ isOpen: false });\r\n  };\r\n\r\n  addProduct = product => {\r\n    const { cartProducts, updateCart } = this.props;\r\n    let productAlreadyInCart = false;\r\n\r\n    cartProducts.forEach(cp => {\r\n      if (cp.id === product.id) {\r\n        cp.quantity += product.quantity;\r\n        productAlreadyInCart = true;\r\n      }\r\n    });\r\n\r\n    if (!productAlreadyInCart) {\r\n      cartProducts.push(product);\r\n    }\r\n\r\n    updateCart(cartProducts);\r\n\r\n    this.openFloatCart();\r\n  };\r\n\r\n  removeProduct = product => {\r\n    const { cartProducts, updateCart } = this.props;\r\n\r\n    const index = cartProducts.findIndex(p => p.id === product.id);\r\n    if (index >= 0) {\r\n      cartProducts.splice(index, 1);\r\n      updateCart(cartProducts);\r\n    }\r\n  };\r\n\r\n  changeProductQuantity = changedProduct => {\r\n    const { cartProducts, updateCart } = this.props;\r\n\r\n    const product = cartProducts.find(p => p.id === changedProduct.id);\r\n    product.quantity = changedProduct.quantity;\r\n    if (product.quantity <= 0) {\r\n      this.removeProduct(product);\r\n    }\r\n    updateCart(cartProducts);\r\n  }\r\n\r\n  render() {\r\n    const { cartTotal, cartProducts, removeProduct, changeProductQuantity } = this.props;\r\n\r\n    const products = cartProducts.map(p => {\r\n      return (\r\n        <CartProduct product={p} removeProduct={removeProduct} changeProductQuantity={changeProductQuantity} key={p.id} />\r\n      );\r\n    });\r\n\r\n    let classes = ['float-cart'];\r\n\r\n    if (!!this.state.isOpen) {\r\n      classes.push('float-cart--open');\r\n    }\r\n\r\n    return (\r\n      <div className={classes.join(' ')}>\r\n        {/* If cart open, show close (x) button */}\r\n        {this.state.isOpen && (\r\n          <div\r\n            onClick={() => this.closeFloatCart()}\r\n            className=\"float-cart__close-btn\"\r\n          >\r\n            X\r\n          </div>\r\n        )}\r\n\r\n        {/* If cart is closed, show bag with quantity of product and open cart action */}\r\n        {!this.state.isOpen && (\r\n          <span\r\n            onClick={() => this.openFloatCart()}\r\n            className=\"bag bag--float-cart-closed\"\r\n          >\r\n            <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\r\n          </span>\r\n        )}\r\n\r\n        <div className=\"float-cart__content\">\r\n          <div className=\"float-cart__header\">\r\n            <span className=\"bag\">\r\n              <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\r\n            </span>\r\n            <span className=\"header-title\">Cart</span>\r\n          </div>\r\n\r\n          <div className=\"float-cart__shelf-container\">\r\n            {products}\r\n            {!products.length && (\r\n              <p className=\"shelf-empty\">\r\n                Add some products in the cart <br />\r\n                :)\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"float-cart__footer\">\r\n            <div className=\"sub\">SUBTOTAL</div>\r\n            <div className=\"sub-price\">\r\n              <p className=\"sub-price__val\">\r\n                {`${cartTotal.currencyFormat} ${formatPrice(\r\n                  cartTotal.totalPrice,\r\n                  cartTotal.currencyId\r\n                )}`}\r\n              </p>\r\n            </div>\r\n            <Link to=\"/store/checkout\" className=\"btn btn-primary\" onClick={this.openFloatCart}>Checkout</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  cartProducts: state.cart.products,\r\n  newProduct: state.cart.productToAdd,\r\n  productToRemove: state.cart.productToRemove,\r\n  productToChange: state.cart.productToChange,\r\n  cartTotal: state.total.data\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {loadCart, updateCart, removeProduct, changeProductQuantity }\r\n)(FloatCart);\r\n"]},"metadata":{},"sourceType":"module"}