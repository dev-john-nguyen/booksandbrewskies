{"ast":null,"code":"import axios from 'axios';\nimport Stripe from 'stripe';\nconst url = `${window.location.href}:3000`;\nexport const stripe = (cartTotal, cartProducts) => async dispatch => {\n  const image = `${url}/static/media/home-background-img.40b4543e.jpg`;\n  var name = \"Summary: \";\n  var description = \"Please ensure that everything is correct before you complete\" + \" your purchase. For you reminder, we have a 30 day refund policy. Please contact us at beersandbreweskies@gmail.com\" + \" if you have any questions. Thank you for shopping with us.\";\n  cartProducts.forEach((item, i) => {\n    if (i < cartProducts.length - 1) {\n      name += `${item.title} (${item.quantity}), `;\n    } else {\n      name += `and ${item.title} (${item.quantity}).`;\n    }\n  }); //convert totalPrice into whole number\n\n  const totalPrice = cartTotal.totalPrice * 100;\n  const formValues = {\n    name: name,\n    description: description,\n    currency: cartTotal.currencyId,\n    totalPrice: totalPrice,\n    success_url: `${url}/checkout/success`,\n    cancel_url: `${url}/shop/`\n  };\n  let response; // const response = await contacts.post('/contacts/add', formValues);\n\n  try {\n    response = await axios.post('/shop/checkout', formValues);\n  } catch (e) {\n    return console.log(e);\n  }\n\n  const stripe = window.Stripe('pk_test_0kzCXvF6peItv0Z0FZ6QFG0j');\n  console.log(stripe);\n  stripe.redirectToCheckout({\n    sessionId: response.data.sessionId\n  }).then(function (result) {\n    // If `redirectToCheckout` fails due to a browser or network\n    // error, display the localized error message to your customer\n    // using `result.error.message`.\n    if (result.error) {\n      return console.log(result.error.message);\n    }\n\n    console.log(result);\n  }); // history.push('/contact?success');\n};","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/services/stripe/actions.js"],"names":["axios","Stripe","url","window","location","href","stripe","cartTotal","cartProducts","dispatch","image","name","description","forEach","item","i","length","title","quantity","totalPrice","formValues","currency","currencyId","success_url","cancel_url","response","post","e","console","log","redirectToCheckout","sessionId","data","then","result","error","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,GAAG,GAAI,GAAEC,MAAM,CAACC,QAAP,CAAgBC,IAAK,OAApC;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,SAAD,EAAYC,YAAZ,KAA6B,MAAOC,QAAP,IAAoB;AACrE,QAAMC,KAAK,GAAI,GAAER,GAAI,gDAArB;AAEA,MAAIS,IAAI,GAAG,WAAX;AACA,MAAIC,WAAW,GAAG,iEAClB,qHADkB,GAElB,6DAFA;AAIAJ,EAAAA,YAAY,CAACK,OAAb,CAAqB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAChC,QAAGA,CAAC,GAAIP,YAAY,CAACQ,MAAb,GAAsB,CAA9B,EAAiC;AAC/BL,MAAAA,IAAI,IAAI,GAAEG,IAAI,CAACG,KAAM,KAAIH,IAAI,CAACI,QAAS,KAAvC;AACD,KAFD,MAEK;AACHP,MAAAA,IAAI,IAAK,OAAMG,IAAI,CAACG,KAAM,KAAIH,IAAI,CAACI,QAAS,IAA5C;AACD;AACF,GAND,EARqE,CAgBrE;;AACA,QAAMC,UAAU,GAAGZ,SAAS,CAACY,UAAV,GAAuB,GAA1C;AAEA,QAAMC,UAAU,GAAG;AACjBT,IAAAA,IAAI,EAAEA,IADW;AAEjBC,IAAAA,WAAW,EAAEA,WAFI;AAGjBS,IAAAA,QAAQ,EAAEd,SAAS,CAACe,UAHH;AAIjBH,IAAAA,UAAU,EAAEA,UAJK;AAKjBI,IAAAA,WAAW,EAAG,GAAErB,GAAI,mBALH;AAMjBsB,IAAAA,UAAU,EAAG,GAAEtB,GAAI;AANF,GAAnB;AASA,MAAIuB,QAAJ,CA5BqE,CA6BrE;;AACA,MAAI;AACHA,IAAAA,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,IAAN,CAAW,gBAAX,EAA6BN,UAA7B,CAAjB;AACA,GAFD,CAEE,OAAOO,CAAP,EAAU;AACZ,WAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAP;AACC;;AAED,QAAMrB,MAAM,GAAGH,MAAM,CAACF,MAAP,CAAc,kCAAd,CAAf;AACA2B,EAAAA,OAAO,CAACC,GAAR,CAAYvB,MAAZ;AACAA,EAAAA,MAAM,CAACwB,kBAAP,CAA0B;AAC1BC,IAAAA,SAAS,EAAEN,QAAQ,CAACO,IAAT,CAAcD;AADC,GAA1B,EAECE,IAFD,CAEM,UAAUC,MAAV,EAAkB;AACxB;AACA;AACA;AACA,QAAGA,MAAM,CAACC,KAAV,EAAgB;AACd,aAAOP,OAAO,CAACC,GAAR,CAAYK,MAAM,CAACC,KAAP,CAAaC,OAAzB,CAAP;AACD;;AAEDR,IAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACD,GAXC,EAtCqE,CAoDrE;AACD,CArDM","sourcesContent":["import axios from 'axios';\r\nimport Stripe from 'stripe';\r\n\r\nconst url = `${window.location.href}:3000`;\r\n\r\nexport const stripe = (cartTotal, cartProducts) => async (dispatch) => {\r\n  const image = `${url}/static/media/home-background-img.40b4543e.jpg`;\r\n\r\n  var name = \"Summary: \";\r\n  var description = \"Please ensure that everything is correct before you complete\" +\r\n  \" your purchase. For you reminder, we have a 30 day refund policy. Please contact us at beersandbreweskies@gmail.com\" +\r\n  \" if you have any questions. Thank you for shopping with us.\";\r\n\r\n  cartProducts.forEach((item, i) => {\r\n    if(i < (cartProducts.length - 1)){\r\n      name +=`${item.title} (${item.quantity}), `;\r\n    }else{\r\n      name += `and ${item.title} (${item.quantity}).`;\r\n    }\r\n  });\r\n\r\n  //convert totalPrice into whole number\r\n  const totalPrice = cartTotal.totalPrice * 100;\r\n\r\n  const formValues = {\r\n    name: name,\r\n    description: description,\r\n    currency: cartTotal.currencyId,\r\n    totalPrice: totalPrice,\r\n    success_url: `${url}/checkout/success`,\r\n    cancel_url: `${url}/shop/`\r\n  }\r\n\r\n  let response;\r\n  // const response = await contacts.post('/contacts/add', formValues);\r\n  try {\r\n   response = await axios.post('/shop/checkout', formValues);\r\n  } catch (e) {\r\n  return console.log(e);\r\n  }\r\n\r\n  const stripe = window.Stripe('pk_test_0kzCXvF6peItv0Z0FZ6QFG0j');\r\n  console.log(stripe);\r\n  stripe.redirectToCheckout({\r\n  sessionId: response.data.sessionId\r\n}).then(function (result) {\r\n  // If `redirectToCheckout` fails due to a browser or network\r\n  // error, display the localized error message to your customer\r\n  // using `result.error.message`.\r\n  if(result.error){\r\n    return console.log(result.error.message);\r\n  }\r\n\r\n  console.log(result);\r\n});\r\n\r\n\r\n  // history.push('/contact?success');\r\n};\r\n"]},"metadata":{},"sourceType":"module"}