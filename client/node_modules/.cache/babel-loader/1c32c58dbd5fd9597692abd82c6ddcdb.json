{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskies\\\\beersandbrewskies\\\\src\\\\components\\\\shop\\\\components\\\\FloatCart.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CartProduct from './CartProduct';\nimport { removeProduct, changeProductQuantity, updateCartTotal } from '../../../actions';\nimport history from '../../../history';\nimport './style.scss';\n\nclass FloatCart extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOpen: false\n    };\n\n    this.formatPrice = (x, currency) => {\n      switch (currency) {\n        case 'BRL':\n          return x.toFixed(2).replace('.', ',');\n\n        default:\n          return x.toFixed(2);\n      }\n    };\n\n    this.openFloatCart = () => {\n      this.setState({\n        isOpen: true\n      });\n    };\n\n    this.closeFloatCart = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n\n    this.removeCartProduct = product => {\n      const _this$props = this.props,\n            cartProducts = _this$props.cartProducts,\n            removeProduct = _this$props.removeProduct;\n      const index = cartProducts.findIndex(p => p.id === product.id);\n      cartProducts.splice(index, 1);\n      removeProduct(cartProducts);\n    };\n\n    this.changeProductQuantity = changedProduct => {\n      const _this$props2 = this.props,\n            cartProducts = _this$props2.cartProducts,\n            changeProductQuantity = _this$props2.changeProductQuantity;\n      const product = cartProducts.find(p => p.id === changedProduct.id);\n      product.quantity = changedProduct.quantity;\n\n      if (product.quantity <= 0) {\n        this.removeCartProduct(product);\n      } else {\n        changeProductQuantity(product);\n      }\n    };\n\n    this.proceedToCheckout = () => {\n      const _this$props$cartTotal = this.props.cartTotal,\n            totalPrice = _this$props$cartTotal.totalPrice,\n            productQuantity = _this$props$cartTotal.productQuantity,\n            currencyFormat = _this$props$cartTotal.currencyFormat,\n            currencyId = _this$props$cartTotal.currencyId;\n\n      if (!productQuantity) {\n        alert('Add some product in the cart!');\n      } else {\n        history.push('/cart');\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const _this$props3 = this.props,\n          cartProducts = _this$props3.cartProducts,\n          cartTotal = _this$props3.cartTotal,\n          productToAdd = _this$props3.productToAdd;\n\n    if (prevProps.productToAdd !== productToAdd) {\n      if (cartProducts !== prevProps.cartProducts) {\n        console.log(\"Called\");\n        cartProducts.push(productToAdd);\n      }\n    } // if(cartTotal === prevProps.cartTotal){\n    //   this.props.updateCartTotal(this.props.cartProducts);\n    // }\n\n  }\n\n  render() {\n    const _this$props4 = this.props,\n          cartProducts = _this$props4.cartProducts,\n          cartTotal = _this$props4.cartTotal;\n    const products = cartProducts.map(p => {\n      return React.createElement(CartProduct, {\n        product: p,\n        removeProduct: this.removeCartProduct,\n        changeProductQuantity: this.changeProductQuantity,\n        key: p.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      });\n    });\n    let classes = ['float-cart'];\n\n    if (!!this.state.isOpen) {\n      classes.push('float-cart--open');\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.isOpen && React.createElement(\"div\", {\n      onClick: () => this.closeFloatCart(),\n      className: \"float-cart__close-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"X\"), !this.state.isOpen && React.createElement(\"span\", {\n      onClick: () => this.openFloatCart(),\n      className: \"bag bag--float-cart-closed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag__quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, cartTotal.productQuantity)), React.createElement(\"div\", {\n      className: \"float-cart__content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-cart__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag__quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, cartTotal.productQuantity)), React.createElement(\"span\", {\n      className: \"header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"float-cart__shelf-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, products, !products.length && React.createElement(\"p\", {\n      className: \"shelf-empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Add some products in the cart \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), \":)\")), React.createElement(\"div\", {\n      className: \"float-cart__footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sub\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"SUBTOTAL\"), React.createElement(\"div\", {\n      className: \"sub-price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"sub-price__val\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, `${cartTotal.currencyFormat} ${this.formatPrice(cartTotal.totalPrice, cartTotal.currencyId)}`)), React.createElement(\"div\", {\n      onClick: () => this.proceedToCheckout(),\n      className: \"buy-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Checkout\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  cartProducts: state.cart.products,\n  cartTotal: state.cartTotal.Total,\n  productToAdd: state.cart.productToAdd\n});\n\nexport default connect(mapStateToProps, {\n  removeProduct,\n  changeProductQuantity,\n  updateCartTotal\n})(FloatCart);","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/components/shop/components/FloatCart.js"],"names":["React","connect","CartProduct","removeProduct","changeProductQuantity","updateCartTotal","history","FloatCart","Component","state","isOpen","formatPrice","x","currency","toFixed","replace","openFloatCart","setState","closeFloatCart","removeCartProduct","product","props","cartProducts","index","findIndex","p","id","splice","changedProduct","find","quantity","proceedToCheckout","cartTotal","totalPrice","productQuantity","currencyFormat","currencyId","alert","push","componentDidUpdate","prevProps","prevState","productToAdd","console","log","render","products","map","classes","join","length","mapStateToProps","cart","Total"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CartProduct from './CartProduct';\r\nimport { removeProduct, changeProductQuantity, updateCartTotal } from '../../../actions';\r\nimport history from '../../../history';\r\nimport './style.scss';\r\n\r\nclass FloatCart extends React.Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    const { cartProducts, cartTotal, productToAdd } = this.props;\r\n\r\n    if(prevProps.productToAdd !== productToAdd){\r\n      if(cartProducts !== prevProps.cartProducts){\r\n        console.log(\"Called\");\r\n        cartProducts.push(productToAdd);  \r\n      }\r\n    }\r\n    // if(cartTotal === prevProps.cartTotal){\r\n    //   this.props.updateCartTotal(this.props.cartProducts);\r\n    // }\r\n  }\r\n\r\n  formatPrice = (x, currency) => {\r\n    switch (currency) {\r\n      case 'BRL':\r\n        return x.toFixed(2).replace('.', ',');\r\n      default:\r\n        return x.toFixed(2);\r\n    }\r\n  };\r\n\r\n  openFloatCart = () => {\r\n    this.setState({ isOpen: true });\r\n  };\r\n\r\n  closeFloatCart = () => {\r\n    this.setState({ isOpen: false });\r\n  };\r\n\r\n  removeCartProduct = product => {\r\n    const { cartProducts, removeProduct } = this.props;\r\n\r\n    const index = cartProducts.findIndex(p => p.id === product.id);\r\n      cartProducts.splice(index, 1);\r\n      removeProduct(cartProducts);\r\n  };\r\n\r\n  changeProductQuantity = changedProduct => {\r\n    const { cartProducts, changeProductQuantity } = this.props;\r\n\r\n    const product = cartProducts.find(p => p.id === changedProduct.id);\r\n      product.quantity = changedProduct.quantity;\r\n      if(product.quantity <= 0){\r\n        this.removeCartProduct(product);\r\n      }else{\r\n        changeProductQuantity(product);\r\n      }\r\n\r\n  }\r\n\r\n  proceedToCheckout = () => {\r\n    const {\r\n      totalPrice,\r\n      productQuantity,\r\n      currencyFormat,\r\n      currencyId\r\n    } = this.props.cartTotal;\r\n\r\n    if (!productQuantity) {\r\n      alert('Add some product in the cart!');\r\n    } else {\r\n      history.push('/cart');\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    const { cartProducts, cartTotal } = this.props;\r\n    const products = cartProducts.map(p => {\r\n      return (\r\n        <CartProduct product={p}\r\n          removeProduct={this.removeCartProduct}\r\n          changeProductQuantity={this.changeProductQuantity}\r\n          key={p.id} />\r\n      );\r\n    });\r\n\r\n    let classes = ['float-cart'];\r\n\r\n    if (!!this.state.isOpen) {\r\n      classes.push('float-cart--open');\r\n    }\r\n\r\n    return (\r\n      <div className={classes.join(' ')}>\r\n        {/* If cart open, show close (x) button */}\r\n        {this.state.isOpen && (\r\n          <div\r\n            onClick={() => this.closeFloatCart()}\r\n            className=\"float-cart__close-btn\"\r\n          >\r\n            X\r\n          </div>\r\n        )}\r\n\r\n        {/* If cart is closed, show bag with quantity of product and open cart action */}\r\n        {!this.state.isOpen && (\r\n          <span\r\n            onClick={() => this.openFloatCart()}\r\n            className=\"bag bag--float-cart-closed\"\r\n          >\r\n            <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\r\n          </span>\r\n        )}\r\n\r\n        <div className=\"float-cart__content\">\r\n          <div className=\"float-cart__header\">\r\n            <span className=\"bag\">\r\n              <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\r\n            </span>\r\n            <span className=\"header-title\"></span>\r\n          </div>\r\n\r\n          <div className=\"float-cart__shelf-container\">\r\n            {products}\r\n            {!products.length && (\r\n              <p className=\"shelf-empty\">\r\n                Add some products in the cart <br />\r\n                :)\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"float-cart__footer\">\r\n            <div className=\"sub\">SUBTOTAL</div>\r\n            <div className=\"sub-price\">\r\n              <p className=\"sub-price__val\">\r\n                {`${cartTotal.currencyFormat} ${this.formatPrice(\r\n                  cartTotal.totalPrice,\r\n                  cartTotal.currencyId\r\n                )}`}\r\n              </p>\r\n            </div>\r\n            <div onClick={() => this.proceedToCheckout()} className=\"buy-btn\">\r\n              Checkout\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  cartProducts: state.cart.products,\r\n  cartTotal: state.cartTotal.Total,\r\n  productToAdd: state.cart.productToAdd\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {removeProduct,\r\n    changeProductQuantity,\r\n    updateCartTotal})(FloatCart);\r\n"]},"metadata":{},"sourceType":"module"}