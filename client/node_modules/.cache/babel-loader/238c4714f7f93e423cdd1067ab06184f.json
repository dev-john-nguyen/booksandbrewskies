{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskies\\\\beersandbrewskies\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { LOAD_CART, ADD_PRODUCT, REMOVE_PRODUCT, CHANGE_PRODUCT_QUANTITY } from '../actions/actionTypes';\nconst initialState = {\n  products: [],\n  productToAdd: []\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_CART:\n      return _objectSpread({}, state, {\n        products: action.payload\n      });\n\n    case ADD_PRODUCT:\n      var duplicate = false;\n      state.forEach((item, i) => {\n        if (item.id === action.payload.id) {\n          duplicate = true;\n        }\n\n        ;\n      });\n\n      if (duplicate) {} else {\n        return _objectSpread({}, state, {\n          // productToAdd: Object.assign({}, action.payload)\n          products: [...state.products, action.payload]\n        });\n      }\n\n    case REMOVE_PRODUCT:\n      return _objectSpread({}, state, {\n        productToRemove: Object.assign({}, action.payload)\n      });\n\n    case CHANGE_PRODUCT_QUANTITY:\n      return _objectSpread({}, state, {\n        productToChange: Object.assign({}, action.payload)\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/reducers/cartReducer.js"],"names":["LOAD_CART","ADD_PRODUCT","REMOVE_PRODUCT","CHANGE_PRODUCT_QUANTITY","initialState","products","productToAdd","state","action","type","payload","duplicate","forEach","item","i","id","productToRemove","Object","assign","productToChange"],"mappings":";AAAA,SAASA,SAAT,EACEC,WADF,EAEEC,cAFF,EAGEC,uBAHF,QAIO,wBAJP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,YAAY,EAAE;AAFK,CAArB;AAKA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,SAAL;AACE,+BACKO,KADL;AAEEF,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AAFnB;;AAIF,SAAKT,WAAL;AACE,UAAIU,SAAS,GAAG,KAAhB;AACAJ,MAAAA,KAAK,CAACK,OAAN,CAAc,CAACC,IAAD,EAAOC,CAAP,KAAa;AACzB,YAAGD,IAAI,CAACE,EAAL,KAAYP,MAAM,CAACE,OAAP,CAAeK,EAA9B,EAAiC;AAC/BJ,UAAAA,SAAS,GAAG,IAAZ;AACD;;AAAA;AACF,OAJD;;AAMA,UAAGA,SAAH,EAAa,CAEZ,CAFD,MAEK;AACH,iCACKJ,KADL;AAEE;AACAF,UAAAA,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAV,EAAoBG,MAAM,CAACE,OAA3B;AAHZ;AAKD;;AACH,SAAKR,cAAL;AACE,+BACKK,KADL;AAEES,QAAAA,eAAe,EAAEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,MAAM,CAACE,OAAzB;AAFnB;;AAIF,SAAKP,uBAAL;AACE,+BACKI,KADL;AAEEY,QAAAA,eAAe,EAAEF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,MAAM,CAACE,OAAzB;AAFnB;;AAIF;AACE,aAAOH,KAAP;AAlCJ;AAoCD,CArCD","sourcesContent":["import { LOAD_CART,\r\n  ADD_PRODUCT,\r\n  REMOVE_PRODUCT,\r\n  CHANGE_PRODUCT_QUANTITY\r\n} from '../actions/actionTypes';\r\n\r\n\r\nconst initialState = {\r\n  products: [],\r\n  productToAdd: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOAD_CART:\r\n      return {\r\n        ...state,\r\n        products: action.payload\r\n      };\r\n    case ADD_PRODUCT:\r\n      var duplicate = false;\r\n      state.forEach((item, i) => {\r\n        if(item.id === action.payload.id){\r\n          duplicate = true;\r\n        };\r\n      });\r\n\r\n      if(duplicate){\r\n\r\n      }else{\r\n        return {\r\n          ...state,\r\n          // productToAdd: Object.assign({}, action.payload)\r\n          products: [...state.products, action.payload]\r\n        };\r\n      }\r\n    case REMOVE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        productToRemove: Object.assign({}, action.payload)\r\n      };\r\n    case CHANGE_PRODUCT_QUANTITY:\r\n      return {\r\n        ...state,\r\n        productToChange: Object.assign({}, action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}