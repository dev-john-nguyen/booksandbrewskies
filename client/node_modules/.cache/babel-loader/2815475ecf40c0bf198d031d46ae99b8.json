{"ast":null,"code":"import jsonApi from '../../apis/api';\nimport { FETCH_PRODUCTS } from './actionTypes';\nconst compare = {\n  lowestprice: (a, b) => {\n    if (a.price < b.price) return -1;\n    if (a.price > b.price) return 1;\n    return 0;\n  },\n  highestprice: (a, b) => {\n    if (a.price > b.price) return -1;\n    if (a.price < b.price) return 1;\n    return 0;\n  }\n};\nexport const fetchProducts = (filters, sortBy, callback) => async dispatch => {\n  try {\n    let response = await jsonApi.get('/products');\n  } catch (e) {\n    return console.log(e);\n  } finally {\n    let products = response.data;\n\n    if (!!filters && filters.length > 0) {\n      products = products.filter(p => filters.find(f => p.availableSizes.find(size => size === f)));\n    }\n\n    if (!!sortBy) {\n      products = products.sort(compare[sortBy]);\n    }\n\n    if (!!callback) {\n      callback();\n    }\n\n    dispatch({\n      type: FETCH_PRODUCTS,\n      payload: products\n    });\n  }\n}; // export const fetchProducts = (filters, sortBy, callback) => dispatch => {\n//   return axios\n//     .get(productsAPI)\n//     .then(res => {\n//       let { products } = res.data;\n//\n//       if (!!filters && filters.length > 0) {\n//         products = products.filter(p =>\n//           filters.find(f => p.availableSizes.find(size => size === f))\n//         );\n//       }\n//\n//       if (!!sortBy) {\n//         products = products.sort(compare[sortBy]);\n//       }\n//\n//       if (!!callback) {\n//         callback();\n//       }\n//\n//       return dispatch({\n//         type: FETCH_PRODUCTS,\n//         payload: products\n//       });\n//     })\n//     .catch(err => {\n//       console.log('Could not fetch products. Try again later.');\n//     });\n// };","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/services/shelf/actions.js"],"names":["jsonApi","FETCH_PRODUCTS","compare","lowestprice","a","b","price","highestprice","fetchProducts","filters","sortBy","callback","dispatch","response","get","e","console","log","products","data","length","filter","p","find","f","availableSizes","size","sort","type","payload"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AAEA,SAASC,cAAT,QAA+B,eAA/B;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,WAAW,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrB,QAAID,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EAAuB,OAAO,CAAC,CAAR;AACvB,QAAIF,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EAAuB,OAAO,CAAP;AACvB,WAAO,CAAP;AACD,GALa;AAMdC,EAAAA,YAAY,EAAE,CAACH,CAAD,EAAIC,CAAJ,KAAU;AACtB,QAAID,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EAAuB,OAAO,CAAC,CAAR;AACvB,QAAIF,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EAAuB,OAAO,CAAP;AACvB,WAAO,CAAP;AACD;AAVa,CAAhB;AAaA,OAAO,MAAME,aAAa,GAAG,CAACC,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,KAA+B,MAAMC,QAAN,IAAkB;AAE5E,MAAI;AACH,QAAIC,QAAQ,GAAG,MAAMb,OAAO,CAACc,GAAR,CAAY,WAAZ,CAArB;AACD,GAFA,CAEC,OAAOC,CAAP,EAAU;AACT,WAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAP;AACH,GAJC,SAIQ;AAER,QAAIG,QAAQ,GAAGL,QAAQ,CAACM,IAAxB;;AAEE,QAAI,CAAC,CAACV,OAAF,IAAaA,OAAO,CAACW,MAAR,GAAiB,CAAlC,EAAqC;AACnCF,MAAAA,QAAQ,GAAGA,QAAQ,CAACG,MAAT,CAAgBC,CAAC,IAC1Bb,OAAO,CAACc,IAAR,CAAaC,CAAC,IAAIF,CAAC,CAACG,cAAF,CAAiBF,IAAjB,CAAsBG,IAAI,IAAIA,IAAI,KAAKF,CAAvC,CAAlB,CADS,CAAX;AAGD;;AAED,QAAI,CAAC,CAACd,MAAN,EAAc;AACZQ,MAAAA,QAAQ,GAAGA,QAAQ,CAACS,IAAT,CAAczB,OAAO,CAACQ,MAAD,CAArB,CAAX;AACD;;AAED,QAAI,CAAC,CAACC,QAAN,EAAgB;AACdA,MAAAA,QAAQ;AACT;;AAEHC,IAAAA,QAAQ,CAAC;AAAEgB,MAAAA,IAAI,EAAE3B,cAAR;AAAwB4B,MAAAA,OAAO,EAAEX;AAAjC,KAAD,CAAR;AACD;AACA,CA1BM,C,CA4BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import jsonApi from '../../apis/api';\r\n\r\nimport { FETCH_PRODUCTS } from './actionTypes';\r\n\r\nconst compare = {\r\n  lowestprice: (a, b) => {\r\n    if (a.price < b.price) return -1;\r\n    if (a.price > b.price) return 1;\r\n    return 0;\r\n  },\r\n  highestprice: (a, b) => {\r\n    if (a.price > b.price) return -1;\r\n    if (a.price < b.price) return 1;\r\n    return 0;\r\n  }\r\n};\r\n\r\nexport const fetchProducts = (filters, sortBy, callback) => async dispatch => {\r\n\r\n  try {\r\n   let response = await jsonApi.get('/products');\r\n } catch (e) {\r\n    return console.log(e);\r\n} finally {\r\n\r\n  let products = response.data;\r\n\r\n    if (!!filters && filters.length > 0) {\r\n      products = products.filter(p =>\r\n        filters.find(f => p.availableSizes.find(size => size === f))\r\n      );\r\n    }\r\n\r\n    if (!!sortBy) {\r\n      products = products.sort(compare[sortBy]);\r\n    }\r\n\r\n    if (!!callback) {\r\n      callback();\r\n    }\r\n\r\n  dispatch({ type: FETCH_PRODUCTS, payload: products });\r\n}\r\n}\r\n\r\n// export const fetchProducts = (filters, sortBy, callback) => dispatch => {\r\n//   return axios\r\n//     .get(productsAPI)\r\n//     .then(res => {\r\n//       let { products } = res.data;\r\n//\r\n//       if (!!filters && filters.length > 0) {\r\n//         products = products.filter(p =>\r\n//           filters.find(f => p.availableSizes.find(size => size === f))\r\n//         );\r\n//       }\r\n//\r\n//       if (!!sortBy) {\r\n//         products = products.sort(compare[sortBy]);\r\n//       }\r\n//\r\n//       if (!!callback) {\r\n//         callback();\r\n//       }\r\n//\r\n//       return dispatch({\r\n//         type: FETCH_PRODUCTS,\r\n//         payload: products\r\n//       });\r\n//     })\r\n//     .catch(err => {\r\n//       console.log('Could not fetch products. Try again later.');\r\n//     });\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}