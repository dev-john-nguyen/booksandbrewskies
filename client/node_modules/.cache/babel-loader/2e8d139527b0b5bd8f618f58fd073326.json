{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskies\\\\beersandbrewskies\\\\src\\\\components\\\\shop\\\\components\\\\floatcart\\\\index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loadCart, removeProduct, changeProductQuantity } from '../../../../services/cart/actions';\nimport { updateCart } from '../../../../services/total/actions';\nimport CartProduct from './components/CartProduct';\nimport { formatPrice } from '../util';\nimport { stripe } from '../../../../services/stripe/actions';\nimport './css/style.scss';\n\nclass FloatCart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newProduct: this.props.newProduct,\n      productToChange: this.props.productToChange,\n      productToRemove: this.props.productToRemove,\n      isOpen: false\n    };\n\n    this.updateCart = () => {\n      const cartProductsLs = JSON.parse(localStorage.getItem('cartProducts'));\n      const cartTotalLs = JSON.parse(localStorage.getItem('cartTotal'));\n      const _this$props = this.props,\n            cartProducts = _this$props.cartProducts,\n            cartTotal = _this$props.cartTotal;\n\n      if (cartProductsLs && cartTotalLs) {\n        if (cartProductsLs.length > 0) {\n          Object.assign(cartProducts, cartProductsLs);\n          Object.assign(cartTotal, cartTotalLs);\n          this.openFloatCart();\n        }\n      }\n    };\n\n    this.updateLocalStorage = () => {\n      const _this$props2 = this.props,\n            cartProducts = _this$props2.cartProducts,\n            cartTotal = _this$props2.cartTotal;\n      localStorage.setItem('cartProducts', JSON.stringify(cartProducts));\n      localStorage.setItem('cartTotal', JSON.stringify(cartTotal));\n    };\n\n    this.openFloatCart = () => {\n      this.setState({\n        isOpen: true\n      });\n    };\n\n    this.closeFloatCart = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n\n    this.addProduct = product => {\n      const _this$props3 = this.props,\n            cartProducts = _this$props3.cartProducts,\n            updateCart = _this$props3.updateCart;\n      let productAlreadyInCart = false;\n      cartProducts.forEach(cp => {\n        if (cp.id === product.id) {\n          cp.quantity += product.quantity;\n          productAlreadyInCart = true;\n        }\n      });\n\n      if (!productAlreadyInCart) {\n        cartProducts.push(product);\n      }\n\n      updateCart(cartProducts);\n      this.openFloatCart();\n    };\n\n    this.removeProduct = product => {\n      const _this$props4 = this.props,\n            cartProducts = _this$props4.cartProducts,\n            updateCart = _this$props4.updateCart;\n      const index = cartProducts.findIndex(p => p.id === product.id);\n\n      if (index >= 0) {\n        cartProducts.splice(index, 1);\n        updateCart(cartProducts);\n      }\n    };\n\n    this.proceedToCheckout = () => {\n      const _this$props5 = this.props,\n            cartTotal = _this$props5.cartTotal,\n            cartProducts = _this$props5.cartProducts;\n\n      if (!cartTotal.productQuantity) {\n        alert('Add some product in the cart!');\n      } else {\n        this.props.stripe(cartTotal, cartProducts);\n      }\n    };\n\n    this.changeProductQuantity = changedProduct => {\n      const _this$props6 = this.props,\n            cartProducts = _this$props6.cartProducts,\n            updateCart = _this$props6.updateCart;\n      const product = cartProducts.find(p => p.id === changedProduct.id);\n      product.quantity = changedProduct.quantity;\n\n      if (product.quantity <= 0) {\n        this.removeProduct(product);\n      }\n\n      updateCart(cartProducts);\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.newProduct !== prevState.newProduct) {\n      return {\n        newProduct: nextProps.newProduct\n      };\n    }\n\n    if (nextProps.productToRemove !== prevState.productToRemove) {\n      return {\n        productToRemove: nextProps.productToRemove\n      };\n    }\n\n    if (nextProps.productToChange !== prevState.productToChange) {\n      return {\n        productToChange: nextProps.productToChange\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.newProduct !== this.state.newProduct) {\n      this.addProduct(this.state.newProduct);\n    }\n\n    if (prevState.productToRemove !== this.state.productToRemove) {\n      this.removeProduct(this.state.productToRemove);\n    }\n\n    if (prevState.productToChange !== this.state.productToChange) {\n      this.changeProductQuantity(this.state.productToChange);\n    }\n\n    this.updateLocalStorage();\n  }\n\n  componentDidMount() {\n    this.updateCart();\n  }\n\n  render() {\n    const _this$props7 = this.props,\n          cartTotal = _this$props7.cartTotal,\n          cartProducts = _this$props7.cartProducts,\n          removeProduct = _this$props7.removeProduct,\n          changeProductQuantity = _this$props7.changeProductQuantity;\n    const products = cartProducts.map(p => {\n      return React.createElement(CartProduct, {\n        product: p,\n        removeProduct: removeProduct,\n        changeProductQuantity: changeProductQuantity,\n        key: p.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      });\n    });\n    let classes = ['float-cart'];\n\n    if (!!this.state.isOpen) {\n      classes.push('float-cart--open');\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, this.state.isOpen && React.createElement(\"div\", {\n      onClick: () => this.closeFloatCart(),\n      className: \"float-cart__close-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"X\"), !this.state.isOpen && React.createElement(\"span\", {\n      onClick: () => this.openFloatCart(),\n      className: \"bag bag--float-cart-closed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag__quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, cartTotal.productQuantity)), React.createElement(\"div\", {\n      className: \"float-cart__content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-cart__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag__quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, cartTotal.productQuantity)), React.createElement(\"span\", {\n      className: \"header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Cart\")), React.createElement(\"div\", {\n      className: \"float-cart__shelf-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, products, !products.length && React.createElement(\"p\", {\n      className: \"shelf-empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Add some products in the cart \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), \":)\")), React.createElement(\"div\", {\n      className: \"float-cart__footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sub\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"SUBTOTAL\"), React.createElement(\"div\", {\n      className: \"sub-price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"sub-price__val\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, `${cartTotal.currencyFormat} ${formatPrice(cartTotal.totalPrice, cartTotal.currencyId)}`)), React.createElement(\"div\", {\n      onClick: () => this.proceedToCheckout(),\n      className: \"buy-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Checkout\"))));\n  }\n\n}\n\nFloatCart.propTypes = {\n  loadCart: PropTypes.func.isRequired,\n  updateCart: PropTypes.func.isRequired,\n  cartProducts: PropTypes.array.isRequired,\n  newProduct: PropTypes.object,\n  removeProduct: PropTypes.func,\n  productToRemove: PropTypes.object,\n  changeProductQuantity: PropTypes.func,\n  productToChange: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  cartProducts: state.cart.products,\n  newProduct: state.cart.productToAdd,\n  productToRemove: state.cart.productToRemove,\n  productToChange: state.cart.productToChange,\n  cartTotal: state.total.data\n});\n\nexport default connect(mapStateToProps, {\n  stripe,\n  loadCart,\n  updateCart,\n  removeProduct,\n  changeProductQuantity\n})(FloatCart);","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/components/shop/components/floatcart/index.js"],"names":["React","Component","PropTypes","connect","loadCart","removeProduct","changeProductQuantity","updateCart","CartProduct","formatPrice","stripe","FloatCart","state","newProduct","props","productToChange","productToRemove","isOpen","cartProductsLs","JSON","parse","localStorage","getItem","cartTotalLs","cartProducts","cartTotal","length","Object","assign","openFloatCart","updateLocalStorage","setItem","stringify","setState","closeFloatCart","addProduct","product","productAlreadyInCart","forEach","cp","id","quantity","push","index","findIndex","p","splice","proceedToCheckout","productQuantity","alert","changedProduct","find","getDerivedStateFromProps","nextProps","prevState","componentDidUpdate","prevProps","componentDidMount","render","products","map","classes","join","currencyFormat","totalPrice","currencyId","propTypes","func","isRequired","array","object","mapStateToProps","cart","productToAdd","total","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { loadCart, removeProduct, changeProductQuantity } from '../../../../services/cart/actions';\r\nimport { updateCart } from '../../../../services/total/actions';\r\nimport CartProduct from './components/CartProduct';\r\nimport { formatPrice } from '../util';\r\nimport { stripe } from '../../../../services/stripe/actions';\r\n\r\nimport './css/style.scss';\r\n\r\nclass FloatCart extends Component {\r\n  static propTypes = {\r\n     loadCart: PropTypes.func.isRequired,\r\n     updateCart: PropTypes.func.isRequired,\r\n     cartProducts: PropTypes.array.isRequired,\r\n     newProduct: PropTypes.object,\r\n     removeProduct: PropTypes.func,\r\n     productToRemove: PropTypes.object,\r\n     changeProductQuantity: PropTypes.func,\r\n     productToChange: PropTypes.object\r\n   };\r\n\r\n   state = {\r\n     newProduct: this.props.newProduct,\r\n     productToChange: this.props.productToChange,\r\n     productToRemove: this.props.productToRemove,\r\n     isOpen: false\r\n   };\r\n\r\n   static getDerivedStateFromProps(nextProps, prevState) {\r\n\r\n     if (nextProps.newProduct !== prevState.newProduct) {\r\n       return { newProduct : nextProps.newProduct }\r\n     }\r\n\r\n     if(nextProps.productToRemove !== prevState.productToRemove){\r\n       return { productToRemove: nextProps.productToRemove };\r\n     }\r\n\r\n     if (nextProps.productToChange !== prevState.productToChange) {\r\n       return { productToChange: nextProps.productToChange };\r\n     }\r\n     return null;\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState){\r\n     if(prevState.newProduct !== this.state.newProduct){\r\n       this.addProduct(this.state.newProduct);\r\n     }\r\n\r\n     if (prevState.productToRemove !== this.state.productToRemove) {\r\n       this.removeProduct(this.state.productToRemove);\r\n     }\r\n\r\n     if (prevState.productToChange !== this.state.productToChange) {\r\n       this.changeProductQuantity(this.state.productToChange);\r\n     }\r\n\r\n     this.updateLocalStorage();\r\n\r\n   }\r\n\r\n   componentDidMount() {\r\n     this.updateCart();\r\n   }\r\n\r\n  updateCart = () => {\r\n    const cartProductsLs = JSON.parse(localStorage.getItem('cartProducts'));\r\n    const cartTotalLs = JSON.parse(localStorage.getItem('cartTotal'));\r\n    const { cartProducts, cartTotal } = this.props;\r\n      if(cartProductsLs && cartTotalLs){\r\n        if(cartProductsLs.length > 0){\r\n          Object.assign(cartProducts, cartProductsLs);\r\n          Object.assign(cartTotal, cartTotalLs);\r\n          this.openFloatCart()\r\n        }\r\n      }\r\n    }\r\n\r\n    updateLocalStorage = () => {\r\n      const { cartProducts, cartTotal } = this.props;\r\n      localStorage.setItem('cartProducts', JSON.stringify(cartProducts));\r\n      localStorage.setItem('cartTotal', JSON.stringify(cartTotal));\r\n    }\r\n\r\n  openFloatCart = () => {\r\n    this.setState({ isOpen: true });\r\n  };\r\n\r\n  closeFloatCart = () => {\r\n    this.setState({ isOpen: false });\r\n  };\r\n\r\n  addProduct = product => {\r\n    const { cartProducts, updateCart } = this.props;\r\n    let productAlreadyInCart = false;\r\n\r\n    cartProducts.forEach(cp => {\r\n      if (cp.id === product.id) {\r\n        cp.quantity += product.quantity;\r\n        productAlreadyInCart = true;\r\n      }\r\n    });\r\n\r\n    if (!productAlreadyInCart) {\r\n      cartProducts.push(product);\r\n    }\r\n\r\n    updateCart(cartProducts);\r\n\r\n    this.openFloatCart();\r\n  };\r\n\r\n  removeProduct = product => {\r\n    const { cartProducts, updateCart } = this.props;\r\n\r\n    const index = cartProducts.findIndex(p => p.id === product.id);\r\n    if (index >= 0) {\r\n      cartProducts.splice(index, 1);\r\n      updateCart(cartProducts);\r\n    }\r\n  };\r\n\r\n  proceedToCheckout = () => {\r\n\r\n    const { cartTotal, cartProducts } = this.props;\r\n\r\n    if (!cartTotal.productQuantity) {\r\n      alert('Add some product in the cart!');\r\n    } else {\r\n      this.props.stripe(cartTotal, cartProducts);\r\n    }\r\n\r\n  };\r\n\r\n  changeProductQuantity = changedProduct => {\r\n    const { cartProducts, updateCart } = this.props;\r\n\r\n    const product = cartProducts.find(p => p.id === changedProduct.id);\r\n    product.quantity = changedProduct.quantity;\r\n    if (product.quantity <= 0) {\r\n      this.removeProduct(product);\r\n    }\r\n    updateCart(cartProducts);\r\n  }\r\n\r\n  render() {\r\n    const { cartTotal, cartProducts, removeProduct, changeProductQuantity } = this.props;\r\n\r\n    const products = cartProducts.map(p => {\r\n      return (\r\n        <CartProduct product={p} removeProduct={removeProduct} changeProductQuantity={changeProductQuantity} key={p.id} />\r\n      );\r\n    });\r\n\r\n    let classes = ['float-cart'];\r\n\r\n    if (!!this.state.isOpen) {\r\n      classes.push('float-cart--open');\r\n    }\r\n\r\n    return (\r\n      <div className={classes.join(' ')}>\r\n        {/* If cart open, show close (x) button */}\r\n        {this.state.isOpen && (\r\n          <div\r\n            onClick={() => this.closeFloatCart()}\r\n            className=\"float-cart__close-btn\"\r\n          >\r\n            X\r\n          </div>\r\n        )}\r\n\r\n        {/* If cart is closed, show bag with quantity of product and open cart action */}\r\n        {!this.state.isOpen && (\r\n          <span\r\n            onClick={() => this.openFloatCart()}\r\n            className=\"bag bag--float-cart-closed\"\r\n          >\r\n            <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\r\n          </span>\r\n        )}\r\n\r\n        <div className=\"float-cart__content\">\r\n          <div className=\"float-cart__header\">\r\n            <span className=\"bag\">\r\n              <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\r\n            </span>\r\n            <span className=\"header-title\">Cart</span>\r\n          </div>\r\n\r\n          <div className=\"float-cart__shelf-container\">\r\n            {products}\r\n            {!products.length && (\r\n              <p className=\"shelf-empty\">\r\n                Add some products in the cart <br />\r\n                :)\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"float-cart__footer\">\r\n            <div className=\"sub\">SUBTOTAL</div>\r\n            <div className=\"sub-price\">\r\n              <p className=\"sub-price__val\">\r\n                {`${cartTotal.currencyFormat} ${formatPrice(\r\n                  cartTotal.totalPrice,\r\n                  cartTotal.currencyId\r\n                )}`}\r\n              </p>\r\n            </div>\r\n            <div onClick={() => this.proceedToCheckout()} className=\"buy-btn\">\r\n              Checkout\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  cartProducts: state.cart.products,\r\n  newProduct: state.cart.productToAdd,\r\n  productToRemove: state.cart.productToRemove,\r\n  productToChange: state.cart.productToChange,\r\n  cartTotal: state.total.data\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { stripe, loadCart, updateCart, removeProduct, changeProductQuantity }\r\n)(FloatCart);\r\n"]},"metadata":{},"sourceType":"module"}