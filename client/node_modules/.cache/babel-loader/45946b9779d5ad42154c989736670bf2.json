{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskies\\\\beersandbrewskies\\\\src\\\\components\\\\shop\\\\components\\\\shelf\\\\index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchProducts } from '../../../../services/shelf/actions';\nimport ProductList from './components/ProductList';\nimport ShelfHeader from './components/ShelfHeader';\nimport Spinner from '../../../spinner';\nimport './css/style.scss';\n\nclass Shelf extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: false,\n      filters: this.props.filters,\n      sort: this.props.sort\n    };\n\n    this.handleFetchProducts = (filters = this.props.filters, sort = this.props.sort) => {\n      this.setState({\n        isLoading: true\n      });\n      this.props.fetchProducts(filters, sort, () => {\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchProducts();\n  } // componentWillReceiveProps(nextProps) {\n  //   const { filters: nextFilters, sort: nextSort } = nextProps;\n  //   const { filters } = this.props;\n  //   if (nextFilters.length !== filters.length) {\n  //     this.handleFetchProducts(nextFilters, undefined);\n  //   }\n  //   if (nextSort !== this.props.sort) {\n  //     this.handleFetchProducts(undefined, nextSort);\n  //   }\n  // }\n\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.filters.length !== prevState.filters.length) {\n      return {\n        filters: nextProps.filters\n      };\n    }\n\n    if (nextProps.sort !== prevState.sort) {\n      return {\n        sort: nextProps.sort\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const _this$state = this.state,\n          nextFilters = _this$state.filters,\n          nextSort = _this$state.sort;\n    const filters = prevState.filters,\n          sort = prevState.sort;\n\n    if (nextFilters.length !== filters.length) {\n      this.handleFetchProducts(nextFilters, undefined);\n    }\n\n    if (nextSort !== sort) {\n      this.handleFetchProducts(undefined, nextSort);\n    }\n  }\n\n  render() {\n    const products = this.props.products;\n    const isLoading = this.state.isLoading;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, isLoading && React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"shelf-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(ShelfHeader, {\n      productsLength: products.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(ProductList, {\n      products: products,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })));\n  }\n\n}\n\nShelf.propTypes = {\n  fetchProducts: PropTypes.func.isRequired,\n  products: PropTypes.array.isRequired,\n  filters: PropTypes.array,\n  sort: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n  products: state.shelf.products\n});\n\nexport default connect(mapStateToProps, {\n  fetchProducts\n})(Shelf);","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/components/shop/components/shelf/index.js"],"names":["React","PropTypes","connect","fetchProducts","ProductList","ShelfHeader","Spinner","Shelf","Component","state","isLoading","filters","props","sort","handleFetchProducts","setState","componentDidMount","getDerivedStateFromProps","nextProps","prevState","length","componentDidUpdate","prevProps","nextFilters","nextSort","undefined","render","products","propTypes","func","isRequired","array","string","mapStateToProps","shelf"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { fetchProducts } from '../../../../services/shelf/actions';\r\nimport ProductList from './components/ProductList';\r\nimport ShelfHeader from './components/ShelfHeader';\r\nimport Spinner from '../../../spinner';\r\nimport './css/style.scss';\r\n\r\nclass Shelf extends React.Component {\r\n  static propTypes = {\r\n     fetchProducts: PropTypes.func.isRequired,\r\n     products: PropTypes.array.isRequired,\r\n     filters: PropTypes.array,\r\n     sort: PropTypes.string\r\n   };\r\n\r\n   state = {\r\n     isLoading: false,\r\n     filters: this.props.filters,\r\n     sort: this.props.sort\r\n   };\r\n\r\n   componentDidMount() {\r\n     this.handleFetchProducts();\r\n   }\r\n\r\n   // componentWillReceiveProps(nextProps) {\r\n   //   const { filters: nextFilters, sort: nextSort } = nextProps;\r\n   //   const { filters } = this.props;\r\n   //   if (nextFilters.length !== filters.length) {\r\n   //     this.handleFetchProducts(nextFilters, undefined);\r\n   //   }\r\n\r\n   //   if (nextSort !== this.props.sort) {\r\n   //     this.handleFetchProducts(undefined, nextSort);\r\n   //   }\r\n   // }\r\n\r\n   static getDerivedStateFromProps(nextProps, prevState) {\r\n     if (nextProps.filters.length !== prevState.filters.length) {\r\n       return { filters: nextProps.filters };\r\n     }\r\n\r\n     if (nextProps.sort !== prevState.sort) {\r\n       return { sort: nextProps.sort };\r\n     }\r\n\r\n     return null;\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState) {\r\n     const { filters: nextFilters, sort: nextSort } = this.state;\r\n     const { filters, sort } = prevState;\r\n\r\n     if (nextFilters.length !== filters.length) {\r\n       this.handleFetchProducts(nextFilters, undefined);\r\n     }\r\n\r\n     if (nextSort !== sort) {\r\n       this.handleFetchProducts(undefined, nextSort);\r\n     }\r\n   }\r\n\r\n  handleFetchProducts = (\r\n    filters = this.props.filters,\r\n    sort = this.props.sort\r\n  ) => {\r\n    this.setState({ isLoading: true });\r\n    this.props.fetchProducts(filters, sort, () => {\r\n      this.setState({ isLoading: false });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { products } = this.props;\r\n    const { isLoading } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {isLoading && <Spinner />}\r\n        <div className=\"shelf-container\">\r\n          <ShelfHeader productsLength={products.length} />\r\n          <ProductList products={products} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  products: state.shelf.products\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchProducts }\r\n)(Shelf);\r\n"]},"metadata":{},"sourceType":"module"}