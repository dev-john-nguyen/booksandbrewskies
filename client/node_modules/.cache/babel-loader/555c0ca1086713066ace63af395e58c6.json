{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskies\\\\beersandbrewskies\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { LOAD_CART, ADD_PRODUCT, REMOVE_PRODUCT, CHANGE_PRODUCT_QUANTITY } from '../actions/actionTypes';\nimport update from 'immutability-helper';\nconst initialState = {\n  products: []\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_CART:\n      return _objectSpread({}, state, {\n        products: action.payload\n      });\n\n    case ADD_PRODUCT:\n      return _objectSpread({}, state, {\n        products: [...state.products, action.payload]\n      });\n\n    case REMOVE_PRODUCT:\n      return _objectSpread({}, state, {\n        products: Object.assign({}, action.payload)\n      });\n\n    case CHANGE_PRODUCT_QUANTITY:\n      const index = action.payload.i; // const newProduct = update(state, {\n      //   products: {\n      //         [index]: {\n      //           quantity: {$set: action.payload.product.quantity}\n      //         }\n      //   }\n      // });\n\n      const newProduct = update(state, {\n        products: {\n          [index]: {\n            $set: action.payload.product\n          }\n        }\n      });\n      console.log(state);\n      return _objectSpread({}, state, {\n        products: Object.assign({}, action.payload)\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/reducers/cartReducer.js"],"names":["LOAD_CART","ADD_PRODUCT","REMOVE_PRODUCT","CHANGE_PRODUCT_QUANTITY","update","initialState","products","state","action","type","payload","Object","assign","index","i","newProduct","$set","product","console","log"],"mappings":";AAAA,SAASA,SAAT,EACEC,WADF,EAEEC,cAFF,EAGEC,uBAHF,QAIO,wBAJP;AAMA,OAAOC,MAAP,MAAmB,qBAAnB;AAGA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;AAIA,gBAAe,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,SAAL;AACE,+BACKO,KADL;AAEED,QAAAA,QAAQ,EAAEE,MAAM,CAACE;AAFnB;;AAIF,SAAKT,WAAL;AACE,+BACKM,KADL;AAEED,QAAAA,QAAQ,EAAE,CAAC,GAAGC,KAAK,CAACD,QAAV,EAAoBE,MAAM,CAACE,OAA3B;AAFZ;;AAIF,SAAKR,cAAL;AACE,+BACKK,KADL;AAEED,QAAAA,QAAQ,EAAEK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,MAAM,CAACE,OAAzB;AAFZ;;AAIF,SAAKP,uBAAL;AACE,YAAMU,KAAK,GAAGL,MAAM,CAACE,OAAP,CAAeI,CAA7B,CADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,YAAMC,UAAU,GAAGX,MAAM,CAACG,KAAD,EAAQ;AAC/BD,QAAAA,QAAQ,EAAE;AACJ,WAACO,KAAD,GAAS;AAACG,YAAAA,IAAI,EAAER,MAAM,CAACE,OAAP,CAAeO;AAAtB;AADL;AADqB,OAAR,CAAzB;AAKAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACA,+BACKA,KADL;AAEED,QAAAA,QAAQ,EAAEK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,MAAM,CAACE,OAAzB;AAFZ;;AAIF;AACE,aAAOH,KAAP;AApCJ;AAsCD,CAvCD","sourcesContent":["import { LOAD_CART,\r\n  ADD_PRODUCT,\r\n  REMOVE_PRODUCT,\r\n  CHANGE_PRODUCT_QUANTITY\r\n} from '../actions/actionTypes';\r\n\r\nimport update from 'immutability-helper';\r\n\r\n\r\nconst initialState = {\r\n  products: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOAD_CART:\r\n      return {\r\n        ...state,\r\n        products: action.payload\r\n      };\r\n    case ADD_PRODUCT:\r\n      return {\r\n        ...state,\r\n        products: [...state.products, action.payload]\r\n      };\r\n    case REMOVE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        products: Object.assign({}, action.payload)\r\n      };\r\n    case CHANGE_PRODUCT_QUANTITY:\r\n      const index = action.payload.i;\r\n      // const newProduct = update(state, {\r\n      //   products: {\r\n      //         [index]: {\r\n      //           quantity: {$set: action.payload.product.quantity}\r\n      //         }\r\n      //   }\r\n      // });\r\n      const newProduct = update(state, {\r\n        products: {\r\n              [index]: {$set: action.payload.product}\r\n        }\r\n      });\r\n      console.log(state);\r\n      return {\r\n        ...state,\r\n        products: Object.assign({}, action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}