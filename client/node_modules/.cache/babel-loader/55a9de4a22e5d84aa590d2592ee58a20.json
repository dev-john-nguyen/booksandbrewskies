{"ast":null,"code":"class Bubbles {\n  constructor(options) {\n    this.options = options;\n    this.setCanvas();\n    this.options.sprite = new Image();\n\n    this.options.sprite.onload = () => {\n      this.createBubbles();\n      this.drawBubbles();\n    };\n\n    this.options.sprite.src = this.options.spriteSource;\n    this.options.spriteSize = this.options.sprite.height / this.options.spriteCount;\n    new ResizeObserver(this.resizeCanvas.bind(this)).observe(this.canvas);\n  }\n\n  setCanvas() {\n    this.canvas = document.getElementById(this.options.canvasID);\n    this.canvas.width = this.canvas.offsetWidth;\n    this.canvas.height = this.canvas.offsetHeight;\n    this.ctx = this.canvas.getContext('2d');\n  }\n\n  resizeCanvas() {\n    this.setCanvas();\n    this.createBubbles();\n  }\n\n  createBubbles() {\n    this.bubbleArray = [];\n    let bubbleCount = Math.floor(this.options.bubbleDensity * (this.canvas.width * this.canvas.height / 2000));\n    console.log(bubbleCount);\n\n    for (let i = 0; i < bubbleCount; i++) {\n      this.createBubble(i);\n    }\n  }\n\n  createBubble(i) {\n    let sprite = {};\n    let bubble = {};\n    let canvas = {};\n    sprite.posX = 0;\n    sprite.posY = Math.floor(Math.random() * this.options.spriteCount) * (this.options.sprite.height / this.options.spriteCount);\n    bubble.size = Math.floor(Math.random() * (this.options.bubbleSize[1] - this.options.bubbleSize[0]) + this.options.bubbleSize[0]);\n    bubble.velocity = Math.random() * (this.options.bubbleVelocityY[1] - this.options.bubbleVelocityY[0]) + this.options.bubbleVelocityY[0];\n    bubble.opacity = Math.random() * (this.options.bubbleOpacity[1] - this.options.bubbleOpacity[0]) + this.options.bubbleOpacity[0];\n    canvas.posX = Math.floor(Math.random() * this.canvas.width - bubble.size / 2);\n    canvas.posY = Math.floor(Math.random() * this.canvas.height);\n    let singleBubble = new Bubble(sprite, bubble, canvas);\n    this.bubbleArray.push(singleBubble);\n  }\n\n  drawBubbles() {\n    this.updateBubbles();\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    for (let i = 0; i < this.bubbleArray.length; i++) {\n      let b = this.bubbleArray[i];\n      this.ctx.globalAlpha = b.bubble.opacity;\n      this.ctx.drawImage(this.options.sprite, this.bubbleArray[i].sprite.posX, this.bubbleArray[i].sprite.posY, this.options.spriteSize, this.options.spriteSize, this.bubbleArray[i].canvas.posX, this.bubbleArray[i].canvas.posY, this.bubbleArray[i].bubble.size, this.bubbleArray[i].bubble.size);\n    }\n\n    requestAnimationFrame(this.drawBubbles.bind(this));\n  }\n\n  updateBubbles() {\n    for (let i = 0; i < this.bubbleArray.length; i++) {\n      if (this.bubbleArray[i].canvas.posY < 0) {\n        this.bubbleArray[i].canvas.posY = this.canvas.height + this.bubbleArray[i].bubble.size;\n      } else {\n        this.bubbleArray[i].canvas.posY -= this.bubbleArray[i].bubble.velocity;\n      }\n    }\n  }\n\n}\n\nclass Bubble {\n  constructor(sprite, bubble, canvas) {\n    this.sprite = sprite;\n    this.bubble = bubble;\n    this.canvas = canvas;\n  }\n\n}\n\nbubbles = new Bubbles({\n  canvasID: 'bubbles',\n  spriteSource: 'http://www.mark-boots.nl/codepenfiles/sprite.png',\n  spriteCount: 10,\n  bubbleDensity: 1.5,\n  bubbleSize: [2, 15],\n  bubbleVelocityY: [.5, 2],\n  bubbleOpacity: [.05, .25]\n});","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskiesproject/beersandbrewskies/src/components/home/bubbles.js"],"names":["Bubbles","constructor","options","setCanvas","sprite","Image","onload","createBubbles","drawBubbles","src","spriteSource","spriteSize","height","spriteCount","ResizeObserver","resizeCanvas","bind","observe","canvas","document","getElementById","canvasID","width","offsetWidth","offsetHeight","ctx","getContext","bubbleArray","bubbleCount","Math","floor","bubbleDensity","console","log","i","createBubble","bubble","posX","posY","random","size","bubbleSize","velocity","bubbleVelocityY","opacity","bubbleOpacity","singleBubble","Bubble","push","updateBubbles","clearRect","length","b","globalAlpha","drawImage","requestAnimationFrame","bubbles"],"mappings":"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","sourcesContent":["\r\nclass Bubbles{\r\n    constructor(options){\r\n        this.options = options;\r\n        this.setCanvas()\r\n        this.options.sprite = new Image();\r\n        this.options.sprite.onload = ()=> {\r\n            this.createBubbles();\r\n            this.drawBubbles();\r\n        };\r\n        this.options.sprite.src = this.options.spriteSource;\r\n        this.options.spriteSize = this.options.sprite.height / this.options.spriteCount;\r\n        new ResizeObserver(this.resizeCanvas.bind(this)).observe(this.canvas)\r\n    }\r\n\r\n    setCanvas(){\r\n        this.canvas = document.getElementById(this.options.canvasID);\r\n        this.canvas.width = this.canvas.offsetWidth;\r\n        this.canvas.height = this.canvas.offsetHeight;\r\n        this.ctx = this.canvas.getContext('2d');\r\n    }\r\n\r\n    resizeCanvas() {\r\n        this.setCanvas();\r\n        this.createBubbles()\r\n    }\r\n\r\n    createBubbles(){\r\n        this.bubbleArray = [];\r\n        let bubbleCount = Math.floor(this.options.bubbleDensity * (this.canvas.width * this.canvas.height / 2000))\r\n        console.log(bubbleCount)\r\n        for(let i = 0; i<bubbleCount; i++){\r\n            this.createBubble(i)\r\n        }\r\n    }\r\n\r\n    createBubble(i){\r\n        let sprite={};\r\n        let bubble={};\r\n        let canvas={}\r\n\r\n        sprite.posX = 0;\r\n        sprite.posY = Math.floor(Math.random() * this.options.spriteCount) * (this.options.sprite.height / this.options.spriteCount);\r\n        bubble.size = Math.floor(Math.random() * (this.options.bubbleSize[1] - this.options.bubbleSize[0]) + this.options.bubbleSize[0]);\r\n        bubble.velocity = Math.random() * (this.options.bubbleVelocityY[1] - this.options.bubbleVelocityY[0]) + this.options.bubbleVelocityY[0];\r\n        bubble.opacity = Math.random() * (this.options.bubbleOpacity[1] - this.options.bubbleOpacity[0]) + this.options.bubbleOpacity[0];\r\n        canvas.posX = Math.floor(Math.random() * this.canvas.width - ( bubble.size / 2));\r\n        canvas.posY = Math.floor(Math.random() * this.canvas.height);\r\n        let singleBubble = new Bubble(sprite, bubble, canvas);\r\n        this.bubbleArray.push(singleBubble);\r\n    }\r\n\r\n    drawBubbles(){\r\n        this.updateBubbles();\r\n        this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);\r\n\r\n        for(let i=0; i<this.bubbleArray.length;i++){\r\n            let b = this.bubbleArray[i];\r\n            this.ctx.globalAlpha = b.bubble.opacity;\r\n            this.ctx.drawImage(\r\n                this.options.sprite,\r\n                this.bubbleArray[i].sprite.posX, this.bubbleArray[i].sprite.posY, this.options.spriteSize, this.options.spriteSize,\r\n                this.bubbleArray[i].canvas.posX, this.bubbleArray[i].canvas.posY, this.bubbleArray[i].bubble.size, this.bubbleArray[i].bubble.size\r\n            )\r\n        }\r\n        requestAnimationFrame(this.drawBubbles.bind(this));\r\n    }\r\n\r\n    updateBubbles(){\r\n        for(let i = 0; i < this.bubbleArray.length; i++){\r\n            if(this.bubbleArray[i].canvas.posY < 0) {\r\n                this.bubbleArray[i].canvas.posY = this.canvas.height + this.bubbleArray[i].bubble.size;\r\n            } else {\r\n                this.bubbleArray[i].canvas.posY -= this.bubbleArray[i].bubble.velocity;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nclass Bubble{\r\n\r\n    constructor(sprite, bubble, canvas){\r\n       this.sprite = sprite;\r\n       this.bubble = bubble;\r\n       this.canvas = canvas\r\n    };\r\n}\r\n\r\n\r\n\r\nbubbles = new Bubbles({\r\n    canvasID: 'bubbles',\r\n    spriteSource: 'http://www.mark-boots.nl/codepenfiles/sprite.png',\r\n    spriteCount: 10,\r\n    bubbleDensity: 1.5,\r\n    bubbleSize: [2,15],\r\n    bubbleVelocityY: [.5,2],\r\n    bubbleOpacity: [.05,.25]\r\n});\r\n"]},"metadata":{},"sourceType":"module"}