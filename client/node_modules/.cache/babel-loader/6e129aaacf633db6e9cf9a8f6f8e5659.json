{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskies\\\\beersandbrewskies\\\\src\\\\components\\\\shop\\\\components\\\\Product.js\";\nimport React from 'react';\nimport Thumb from './Thumb';\nimport { connect } from 'react-redux';\nimport { addProduct, changeProductQuantity } from '../../../actions';\nimport Notify from './Notify';\n\nclass Product extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      added: false,\n      productAdded: []\n    };\n  } // checkForDuplicate(product) {\n  //   var duplicate = false;\n  //\n  //   this.props.cartProducts.forEach((item, index) => {\n  //     if(item.id === product.id){\n  //       product.quantity = item.quantity + 1;\n  //       this.props.changeProductQuantity(product, index);\n  //       duplicate = true;\n  //     }\n  //   });\n  //\n  //   if(!duplicate){\n  //     product.quantity = 1;\n  //     this.props.addProduct(product);\n  //   }\n  //\n  //   this.showNotify(product);\n  //\n  // }\n  // showNotify(product) {\n  //     <Notify\n  //       product = {product}\n  //       />\n  // }\n\n\n  render() {\n    const formatPrice = (x, currency) => {\n      return x.toFixed(2);\n    };\n\n    const product = this.props.product;\n    return React.createElement(\"div\", {\n      className: \"shelf-item\",\n      onClick: () => this.props.addProduct(product),\n      \"data-sku\": product.sku,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Thumb, {\n      classes: \"shelf-item__thumb\",\n      src: require(`../static/products/${product.sku}_1.jpg`),\n      alt: product.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"shelf-item__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, product.title), React.createElement(\"div\", {\n      className: \"shelf-item__price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"val\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, product.currencyFormat), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, formatPrice(product.price, product.currencyFormat)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"shelf-item__buy-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Add to cart\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cartProducts: state.cart.products\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addProduct,\n  changeProductQuantity\n})(Product);","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/components/shop/components/Product.js"],"names":["React","Thumb","connect","addProduct","changeProductQuantity","Notify","Product","Component","constructor","props","state","added","productAdded","render","formatPrice","x","currency","toFixed","product","sku","require","title","currencyFormat","price","mapStateToProps","cartProducts","cart","products"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,qBAArB,QAAkD,kBAAlD;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,KADI;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAID,GAPmC,CASpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,GAAG,CAACC,CAAD,EAAIC,QAAJ,KAAiB;AAC/B,aAAOD,CAAC,CAACE,OAAF,CAAU,CAAV,CAAP;AACL,KAFD;;AADO,UAKCC,OALD,GAKa,KAAKT,KALlB,CAKCS,OALD;AAOP,WAEE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKT,KAAL,CAAWN,UAAX,CAAsBe,OAAtB,CAFjB;AAGE,kBAAUA,OAAO,CAACC,GAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,KAAD;AACE,MAAA,OAAO,EAAC,mBADV;AAEE,MAAA,GAAG,EAAEC,OAAO,CAAE,sBAAqBF,OAAO,CAACC,GAAI,QAAnC,CAFd;AAGE,MAAA,GAAG,EAAED,OAAO,CAACG,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAUE;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCH,OAAO,CAACG,KAA1C,CAVF,EAWE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQH,OAAO,CAACI,cAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIR,WAAW,CAACI,OAAO,CAACK,KAAT,EAAeL,OAAO,CAACI,cAAvB,CAAf,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,CAXF,EAkBE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAlBF,CAFF;AAuBD;;AAjEmC;;AAoEtC,MAAME,eAAe,GAAGd,KAAK,IAAI;AAC/B,SAAO;AACLe,IAAAA,YAAY,EAAEf,KAAK,CAACgB,IAAN,CAAWC;AADpB,GAAP;AAGD,CAJD;;AAMA,eAAezB,OAAO,CACpBsB,eADoB,EAEpB;AAAErB,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAFoB,CAAP,CAGbE,OAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport Thumb from './Thumb';\r\nimport { connect } from 'react-redux';\r\nimport { addProduct, changeProductQuantity } from '../../../actions';\r\nimport Notify from './Notify';\r\n\r\nclass Product extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      added: false,\r\n      productAdded: []\r\n     };\r\n  }\r\n\r\n  // checkForDuplicate(product) {\r\n  //   var duplicate = false;\r\n  //\r\n  //   this.props.cartProducts.forEach((item, index) => {\r\n  //     if(item.id === product.id){\r\n  //       product.quantity = item.quantity + 1;\r\n  //       this.props.changeProductQuantity(product, index);\r\n  //       duplicate = true;\r\n  //     }\r\n  //   });\r\n  //\r\n  //   if(!duplicate){\r\n  //     product.quantity = 1;\r\n  //     this.props.addProduct(product);\r\n  //   }\r\n  //\r\n  //   this.showNotify(product);\r\n  //\r\n  // }\r\n\r\n  // showNotify(product) {\r\n  //     <Notify\r\n  //       product = {product}\r\n  //       />\r\n  // }\r\n\r\n  render() {\r\n    const formatPrice = (x, currency) => {\r\n          return x.toFixed(2);\r\n    };\r\n\r\n    const { product } = this.props;\r\n\r\n    return (\r\n\r\n      <div\r\n        className=\"shelf-item\"\r\n        onClick={() => this.props.addProduct(product)}\r\n        data-sku={product.sku}\r\n      >\r\n        <Thumb\r\n          classes=\"shelf-item__thumb\"\r\n          src={require(`../static/products/${product.sku}_1.jpg`)}\r\n          alt={product.title}\r\n        />\r\n        <p className=\"shelf-item__title\">{product.title}</p>\r\n        <div className=\"shelf-item__price\">\r\n          <div className=\"val\">\r\n            <small>{product.currencyFormat}</small>\r\n            <b>{formatPrice(product.price,product.currencyFormat)}</b>\r\n            <span></span>\r\n          </div>\r\n        </div>\r\n        <div className=\"shelf-item__buy-btn\">Add to cart</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cartProducts: state.cart.products\r\n  }\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProduct, changeProductQuantity }\r\n)(Product);\r\n"]},"metadata":{},"sourceType":"module"}