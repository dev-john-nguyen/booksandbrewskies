{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskies\\\\beersandbrewskies\\\\src\\\\components\\\\shop\\\\FloatCart\\\\index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loadCart, removeProduct, changeProductQuantity } from '../services/cart/actions';\nimport { updateCart } from '../../services/total/actions';\nimport CartProduct from './CartProduct';\nimport { formatPrice } from '../../services/util';\nimport './style.scss';\n\nclass FloatCart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOpen: false\n    };\n\n    this.openFloatCart = () => {\n      this.setState({\n        isOpen: true\n      });\n    };\n\n    this.closeFloatCart = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n\n    this.addProduct = product => {\n      const _this$props = this.props,\n            cartProducts = _this$props.cartProducts,\n            updateCart = _this$props.updateCart;\n      let productAlreadyInCart = false;\n      cartProducts.forEach(cp => {\n        if (cp.id === product.id) {\n          cp.quantity += product.quantity;\n          productAlreadyInCart = true;\n        }\n      });\n\n      if (!productAlreadyInCart) {\n        cartProducts.push(product);\n      }\n\n      updateCart(cartProducts);\n      this.openFloatCart();\n    };\n\n    this.removeProduct = product => {\n      const _this$props2 = this.props,\n            cartProducts = _this$props2.cartProducts,\n            updateCart = _this$props2.updateCart;\n      const index = cartProducts.findIndex(p => p.id === product.id);\n\n      if (index >= 0) {\n        cartProducts.splice(index, 1);\n        updateCart(cartProducts);\n      }\n    };\n\n    this.proceedToCheckout = () => {\n      const _this$props$cartTotal = this.props.cartTotal,\n            totalPrice = _this$props$cartTotal.totalPrice,\n            productQuantity = _this$props$cartTotal.productQuantity,\n            currencyFormat = _this$props$cartTotal.currencyFormat,\n            currencyId = _this$props$cartTotal.currencyId;\n\n      if (!productQuantity) {\n        alert('Add some product in the cart!');\n      } else {\n        alert(`Checkout - Subtotal: ${currencyFormat} ${formatPrice(totalPrice, currencyId)}`);\n      }\n    };\n\n    this.changeProductQuantity = changedProduct => {\n      const _this$props3 = this.props,\n            cartProducts = _this$props3.cartProducts,\n            updateCart = _this$props3.updateCart;\n      const product = cartProducts.find(p => p.id === changedProduct.id);\n      product.quantity = changedProduct.quantity;\n\n      if (product.quantity <= 0) {\n        this.removeProduct(product);\n      }\n\n      updateCart(cartProducts);\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newProduct !== this.props.newProduct) {\n      this.addProduct(nextProps.newProduct);\n    }\n\n    if (nextProps.productToRemove !== this.props.productToRemove) {\n      this.removeProduct(nextProps.productToRemove);\n    }\n\n    if (nextProps.productToChange !== this.props.productToChange) {\n      this.changeProductQuantity(nextProps.productToChange);\n    }\n  }\n\n  render() {\n    const _this$props4 = this.props,\n          cartTotal = _this$props4.cartTotal,\n          cartProducts = _this$props4.cartProducts,\n          removeProduct = _this$props4.removeProduct,\n          changeProductQuantity = _this$props4.changeProductQuantity;\n    const products = cartProducts.map(p => {\n      return React.createElement(CartProduct, {\n        product: p,\n        removeProduct: removeProduct,\n        changeProductQuantity: changeProductQuantity,\n        key: p.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      });\n    });\n    let classes = ['float-cart'];\n\n    if (!!this.state.isOpen) {\n      classes.push('float-cart--open');\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, this.state.isOpen && React.createElement(\"div\", {\n      onClick: () => this.closeFloatCart(),\n      className: \"float-cart__close-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"X\"), !this.state.isOpen && React.createElement(\"span\", {\n      onClick: () => this.openFloatCart(),\n      className: \"bag bag--float-cart-closed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag__quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, cartTotal.productQuantity)), React.createElement(\"div\", {\n      className: \"float-cart__content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-cart__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag__quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, cartTotal.productQuantity)), React.createElement(\"span\", {\n      className: \"header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Cart\")), React.createElement(\"div\", {\n      className: \"float-cart__shelf-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, products, !products.length && React.createElement(\"p\", {\n      className: \"shelf-empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Add some products in the cart \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), \":)\")), React.createElement(\"div\", {\n      className: \"float-cart__footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sub\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"SUBTOTAL\"), React.createElement(\"div\", {\n      className: \"sub-price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"sub-price__val\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, `${cartTotal.currencyFormat} ${formatPrice(cartTotal.totalPrice, cartTotal.currencyId)}`), React.createElement(\"small\", {\n      className: \"sub-price__installment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, !!cartTotal.installments && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, `OR UP TO ${cartTotal.installments} x ${cartTotal.currencyFormat} ${formatPrice(cartTotal.totalPrice / cartTotal.installments, cartTotal.currencyId)}`))), React.createElement(\"div\", {\n      onClick: () => this.proceedToCheckout(),\n      className: \"buy-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Checkout\"))));\n  }\n\n}\n\nFloatCart.propTypes = {\n  loadCart: PropTypes.func.isRequired,\n  updateCart: PropTypes.func.isRequired,\n  cartProducts: PropTypes.array.isRequired,\n  newProduct: PropTypes.object,\n  removeProduct: PropTypes.func,\n  productToRemove: PropTypes.object,\n  changeProductQuantity: PropTypes.func,\n  productToChange: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  cartProducts: \"dsaf\",\n  newProduct: state.cart.productToAdd,\n  productToRemove: state.cart.productToRemove,\n  productToChange: state.cart.productToChange,\n  cartTotal: state.total.data\n});\n\nexport default connect(mapStateToProps, {\n  loadCart,\n  updateCart,\n  removeProduct,\n  changeProductQuantity\n})(FloatCart);","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/components/shop/FloatCart/index.js"],"names":["React","Component","PropTypes","connect","loadCart","removeProduct","changeProductQuantity","updateCart","CartProduct","formatPrice","FloatCart","state","isOpen","openFloatCart","setState","closeFloatCart","addProduct","product","props","cartProducts","productAlreadyInCart","forEach","cp","id","quantity","push","index","findIndex","p","splice","proceedToCheckout","cartTotal","totalPrice","productQuantity","currencyFormat","currencyId","alert","changedProduct","find","componentWillReceiveProps","nextProps","newProduct","productToRemove","productToChange","render","products","map","classes","join","length","installments","propTypes","func","isRequired","array","object","mapStateToProps","cart","productToAdd","total","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,aAAnB,EAAkCC,qBAAlC,QAA+D,0BAA/D;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,OAAO,cAAP;;AAEA,MAAMC,SAAN,SAAwBT,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAYhCU,KAZgC,GAYxB;AACNC,MAAAA,MAAM,EAAE;AADF,KAZwB;;AAAA,SA8BhCC,aA9BgC,GA8BhB,MAAM;AACpB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KAhC+B;;AAAA,SAkChCG,cAlCgC,GAkCf,MAAM;AACrB,WAAKD,QAAL,CAAc;AAAEF,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KApC+B;;AAAA,SAsChCI,UAtCgC,GAsCnBC,OAAO,IAAI;AAAA,0BACe,KAAKC,KADpB;AAAA,YACdC,YADc,eACdA,YADc;AAAA,YACAZ,UADA,eACAA,UADA;AAEtB,UAAIa,oBAAoB,GAAG,KAA3B;AAEAD,MAAAA,YAAY,CAACE,OAAb,CAAqBC,EAAE,IAAI;AACzB,YAAIA,EAAE,CAACC,EAAH,KAAUN,OAAO,CAACM,EAAtB,EAA0B;AACxBD,UAAAA,EAAE,CAACE,QAAH,IAAeP,OAAO,CAACO,QAAvB;AACAJ,UAAAA,oBAAoB,GAAG,IAAvB;AACD;AACF,OALD;;AAOA,UAAI,CAACA,oBAAL,EAA2B;AACzBD,QAAAA,YAAY,CAACM,IAAb,CAAkBR,OAAlB;AACD;;AAEDV,MAAAA,UAAU,CAACY,YAAD,CAAV;AACA,WAAKN,aAAL;AACD,KAvD+B;;AAAA,SAyDhCR,aAzDgC,GAyDhBY,OAAO,IAAI;AAAA,2BACY,KAAKC,KADjB;AAAA,YACjBC,YADiB,gBACjBA,YADiB;AAAA,YACHZ,UADG,gBACHA,UADG;AAGzB,YAAMmB,KAAK,GAAGP,YAAY,CAACQ,SAAb,CAAuBC,CAAC,IAAIA,CAAC,CAACL,EAAF,KAASN,OAAO,CAACM,EAA7C,CAAd;;AACA,UAAIG,KAAK,IAAI,CAAb,EAAgB;AACdP,QAAAA,YAAY,CAACU,MAAb,CAAoBH,KAApB,EAA2B,CAA3B;AACAnB,QAAAA,UAAU,CAACY,YAAD,CAAV;AACD;AACF,KAjE+B;;AAAA,SAmEhCW,iBAnEgC,GAmEZ,MAAM;AAAA,oCAMpB,KAAKZ,KAAL,CAAWa,SANS;AAAA,YAEtBC,UAFsB,yBAEtBA,UAFsB;AAAA,YAGtBC,eAHsB,yBAGtBA,eAHsB;AAAA,YAItBC,cAJsB,yBAItBA,cAJsB;AAAA,YAKtBC,UALsB,yBAKtBA,UALsB;;AAQxB,UAAI,CAACF,eAAL,EAAsB;AACpBG,QAAAA,KAAK,CAAC,+BAAD,CAAL;AACD,OAFD,MAEO;AACLA,QAAAA,KAAK,CACF,wBAAuBF,cAAe,IAAGzB,WAAW,CACnDuB,UADmD,EAEnDG,UAFmD,CAGnD,EAJC,CAAL;AAMD;AACF,KArF+B;;AAAA,SAuFhC7B,qBAvFgC,GAuFR+B,cAAc,IAAI;AAAA,2BACH,KAAKnB,KADF;AAAA,YAChCC,YADgC,gBAChCA,YADgC;AAAA,YAClBZ,UADkB,gBAClBA,UADkB;AAGxC,YAAMU,OAAO,GAAGE,YAAY,CAACmB,IAAb,CAAkBV,CAAC,IAAIA,CAAC,CAACL,EAAF,KAASc,cAAc,CAACd,EAA/C,CAAhB;AACAN,MAAAA,OAAO,CAACO,QAAR,GAAmBa,cAAc,CAACb,QAAlC;;AACA,UAAIP,OAAO,CAACO,QAAR,IAAoB,CAAxB,EAA2B;AACzB,aAAKnB,aAAL,CAAmBY,OAAnB;AACD;;AACDV,MAAAA,UAAU,CAACY,YAAD,CAAV;AACD,KAhG+B;AAAA;;AAgBhCoB,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIA,SAAS,CAACC,UAAV,KAAyB,KAAKvB,KAAL,CAAWuB,UAAxC,EAAoD;AAClD,WAAKzB,UAAL,CAAgBwB,SAAS,CAACC,UAA1B;AACD;;AAED,QAAID,SAAS,CAACE,eAAV,KAA8B,KAAKxB,KAAL,CAAWwB,eAA7C,EAA8D;AAC5D,WAAKrC,aAAL,CAAmBmC,SAAS,CAACE,eAA7B;AACD;;AAED,QAAIF,SAAS,CAACG,eAAV,KAA8B,KAAKzB,KAAL,CAAWyB,eAA7C,EAA8D;AAC5D,WAAKrC,qBAAL,CAA2BkC,SAAS,CAACG,eAArC;AACD;AACF;;AAsEDC,EAAAA,MAAM,GAAG;AAAA,yBACmE,KAAK1B,KADxE;AAAA,UACCa,SADD,gBACCA,SADD;AAAA,UACYZ,YADZ,gBACYA,YADZ;AAAA,UAC0Bd,aAD1B,gBAC0BA,aAD1B;AAAA,UACyCC,qBADzC,gBACyCA,qBADzC;AAGP,UAAMuC,QAAQ,GAAG1B,YAAY,CAAC2B,GAAb,CAAiBlB,CAAC,IAAI;AACrC,aACE,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAEA,CAAtB;AAAyB,QAAA,aAAa,EAAEvB,aAAxC;AAAuD,QAAA,qBAAqB,EAAEC,qBAA9E;AAAqG,QAAA,GAAG,EAAEsB,CAAC,CAACL,EAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KAJgB,CAAjB;AAMA,QAAIwB,OAAO,GAAG,CAAC,YAAD,CAAd;;AAEA,QAAI,CAAC,CAAC,KAAKpC,KAAL,CAAWC,MAAjB,EAAyB;AACvBmC,MAAAA,OAAO,CAACtB,IAAR,CAAa,kBAAb;AACD;;AAED,WACE;AAAK,MAAA,SAAS,EAAEsB,OAAO,CAACC,IAAR,CAAa,GAAb,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAKrC,KAAL,CAAWC,MAAX,IACC;AACE,MAAA,OAAO,EAAE,MAAM,KAAKG,cAAL,EADjB;AAEE,MAAA,SAAS,EAAC,uBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,EAYG,CAAC,KAAKJ,KAAL,CAAWC,MAAZ,IACC;AACE,MAAA,OAAO,EAAE,MAAM,KAAKC,aAAL,EADjB;AAEE,MAAA,SAAS,EAAC,4BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCkB,SAAS,CAACE,eAA3C,CAJF,CAbJ,EAqBE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCF,SAAS,CAACE,eAA3C,CADF,CADF,EAIE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF,EAQE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGY,QADH,EAEG,CAACA,QAAQ,CAACI,MAAV,IACC;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCACgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhC,OAHJ,CARF,EAkBE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,GAAElB,SAAS,CAACG,cAAe,IAAGzB,WAAW,CACzCsB,SAAS,CAACC,UAD+B,EAEzCD,SAAS,CAACI,UAF+B,CAGzC,EAJJ,CADF,EAOE;AAAO,MAAA,SAAS,EAAC,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,CAACJ,SAAS,CAACmB,YAAZ,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,YAAWnB,SAAS,CAACmB,YAAa,MAClCnB,SAAS,CAACG,cACX,IAAGzB,WAAW,CACbsB,SAAS,CAACC,UAAV,GAAuBD,SAAS,CAACmB,YADpB,EAEbnB,SAAS,CAACI,UAFG,CAGb,EANJ,CAFJ,CAPF,CAFF,EAsBE;AAAK,MAAA,OAAO,EAAE,MAAM,KAAKL,iBAAL,EAApB;AAA8C,MAAA,SAAS,EAAC,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtBF,CAlBF,CArBF,CADF;AAqED;;AAtL+B;;AAA5BpB,S,CACGyC,S,GAAY;AACjB/C,EAAAA,QAAQ,EAAEF,SAAS,CAACkD,IAAV,CAAeC,UADR;AAEjB9C,EAAAA,UAAU,EAAEL,SAAS,CAACkD,IAAV,CAAeC,UAFV;AAGjBlC,EAAAA,YAAY,EAAEjB,SAAS,CAACoD,KAAV,CAAgBD,UAHb;AAIjBZ,EAAAA,UAAU,EAAEvC,SAAS,CAACqD,MAJL;AAKjBlD,EAAAA,aAAa,EAAEH,SAAS,CAACkD,IALR;AAMjBV,EAAAA,eAAe,EAAExC,SAAS,CAACqD,MANV;AAOjBjD,EAAAA,qBAAqB,EAAEJ,SAAS,CAACkD,IAPhB;AAQjBT,EAAAA,eAAe,EAAEzC,SAAS,CAACqD;AARV,C;;AAwLrB,MAAMC,eAAe,GAAG7C,KAAK,KAAK;AAChCQ,EAAAA,YAAY,EAAE,MADkB;AAEhCsB,EAAAA,UAAU,EAAE9B,KAAK,CAAC8C,IAAN,CAAWC,YAFS;AAGhChB,EAAAA,eAAe,EAAE/B,KAAK,CAAC8C,IAAN,CAAWf,eAHI;AAIhCC,EAAAA,eAAe,EAAEhC,KAAK,CAAC8C,IAAN,CAAWd,eAJI;AAKhCZ,EAAAA,SAAS,EAAEpB,KAAK,CAACgD,KAAN,CAAYC;AALS,CAAL,CAA7B;;AAQA,eAAezD,OAAO,CACpBqD,eADoB,EAEpB;AAAEpD,EAAAA,QAAF;AAAYG,EAAAA,UAAZ;AAAwBF,EAAAA,aAAxB;AAAuCC,EAAAA;AAAvC,CAFoB,CAAP,CAGbI,SAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { loadCart, removeProduct, changeProductQuantity } from '../services/cart/actions';\nimport { updateCart } from '../../services/total/actions';\nimport CartProduct from './CartProduct';\nimport { formatPrice } from '../../services/util';\n\nimport './style.scss';\n\nclass FloatCart extends Component {\n  static propTypes = {\n    loadCart: PropTypes.func.isRequired,\n    updateCart: PropTypes.func.isRequired,\n    cartProducts: PropTypes.array.isRequired,\n    newProduct: PropTypes.object,\n    removeProduct: PropTypes.func,\n    productToRemove: PropTypes.object,\n    changeProductQuantity: PropTypes.func,\n    productToChange: PropTypes.object,\n  };\n\n  state = {\n    isOpen: false\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newProduct !== this.props.newProduct) {\n      this.addProduct(nextProps.newProduct);\n    }\n\n    if (nextProps.productToRemove !== this.props.productToRemove) {\n      this.removeProduct(nextProps.productToRemove);\n    }\n\n    if (nextProps.productToChange !== this.props.productToChange) {\n      this.changeProductQuantity(nextProps.productToChange);\n    }\n  }\n\n  openFloatCart = () => {\n    this.setState({ isOpen: true });\n  };\n\n  closeFloatCart = () => {\n    this.setState({ isOpen: false });\n  };\n\n  addProduct = product => {\n    const { cartProducts, updateCart } = this.props;\n    let productAlreadyInCart = false;\n\n    cartProducts.forEach(cp => {\n      if (cp.id === product.id) {\n        cp.quantity += product.quantity;\n        productAlreadyInCart = true;\n      }\n    });\n\n    if (!productAlreadyInCart) {\n      cartProducts.push(product);\n    }\n\n    updateCart(cartProducts);\n    this.openFloatCart();\n  };\n\n  removeProduct = product => {\n    const { cartProducts, updateCart } = this.props;\n\n    const index = cartProducts.findIndex(p => p.id === product.id);\n    if (index >= 0) {\n      cartProducts.splice(index, 1);\n      updateCart(cartProducts);\n    }\n  };\n\n  proceedToCheckout = () => {\n    const {\n      totalPrice,\n      productQuantity,\n      currencyFormat,\n      currencyId\n    } = this.props.cartTotal;\n\n    if (!productQuantity) {\n      alert('Add some product in the cart!');\n    } else {\n      alert(\n        `Checkout - Subtotal: ${currencyFormat} ${formatPrice(\n          totalPrice,\n          currencyId\n        )}`\n      );\n    }\n  };\n\n  changeProductQuantity = changedProduct => {\n    const { cartProducts, updateCart } = this.props;\n\n    const product = cartProducts.find(p => p.id === changedProduct.id);\n    product.quantity = changedProduct.quantity;\n    if (product.quantity <= 0) {\n      this.removeProduct(product);\n    }\n    updateCart(cartProducts);\n  }\n\n  render() {\n    const { cartTotal, cartProducts, removeProduct, changeProductQuantity } = this.props;\n\n    const products = cartProducts.map(p => {\n      return (\n        <CartProduct product={p} removeProduct={removeProduct} changeProductQuantity={changeProductQuantity} key={p.id} />\n      );\n    });\n\n    let classes = ['float-cart'];\n\n    if (!!this.state.isOpen) {\n      classes.push('float-cart--open');\n    }\n\n    return (\n      <div className={classes.join(' ')}>\n        {/* If cart open, show close (x) button */}\n        {this.state.isOpen && (\n          <div\n            onClick={() => this.closeFloatCart()}\n            className=\"float-cart__close-btn\"\n          >\n            X\n          </div>\n        )}\n\n        {/* If cart is closed, show bag with quantity of product and open cart action */}\n        {!this.state.isOpen && (\n          <span\n            onClick={() => this.openFloatCart()}\n            className=\"bag bag--float-cart-closed\"\n          >\n            <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\n          </span>\n        )}\n\n        <div className=\"float-cart__content\">\n          <div className=\"float-cart__header\">\n            <span className=\"bag\">\n              <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\n            </span>\n            <span className=\"header-title\">Cart</span>\n          </div>\n\n          <div className=\"float-cart__shelf-container\">\n            {products}\n            {!products.length && (\n              <p className=\"shelf-empty\">\n                Add some products in the cart <br />\n                :)\n              </p>\n            )}\n          </div>\n\n          <div className=\"float-cart__footer\">\n            <div className=\"sub\">SUBTOTAL</div>\n            <div className=\"sub-price\">\n              <p className=\"sub-price__val\">\n                {`${cartTotal.currencyFormat} ${formatPrice(\n                  cartTotal.totalPrice,\n                  cartTotal.currencyId\n                )}`}\n              </p>\n              <small className=\"sub-price__installment\">\n                {!!cartTotal.installments && (\n                  <span>\n                    {`OR UP TO ${cartTotal.installments} x ${\n                      cartTotal.currencyFormat\n                    } ${formatPrice(\n                      cartTotal.totalPrice / cartTotal.installments,\n                      cartTotal.currencyId\n                    )}`}\n                  </span>\n                )}\n              </small>\n            </div>\n            <div onClick={() => this.proceedToCheckout()} className=\"buy-btn\">\n              Checkout\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  cartProducts: \"dsaf\",\n  newProduct: state.cart.productToAdd,\n  productToRemove: state.cart.productToRemove,\n  productToChange: state.cart.productToChange,\n  cartTotal: state.total.data\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadCart, updateCart, removeProduct, changeProductQuantity }\n)(FloatCart);\n"]},"metadata":{},"sourceType":"module"}