{"ast":null,"code":"import { UPDATE_CART } from './actionTypes';\nexport const updateCart = cartProducts => dispatch => {\n  let productQuantity = cartProducts.reduce((sum, p) => {\n    sum += p.quantity;\n    return sum;\n  }, 0);\n  let totalPrice = cartProducts.reduce((sum, p) => {\n    sum += p.price * p.quantity;\n    return sum;\n  }, 0);\n  let installments = cartProducts.reduce((greater, p) => {\n    greater = p.installments > greater ? p.installments : greater;\n    return greater;\n  }, 0);\n  let cartTotal = {\n    productQuantity,\n    installments,\n    totalPrice,\n    currencyId: 'USD',\n    currencyFormat: '$'\n  };\n  dispatch({\n    type: UPDATE_CART,\n    payload: cartTotal\n  });\n};","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/services/total/actions.js"],"names":["UPDATE_CART","updateCart","cartProducts","dispatch","productQuantity","reduce","sum","p","quantity","totalPrice","price","installments","greater","cartTotal","currencyId","currencyFormat","type","payload"],"mappings":"AAAA,SAASA,WAAT,QAA4B,eAA5B;AAEA,OAAO,MAAMC,UAAU,GAAGC,YAAY,IAAIC,QAAQ,IAAI;AACpD,MAAIC,eAAe,GAAGF,YAAY,CAACG,MAAb,CAAoB,CAACC,GAAD,EAAMC,CAAN,KAAY;AACpDD,IAAAA,GAAG,IAAIC,CAAC,CAACC,QAAT;AACA,WAAOF,GAAP;AACD,GAHqB,EAGnB,CAHmB,CAAtB;AAKA,MAAIG,UAAU,GAAGP,YAAY,CAACG,MAAb,CAAoB,CAACC,GAAD,EAAMC,CAAN,KAAY;AAC/CD,IAAAA,GAAG,IAAIC,CAAC,CAACG,KAAF,GAAUH,CAAC,CAACC,QAAnB;AACA,WAAOF,GAAP;AACD,GAHgB,EAGd,CAHc,CAAjB;AAKA,MAAIK,YAAY,GAAGT,YAAY,CAACG,MAAb,CAAoB,CAACO,OAAD,EAAUL,CAAV,KAAgB;AACrDK,IAAAA,OAAO,GAAGL,CAAC,CAACI,YAAF,GAAiBC,OAAjB,GAA2BL,CAAC,CAACI,YAA7B,GAA4CC,OAAtD;AACA,WAAOA,OAAP;AACD,GAHkB,EAGhB,CAHgB,CAAnB;AAKA,MAAIC,SAAS,GAAG;AACdT,IAAAA,eADc;AAEdO,IAAAA,YAFc;AAGdF,IAAAA,UAHc;AAIdK,IAAAA,UAAU,EAAE,KAJE;AAKdC,IAAAA,cAAc,EAAE;AALF,GAAhB;AAQAZ,EAAAA,QAAQ,CAAC;AACPa,IAAAA,IAAI,EAAEhB,WADC;AAEPiB,IAAAA,OAAO,EAAEJ;AAFF,GAAD,CAAR;AAID,CA5BM","sourcesContent":["import { UPDATE_CART } from './actionTypes';\r\n\r\nexport const updateCart = cartProducts => dispatch => {\r\n  let productQuantity = cartProducts.reduce((sum, p) => {\r\n    sum += p.quantity;\r\n    return sum;\r\n  }, 0);\r\n\r\n  let totalPrice = cartProducts.reduce((sum, p) => {\r\n    sum += p.price * p.quantity;\r\n    return sum;\r\n  }, 0);\r\n\r\n  let installments = cartProducts.reduce((greater, p) => {\r\n    greater = p.installments > greater ? p.installments : greater;\r\n    return greater;\r\n  }, 0);\r\n\r\n  let cartTotal = {\r\n    productQuantity,\r\n    installments,\r\n    totalPrice,\r\n    currencyId: 'USD',\r\n    currencyFormat: '$'\r\n  };\r\n\r\n  dispatch({\r\n    type: UPDATE_CART,\r\n    payload: cartTotal\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}