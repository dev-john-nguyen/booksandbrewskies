{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskies\\\\beersandbrewskies\\\\src\\\\components\\\\shop\\\\components\\\\checkout\\\\index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport CartProduct from '../floatcart/components/CartProduct';\nimport { updateCart } from '../../../../services/total/actions';\nimport { formatPrice } from '../util';\nimport { stripe } from '../../../../services/stripe/actions';\n\nclass Checkout extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.updateLocalStorage = () => {\n      const _this$props = this.props,\n            cartProducts = _this$props.cartProducts,\n            cartTotal = _this$props.cartTotal;\n      localStorage.setItem('cartProducts', JSON.stringify(cartProducts));\n      localStorage.setItem('cartTotal', JSON.stringify(cartTotal));\n      console.log(cartProducts);\n    };\n\n    this.updateCart = () => {\n      const cartProductsLs = JSON.parse(localStorage.getItem('cartProducts'));\n      const cartTotalLs = JSON.parse(localStorage.getItem('cartTotal'));\n      const _this$props2 = this.props,\n            cartProducts = _this$props2.cartProducts,\n            cartTotal = _this$props2.cartTotal;\n\n      if (cartProductsLs && cartTotalLs) {\n        if (cartProductsLs.length > 0) {\n          Object.assign(cartProducts, cartProductsLs);\n          Object.assign(cartTotal, cartTotalLs);\n        }\n      }\n    };\n\n    this.removeProduct = product => {\n      const _this$props3 = this.props,\n            cartProducts = _this$props3.cartProducts,\n            updateCart = _this$props3.updateCart;\n      const index = cartProducts.findIndex(p => p.id === product.id);\n\n      if (index >= 0) {\n        cartProducts.splice(index, 1);\n        updateCart(cartProducts);\n      }\n    };\n\n    this.changeProductQuantity = changedProduct => {\n      const _this$props4 = this.props,\n            cartProducts = _this$props4.cartProducts,\n            updateCart = _this$props4.updateCart;\n      const product = cartProducts.find(p => p.id === changedProduct.id);\n      product.quantity = changedProduct.quantity;\n\n      if (product.quantity <= 0) {\n        this.removeProduct(product);\n      }\n\n      updateCart(cartProducts);\n    };\n\n    this.proceedToPay = () => {\n      const _this$props5 = this.props,\n            cartTotal = _this$props5.cartTotal,\n            cartProducts = _this$props5.cartProducts;\n\n      if (!cartTotal.productQuantity) {\n        alert('Add some product in the cart!');\n      } else {\n        this.props.stripe(cartTotal, cartProducts);\n      }\n    };\n  }\n\n  componentDidUpdate() {\n    this.updateLocalStorage();\n  }\n\n  componentDidMount() {\n    this.updateCart();\n  }\n\n  render() {\n    const _this$props6 = this.props,\n          cartProducts = _this$props6.cartProducts,\n          cartTotal = _this$props6.cartTotal;\n    const removeProduct = this.removeProduct,\n          changeProductQuantity = this.changeProductQuantity;\n    const products = cartProducts.map(p => {\n      return React.createElement(CartProduct, {\n        product: p,\n        removeProduct: removeProduct,\n        changeProductQuantity: changeProductQuantity,\n        key: p.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, products, React.createElement(\"p\", {\n      className: \"sub-price__val\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, `${cartTotal.currencyFormat} ${formatPrice(cartTotal.totalPrice, cartTotal.currencyId)}`), React.createElement(\"div\", {\n      onClick: () => this.proceedToPay(),\n      className: \"buy-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Checkout\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cartProducts: state.cart.products,\n    cartTotal: state.total.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateCart,\n  stripe\n})(Checkout);","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/components/shop/components/checkout/index.js"],"names":["React","PropTypes","connect","CartProduct","updateCart","formatPrice","stripe","Checkout","Component","updateLocalStorage","props","cartProducts","cartTotal","localStorage","setItem","JSON","stringify","console","log","cartProductsLs","parse","getItem","cartTotalLs","length","Object","assign","removeProduct","product","index","findIndex","p","id","splice","changeProductQuantity","changedProduct","find","quantity","proceedToPay","productQuantity","alert","componentDidUpdate","componentDidMount","render","products","map","currencyFormat","totalPrice","currencyId","mapStateToProps","state","cart","total","data"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport CartProduct from '../floatcart/components/CartProduct';\r\nimport { updateCart } from '../../../../services/total/actions';\r\nimport { formatPrice } from '../util';\r\nimport { stripe } from '../../../../services/stripe/actions';\r\n\r\nclass Checkout extends React.Component {\r\n  componentDidUpdate() {\r\n    this.updateLocalStorage();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateCart();\r\n  }\r\n\r\n  updateLocalStorage = () => {\r\n    const { cartProducts, cartTotal } = this.props;\r\n    localStorage.setItem('cartProducts', JSON.stringify(cartProducts));\r\n    localStorage.setItem('cartTotal', JSON.stringify(cartTotal));\r\n    console.log(cartProducts);\r\n  }\r\n\r\n  updateCart = () => {\r\n    const cartProductsLs = JSON.parse(localStorage.getItem('cartProducts'));\r\n    const cartTotalLs = JSON.parse(localStorage.getItem('cartTotal'));\r\n    const { cartProducts, cartTotal } = this.props;\r\n      if(cartProductsLs && cartTotalLs){\r\n        if(cartProductsLs.length > 0){\r\n          Object.assign(cartProducts, cartProductsLs);\r\n          Object.assign(cartTotal, cartTotalLs);\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n  removeProduct = product => {\r\n    const { cartProducts, updateCart } = this.props;\r\n\r\n    const index = cartProducts.findIndex(p => p.id === product.id);\r\n    if (index >= 0) {\r\n      cartProducts.splice(index, 1);\r\n      updateCart(cartProducts);\r\n    }\r\n  };\r\n\r\n  changeProductQuantity = changedProduct => {\r\n    const { cartProducts, updateCart } = this.props;\r\n\r\n    const product = cartProducts.find(p => p.id === changedProduct.id);\r\n    product.quantity = changedProduct.quantity;\r\n    if (product.quantity <= 0) {\r\n      this.removeProduct(product);\r\n    }\r\n    updateCart(cartProducts);\r\n  }\r\n\r\n  proceedToPay = () => {\r\n\r\n    const { cartTotal, cartProducts } = this.props;\r\n\r\n    if (!cartTotal.productQuantity) {\r\n      alert('Add some product in the cart!');\r\n    } else {\r\n      this.props.stripe(cartTotal, cartProducts);\r\n    }\r\n\r\n  };\r\n\r\n\r\n\r\n    render(){\r\n      const { cartProducts, cartTotal } = this.props;\r\n      const { removeProduct, changeProductQuantity } = this\r\n\r\n      const products = cartProducts.map(p => {\r\n        return (\r\n          <CartProduct product={p} removeProduct={removeProduct} changeProductQuantity={changeProductQuantity} key={p.id} />\r\n        );\r\n      });\r\n\r\n\r\n      return (\r\n      <React.Fragment>\r\n        {products}\r\n        <p className=\"sub-price__val\">\r\n          {`${cartTotal.currencyFormat} ${formatPrice(\r\n            cartTotal.totalPrice,\r\n            cartTotal.currencyId\r\n          )}`}\r\n        </p>\r\n        <div onClick={() => this.proceedToPay()} className=\"buy-btn\">\r\n          Checkout\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  cartProducts: state.cart.products,\r\n  cartTotal: state.total.data\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{updateCart, stripe})(Checkout);\r\n"]},"metadata":{},"sourceType":"module"}