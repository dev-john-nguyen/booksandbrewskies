{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskies\\\\beersandbrewskies\\\\src\\\\components\\\\shop\\\\components\\\\checkout\\\\components\\\\payment\\\\components\\\\CheckoutForm.js\";\nimport React from 'react';\nimport { injectStripe } from 'react-stripe-elements';\nimport CardSection from './CardSection';\n\nclass CheckoutForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = ev => {\n      // We don't want to let default form submission happen here, which would refresh the page.\n      ev.preventDefault(); // Use Elements to get a reference to the Card Element mounted somewhere\n      // in your <Elements> tree. Elements will know how to find your Card Element\n      // because only one is allowed.\n      // See our getElement documentation for more:\n      // https://stripe.com/docs/stripe-js/reference#elements-get-element\n\n      const cardElement = this.props.elements.getElement('card'); // From here we can call createPaymentMethod to create a PaymentMethod\n      // See our createPaymentMethod documentation for more:\n      // https://stripe.com/docs/stripe-js/reference#stripe-create-payment-method\n\n      this.props.stripe.createPaymentMethod({\n        type: 'card',\n        card: cardElement,\n        billing_details: {\n          name: 'Jenny Rosen'\n        }\n      }).then(({\n        paymentMethod\n      }) => {\n        console.log('Received Stripe PaymentMethod:', paymentMethod);\n      }); // You can also use confirmCardPayment with the PaymentIntents API automatic confirmation flow.\n      // See our confirmCardPayment documentation for more:\n      // https://stripe.com/docs/stripe-js/reference#stripe-confirm-card-payment\n\n      this.props.stripe.confirmCardPayment('{PAYMENT_INTENT_CLIENT_SECRET}', {\n        payment_method: {\n          card: cardElement\n        }\n      }); // You can also use confirmCardSetup with the SetupIntents API.\n      // See our confirmCardSetup documentation for more:\n      // https://stripe.com/docs/stripe-js/reference#stripe-confirm-card-setup\n\n      this.props.stripe.confirmCardSetup('{PAYMENT_INTENT_CLIENT_SECRET}', {\n        payment_method: {\n          card: cardElement\n        }\n      }); // You can also use createToken to create tokens.\n      // See our tokens documentation for more:\n      // https://stripe.com/docs/stripe-js/reference#stripe-create-token\n      // With createToken, you will not need to pass in the reference to\n      // the Element. It will be inferred automatically.\n\n      this.props.stripe.createToken({\n        type: 'card',\n        name: 'Jenny Rosen'\n      }); // token type can optionally be inferred if there is only one Element\n      // with which to create tokens\n      // this.props.stripe.createToken({name: 'Jenny Rosen'});\n      // You can also use createSource to create Sources.\n      // See our Sources documentation for more:\n      // https://stripe.com/docs/stripe-js/reference#stripe-create-source\n      // With createSource, you will not need to pass in the reference to\n      // the Element. It will be inferred automatically.\n\n      this.props.stripe.createSource({\n        type: 'card',\n        owner: {\n          name: 'Jenny Rosen'\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(CardSection, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Confirm order\"));\n  }\n\n}\n\nexport default CheckoutForm;","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/components/shop/components/checkout/components/payment/components/CheckoutForm.js"],"names":["React","injectStripe","CardSection","CheckoutForm","Component","handleSubmit","ev","preventDefault","cardElement","props","elements","getElement","stripe","createPaymentMethod","type","card","billing_details","name","then","paymentMethod","console","log","confirmCardPayment","payment_method","confirmCardSetup","createToken","createSource","owner","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,uBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SACzCC,YADyC,GACzBC,EAAD,IAAQ;AACrB;AACAA,MAAAA,EAAE,CAACC,cAAH,GAFqB,CAIrB;AACA;AACA;AACA;AACA;;AACA,YAAMC,WAAW,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,UAApB,CAA+B,MAA/B,CAApB,CATqB,CAWrB;AACA;AACA;;AACA,WAAKF,KAAL,CAAWG,MAAX,CACGC,mBADH,CACuB;AACnBC,QAAAA,IAAI,EAAE,MADa;AAEnBC,QAAAA,IAAI,EAAEP,WAFa;AAGnBQ,QAAAA,eAAe,EAAE;AAACC,UAAAA,IAAI,EAAE;AAAP;AAHE,OADvB,EAMGC,IANH,CAMQ,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAqB;AACzBC,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CF,aAA9C;AACD,OARH,EAdqB,CAwBrB;AACA;AACA;;AACA,WAAKV,KAAL,CAAWG,MAAX,CAAkBU,kBAAlB,CAAqC,gCAArC,EAAuE;AACrEC,QAAAA,cAAc,EAAE;AACdR,UAAAA,IAAI,EAAEP;AADQ;AADqD,OAAvE,EA3BqB,CAiCrB;AACA;AACA;;AACA,WAAKC,KAAL,CAAWG,MAAX,CAAkBY,gBAAlB,CAAmC,gCAAnC,EAAqE;AACnED,QAAAA,cAAc,EAAE;AACdR,UAAAA,IAAI,EAAEP;AADQ;AADmD,OAArE,EApCqB,CA0CrB;AACA;AACA;AACA;AACA;;AACA,WAAKC,KAAL,CAAWG,MAAX,CAAkBa,WAAlB,CAA8B;AAACX,QAAAA,IAAI,EAAE,MAAP;AAAeG,QAAAA,IAAI,EAAE;AAArB,OAA9B,EA/CqB,CAgDrB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA,WAAKR,KAAL,CAAWG,MAAX,CAAkBc,YAAlB,CAA+B;AAC7BZ,QAAAA,IAAI,EAAE,MADuB;AAE7Ba,QAAAA,KAAK,EAAE;AACLV,UAAAA,IAAI,EAAE;AADD;AAFsB,OAA/B;AAMD,KAhEwC;AAAA;;AAkEzCW,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKvB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CADF;AAMD;;AAzEwC;;AA6E3C,eAAeF,YAAf","sourcesContent":["import React from 'react';\r\nimport {injectStripe} from 'react-stripe-elements';\r\nimport CardSection from './CardSection';\r\n\r\nclass CheckoutForm extends React.Component {\r\n  handleSubmit = (ev) => {\r\n    // We don't want to let default form submission happen here, which would refresh the page.\r\n    ev.preventDefault();\r\n\r\n    // Use Elements to get a reference to the Card Element mounted somewhere\r\n    // in your <Elements> tree. Elements will know how to find your Card Element\r\n    // because only one is allowed.\r\n    // See our getElement documentation for more:\r\n    // https://stripe.com/docs/stripe-js/reference#elements-get-element\r\n    const cardElement = this.props.elements.getElement('card');\r\n\r\n    // From here we can call createPaymentMethod to create a PaymentMethod\r\n    // See our createPaymentMethod documentation for more:\r\n    // https://stripe.com/docs/stripe-js/reference#stripe-create-payment-method\r\n    this.props.stripe\r\n      .createPaymentMethod({\r\n        type: 'card',\r\n        card: cardElement,\r\n        billing_details: {name: 'Jenny Rosen'},\r\n      })\r\n      .then(({paymentMethod}) => {\r\n        console.log('Received Stripe PaymentMethod:', paymentMethod);\r\n      });\r\n\r\n    // You can also use confirmCardPayment with the PaymentIntents API automatic confirmation flow.\r\n    // See our confirmCardPayment documentation for more:\r\n    // https://stripe.com/docs/stripe-js/reference#stripe-confirm-card-payment\r\n    this.props.stripe.confirmCardPayment('{PAYMENT_INTENT_CLIENT_SECRET}', {\r\n      payment_method: {\r\n        card: cardElement,\r\n      },\r\n    });\r\n\r\n    // You can also use confirmCardSetup with the SetupIntents API.\r\n    // See our confirmCardSetup documentation for more:\r\n    // https://stripe.com/docs/stripe-js/reference#stripe-confirm-card-setup\r\n    this.props.stripe.confirmCardSetup('{PAYMENT_INTENT_CLIENT_SECRET}', {\r\n      payment_method: {\r\n        card: cardElement,\r\n      },\r\n    });\r\n\r\n    // You can also use createToken to create tokens.\r\n    // See our tokens documentation for more:\r\n    // https://stripe.com/docs/stripe-js/reference#stripe-create-token\r\n    // With createToken, you will not need to pass in the reference to\r\n    // the Element. It will be inferred automatically.\r\n    this.props.stripe.createToken({type: 'card', name: 'Jenny Rosen'});\r\n    // token type can optionally be inferred if there is only one Element\r\n    // with which to create tokens\r\n    // this.props.stripe.createToken({name: 'Jenny Rosen'});\r\n\r\n    // You can also use createSource to create Sources.\r\n    // See our Sources documentation for more:\r\n    // https://stripe.com/docs/stripe-js/reference#stripe-create-source\r\n    // With createSource, you will not need to pass in the reference to\r\n    // the Element. It will be inferred automatically.\r\n    this.props.stripe.createSource({\r\n      type: 'card',\r\n      owner: {\r\n        name: 'Jenny Rosen',\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <CardSection />\r\n        <button>Confirm order</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default CheckoutForm;\r\n"]},"metadata":{},"sourceType":"module"}