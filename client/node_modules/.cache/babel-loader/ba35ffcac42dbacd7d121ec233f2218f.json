{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskies\\\\beersandbrewskies\\\\src\\\\components\\\\shop\\\\components\\\\FloatCart.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CartProduct from './CartProduct';\nimport { removeProduct, changeProductQuantity } from '../../../actions';\nimport './style.scss';\n\nclass FloatCart extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOpen: false,\n      cartTotal: {\n        totalPrice: 0,\n        currencyId: 'USD',\n        currencyFormat: '$'\n      }\n    };\n\n    this.openFloatCart = () => {\n      this.setState({\n        isOpen: true\n      });\n    };\n\n    this.closeFloatCart = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n\n    this.removeCartProduct = product => {\n      const _this$props = this.props,\n            cartProducts = _this$props.cartProducts,\n            removeProduct = _this$props.removeProduct;\n      const index = cartProducts.findIndex(p => p.id === product.id);\n      cartProducts.splice(index, 1);\n      removeProduct(cartProducts);\n    };\n\n    this.changeProductQuantity = changedProduct => {\n      const _this$props2 = this.props,\n            cartProducts = _this$props2.cartProducts,\n            changeProductQuantity = _this$props2.changeProductQuantity;\n      const product = cartProducts.find(p => p.id === changedProduct.id);\n      product.quantity = changedProduct.quantity;\n\n      if (product.quantity <= 0) {\n        this.removeCartProduct(product);\n      } else {\n        changeProductQuantity(product);\n      }\n    };\n  }\n\n  componentDidMount() {\n    const cartProducts = this.props.cartProducts;\n    const total = 0;\n    cartProducts.forEach((item, i) => {\n      var totalItemPrice = 0;\n\n      if (item.quantity <= 0) {\n        totalItemPrice = item.price;\n      } else {\n        totalItemPrice = item.price * item.quantity;\n      }\n\n      total += totalItemPrice;\n    });\n    console.log(total); // this.setState({\n    //   cartTotal: {\n    //     totalPrice:\n    //   }\n    // })\n  }\n\n  render() {\n    const cartProducts = this.props.cartProducts;\n    const products = cartProducts.map(p => {\n      return React.createElement(CartProduct, {\n        product: p,\n        removeProduct: this.removeCartProduct,\n        changeProductQuantity: this.changeProductQuantity,\n        key: p.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      });\n    });\n    let classes = ['float-cart'];\n\n    if (!!this.state.isOpen) {\n      classes.push('float-cart--open');\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.isOpen && React.createElement(\"div\", {\n      onClick: () => this.closeFloatCart(),\n      className: \"float-cart__close-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"X\"), !this.state.isOpen && React.createElement(\"span\", {\n      onClick: () => this.openFloatCart(),\n      className: \"bag bag--float-cart-closed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag__quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"float-cart__content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-cart__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag__quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"float-cart__shelf-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, products, !products.length && React.createElement(\"p\", {\n      className: \"shelf-empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Add some products in the cart \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), \":)\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  cartProducts: state.cart.products\n});\n\nexport default connect(mapStateToProps, {\n  removeProduct,\n  changeProductQuantity\n})(FloatCart);","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/components/shop/components/FloatCart.js"],"names":["React","connect","CartProduct","removeProduct","changeProductQuantity","FloatCart","Component","state","isOpen","cartTotal","totalPrice","currencyId","currencyFormat","openFloatCart","setState","closeFloatCart","removeCartProduct","product","props","cartProducts","index","findIndex","p","id","splice","changedProduct","find","quantity","componentDidMount","total","forEach","item","i","totalItemPrice","price","console","log","render","products","map","classes","push","join","length","mapStateToProps","cart"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CartProduct from './CartProduct';\r\nimport { removeProduct, changeProductQuantity } from '../../../actions';\r\n\r\nimport './style.scss';\r\n\r\nclass FloatCart extends React.Component {\r\n  state = {\r\n    isOpen: false,\r\n    cartTotal: {\r\n      totalPrice: 0,\r\n      currencyId: 'USD',\r\n      currencyFormat: '$'\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    const { cartProducts } = this.props;\r\n    const total = 0;\r\n    cartProducts.forEach((item, i) => {\r\n      var totalItemPrice = 0;\r\n      if(item.quantity <= 0){\r\n          totalItemPrice = item.price;\r\n      }else{\r\n        totalItemPrice = (item.price * item.quantity);\r\n      }\r\n      total += totalItemPrice;\r\n    });\r\n\r\n    console.log(total);\r\n\r\n    // this.setState({\r\n    //   cartTotal: {\r\n    //     totalPrice:\r\n    //   }\r\n    // })\r\n  }\r\n\r\n  openFloatCart = () => {\r\n    this.setState({ isOpen: true });\r\n  };\r\n\r\n  closeFloatCart = () => {\r\n    this.setState({ isOpen: false });\r\n  };\r\n\r\n  removeCartProduct = product => {\r\n    const { cartProducts, removeProduct } = this.props;\r\n\r\n    const index = cartProducts.findIndex(p => p.id === product.id);\r\n      cartProducts.splice(index, 1);\r\n      removeProduct(cartProducts);\r\n  };\r\n\r\n  changeProductQuantity = changedProduct => {\r\n    const { cartProducts, changeProductQuantity } = this.props;\r\n\r\n    const product = cartProducts.find(p => p.id === changedProduct.id);\r\n      product.quantity = changedProduct.quantity;\r\n      if(product.quantity <= 0){\r\n        this.removeCartProduct(product);\r\n      }else{\r\n        changeProductQuantity(product);\r\n      }\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { cartProducts } = this.props;\r\n\r\n    const products = cartProducts.map(p => {\r\n      return (\r\n        <CartProduct product={p}\r\n          removeProduct={this.removeCartProduct}\r\n          changeProductQuantity={this.changeProductQuantity}\r\n          key={p.id} />\r\n      );\r\n    });\r\n\r\n    let classes = ['float-cart'];\r\n\r\n    if (!!this.state.isOpen) {\r\n      classes.push('float-cart--open');\r\n    }\r\n\r\n    return (\r\n      <div className={classes.join(' ')}>\r\n        {/* If cart open, show close (x) button */}\r\n        {this.state.isOpen && (\r\n          <div\r\n            onClick={() => this.closeFloatCart()}\r\n            className=\"float-cart__close-btn\"\r\n          >\r\n            X\r\n          </div>\r\n        )}\r\n\r\n        {/* If cart is closed, show bag with quantity of product and open cart action */}\r\n        {!this.state.isOpen && (\r\n          <span\r\n            onClick={() => this.openFloatCart()}\r\n            className=\"bag bag--float-cart-closed\"\r\n          >\r\n            <span className=\"bag__quantity\"></span>\r\n          </span>\r\n        )}\r\n\r\n        <div className=\"float-cart__content\">\r\n          <div className=\"float-cart__header\">\r\n            <span className=\"bag\">\r\n              <span className=\"bag__quantity\"></span>\r\n            </span>\r\n            <span className=\"header-title\"></span>\r\n          </div>\r\n\r\n          <div className=\"float-cart__shelf-container\">\r\n            {products}\r\n            {!products.length && (\r\n              <p className=\"shelf-empty\">\r\n                Add some products in the cart <br />\r\n                :)\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  cartProducts: state.cart.products\r\n});\r\n\r\nexport default connect(mapStateToProps,{removeProduct, changeProductQuantity})(FloatCart);\r\n"]},"metadata":{},"sourceType":"module"}