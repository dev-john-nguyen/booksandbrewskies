{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskies\\\\beersandbrewskies\\\\src\\\\components\\\\shop\\\\components\\\\checkout\\\\index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport CartProduct from '../floatcart/components/CartProduct';\n\nclass Checkout extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.updateCart = () => {\n      const cartProductsLs = JSON.parse(localStorage.getItem('cartProducts'));\n      const cartTotalLs = JSON.parse(localStorage.getItem('cartTotal'));\n      const _this$props = this.props,\n            cartProducts = _this$props.cartProducts,\n            cartTotal = _this$props.cartTotal;\n\n      if (cartProductsLs && cartTotalLs) {\n        if (cartProductsLs.length > 0) {\n          Object.assign(cartProducts, cartProductsLs);\n          Object.assign(cartTotal, cartTotalLs);\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.updateCart();\n  }\n\n  render() {\n    const cartProducts = this.props.cartProducts;\n    const products = cartProducts.map(p => {\n      return React.createElement(CartProduct, {\n        product: p,\n        removeProduct: removeProduct,\n        changeProductQuantity: changeProductQuantity,\n        key: p.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      });\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.props.cartProducts);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cartProducts: state.cart.products,\n    cartTotal: state.total.data\n  };\n};\n\nexport default connect(mapStateToProps, {})(Checkout);","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/components/shop/components/checkout/index.js"],"names":["React","PropTypes","connect","CartProduct","Checkout","Component","updateCart","cartProductsLs","JSON","parse","localStorage","getItem","cartTotalLs","props","cartProducts","cartTotal","length","Object","assign","componentDidMount","render","products","map","p","removeProduct","changeProductQuantity","id","mapStateToProps","state","cart","total","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAKrCC,UALqC,GAKxB,MAAM;AACjB,YAAMC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAAvB;AACA,YAAMC,WAAW,GAAGJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApB;AAFiB,0BAGmB,KAAKE,KAHxB;AAAA,YAGTC,YAHS,eAGTA,YAHS;AAAA,YAGKC,SAHL,eAGKA,SAHL;;AAIf,UAAGR,cAAc,IAAIK,WAArB,EAAiC;AAC/B,YAAGL,cAAc,CAACS,MAAf,GAAwB,CAA3B,EAA6B;AAC3BC,UAAAA,MAAM,CAACC,MAAP,CAAcJ,YAAd,EAA4BP,cAA5B;AACAU,UAAAA,MAAM,CAACC,MAAP,CAAcH,SAAd,EAAyBH,WAAzB;AACD;AACF;AACF,KAfkC;AAAA;;AACrCO,EAAAA,iBAAiB,GAAG;AAClB,SAAKb,UAAL;AACD;;AAcCc,EAAAA,MAAM,GAAE;AAAA,UACEN,YADF,GACmB,KAAKD,KADxB,CACEC,YADF;AAGN,UAAMO,QAAQ,GAAGP,YAAY,CAACQ,GAAb,CAAiBC,CAAC,IAAI;AACrC,aACE,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAEA,CAAtB;AAAyB,QAAA,aAAa,EAAEC,aAAxC;AAAuD,QAAA,qBAAqB,EAAEC,qBAA9E;AAAqG,QAAA,GAAG,EAAEF,CAAC,CAACG,EAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KAJgB,CAAjB;AAOA,WACA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKb,KAAL,CAAWC,YADd,CADA;AAKH;;AAhCoC;;AAmCvC,MAAMa,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACPd,IAAAA,YAAY,EAAEc,KAAK,CAACC,IAAN,CAAWR,QADlB;AAEPN,IAAAA,SAAS,EAAEa,KAAK,CAACE,KAAN,CAAYC;AAFhB,GAAP;AAID,CALD;;AAOA,eAAe7B,OAAO,CAACyB,eAAD,EAAiB,EAAjB,CAAP,CAA4BvB,QAA5B,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport CartProduct from '../floatcart/components/CartProduct';\r\n\r\nclass Checkout extends React.Component {\r\n  componentDidMount() {\r\n    this.updateCart();\r\n  }\r\n\r\n  updateCart = () => {\r\n    const cartProductsLs = JSON.parse(localStorage.getItem('cartProducts'));\r\n    const cartTotalLs = JSON.parse(localStorage.getItem('cartTotal'));\r\n    const { cartProducts, cartTotal } = this.props;\r\n      if(cartProductsLs && cartTotalLs){\r\n        if(cartProductsLs.length > 0){\r\n          Object.assign(cartProducts, cartProductsLs);\r\n          Object.assign(cartTotal, cartTotalLs);\r\n        }\r\n      }\r\n    }\r\n\r\n    render(){\r\n      const { cartProducts } = this.props;\r\n\r\n      const products = cartProducts.map(p => {\r\n        return (\r\n          <CartProduct product={p} removeProduct={removeProduct} changeProductQuantity={changeProductQuantity} key={p.id} />\r\n        );\r\n      });\r\n\r\n\r\n      return (\r\n      <React.Fragment>\r\n        {this.props.cartProducts}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  cartProducts: state.cart.products,\r\n  cartTotal: state.total.data\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{})(Checkout);\r\n"]},"metadata":{},"sourceType":"module"}