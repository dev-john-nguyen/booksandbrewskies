{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskies\\\\beersandbrewskies\\\\src\\\\components\\\\shop\\\\Shelf\\\\index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchProducts } from '../../services/shelf/actions';\nimport Spinner from '../Spinner';\nimport ShelfHeader from './ShelfHeader';\nimport ProductList from './ProductList';\nimport './style.scss';\n\nclass Shelf extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: false\n    };\n\n    this.handleFetchProducts = (filters = this.props.filters, sort = this.props.sort) => {\n      this.setState({\n        isLoading: true\n      });\n      this.props.fetchProducts(filters, sort, () => {\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchProducts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const nextFilters = nextProps.filters,\n          nextSort = nextProps.sort;\n    const filters = this.props.filters;\n\n    if (nextFilters.length !== filters.length) {\n      this.handleFetchProducts(nextFilters, undefined);\n    }\n\n    if (nextSort !== this.props.sort) {\n      this.handleFetchProducts(undefined, nextSort);\n    }\n  }\n\n  render() {\n    const products = this.props.products;\n    const isLoading = this.state.isLoading;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, isLoading && React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"shelf-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(ShelfHeader, {\n      productsLength: products.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(ProductList, {\n      products: products,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })));\n  }\n\n}\n\nShelf.propTypes = {\n  fetchProducts: PropTypes.func.isRequired,\n  products: PropTypes.array.isRequired,\n  filters: PropTypes.array,\n  sort: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n  products: state.shelf.products,\n  filters: state.filters.items,\n  sort: state.sort.type\n});\n\nexport default connect(mapStateToProps, {\n  fetchProducts\n})(Shelf);","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/components/shop/Shelf/index.js"],"names":["React","Component","PropTypes","connect","fetchProducts","Spinner","ShelfHeader","ProductList","Shelf","state","isLoading","handleFetchProducts","filters","props","sort","setState","componentDidMount","componentWillReceiveProps","nextProps","nextFilters","nextSort","length","undefined","render","products","propTypes","func","isRequired","array","string","mapStateToProps","shelf","items","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { fetchProducts } from '../../services/shelf/actions';\n\nimport Spinner from '../Spinner';\nimport ShelfHeader from './ShelfHeader';\nimport ProductList from './ProductList';\n\nimport './style.scss';\n\nclass Shelf extends Component {\n  static propTypes = {\n    fetchProducts: PropTypes.func.isRequired,\n    products: PropTypes.array.isRequired,\n    filters: PropTypes.array,\n    sort: PropTypes.string\n  };\n\n  state = {\n    isLoading: false\n  };\n\n  componentDidMount() {\n    this.handleFetchProducts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { filters: nextFilters, sort: nextSort } = nextProps;\n    const { filters } = this.props;\n    if (nextFilters.length !== filters.length) {\n      this.handleFetchProducts(nextFilters, undefined);\n    }\n\n    if (nextSort !== this.props.sort) {\n      this.handleFetchProducts(undefined, nextSort);\n    }\n  }\n\n  handleFetchProducts = (\n    filters = this.props.filters,\n    sort = this.props.sort\n  ) => {\n    this.setState({ isLoading: true });\n    this.props.fetchProducts(filters, sort, () => {\n      this.setState({ isLoading: false });\n    });\n  };\n\n  render() {\n    const { products } = this.props;\n    const { isLoading } = this.state;\n\n    return (\n      <React.Fragment>\n        {isLoading && <Spinner />}\n        <div className=\"shelf-container\">\n          <ShelfHeader productsLength={products.length} />\n          <ProductList products={products} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  products: state.shelf.products,\n  filters: state.filters.items,\n  sort: state.sort.type\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchProducts }\n)(Shelf);\n"]},"metadata":{},"sourceType":"module"}