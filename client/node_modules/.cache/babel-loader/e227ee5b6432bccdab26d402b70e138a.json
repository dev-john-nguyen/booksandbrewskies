{"ast":null,"code":"import jsonApi from '../../apis/api';\nimport { FETCH_PRODUCTS } from './actionTypes';\nconst compare = {\n  lowestprice: (a, b) => {\n    if (a.price < b.price) return -1;\n    if (a.price > b.price) return 1;\n    return 0;\n  },\n  highestprice: (a, b) => {\n    if (a.price > b.price) return -1;\n    if (a.price < b.price) return 1;\n    return 0;\n  }\n};\nexport const fetchProducts = (filters, sortBy, callback) => async dispatch => {\n  const response = await jsonApi.get('/products');\n  console.log(response); // if(response.error){\n  //   return console.log(\"could not fetch\");\n  // }else{\n  //   let products = response.data;\n  //\n  //     if (!!filters && filters.length > 0) {\n  //       products = products.filter(p =>\n  //         filters.find(f => p.availableSizes.find(size => size === f))\n  //       );\n  //     }\n  //\n  //     if (!!sortBy) {\n  //       products = products.sort(compare[sortBy]);\n  //     }\n  //\n  //     if (!!callback) {\n  //       callback();\n  //     }\n  //\n  //   dispatch({ type: FETCH_PRODUCTS, payload: products });\n  // }\n}; // export const fetchProducts = (filters, sortBy, callback) => dispatch => {\n//   return axios\n//     .get(productsAPI)\n//     .then(res => {\n//       let { products } = res.data;\n//\n//       if (!!filters && filters.length > 0) {\n//         products = products.filter(p =>\n//           filters.find(f => p.availableSizes.find(size => size === f))\n//         );\n//       }\n//\n//       if (!!sortBy) {\n//         products = products.sort(compare[sortBy]);\n//       }\n//\n//       if (!!callback) {\n//         callback();\n//       }\n//\n//       return dispatch({\n//         type: FETCH_PRODUCTS,\n//         payload: products\n//       });\n//     })\n//     .catch(err => {\n//       console.log('Could not fetch products. Try again later.');\n//     });\n// };","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/services/shelf/actions.js"],"names":["jsonApi","FETCH_PRODUCTS","compare","lowestprice","a","b","price","highestprice","fetchProducts","filters","sortBy","callback","dispatch","response","get","console","log"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AAEA,SAASC,cAAT,QAA+B,eAA/B;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,WAAW,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrB,QAAID,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EAAuB,OAAO,CAAC,CAAR;AACvB,QAAIF,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EAAuB,OAAO,CAAP;AACvB,WAAO,CAAP;AACD,GALa;AAMdC,EAAAA,YAAY,EAAE,CAACH,CAAD,EAAIC,CAAJ,KAAU;AACtB,QAAID,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EAAuB,OAAO,CAAC,CAAR;AACvB,QAAIF,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EAAuB,OAAO,CAAP;AACvB,WAAO,CAAP;AACD;AAVa,CAAhB;AAaA,OAAO,MAAME,aAAa,GAAG,CAACC,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,KAA+B,MAAMC,QAAN,IAAkB;AAC5E,QAAMC,QAAQ,GAAG,MAAMb,OAAO,CAACc,GAAR,CAAY,WAAZ,CAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAH4E,CAK5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CA1BM,C,CA4BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import jsonApi from '../../apis/api';\r\n\r\nimport { FETCH_PRODUCTS } from './actionTypes';\r\n\r\nconst compare = {\r\n  lowestprice: (a, b) => {\r\n    if (a.price < b.price) return -1;\r\n    if (a.price > b.price) return 1;\r\n    return 0;\r\n  },\r\n  highestprice: (a, b) => {\r\n    if (a.price > b.price) return -1;\r\n    if (a.price < b.price) return 1;\r\n    return 0;\r\n  }\r\n};\r\n\r\nexport const fetchProducts = (filters, sortBy, callback) => async dispatch => {\r\n  const response = await jsonApi.get('/products');\r\n\r\n  console.log(response);\r\n\r\n  // if(response.error){\r\n  //   return console.log(\"could not fetch\");\r\n  // }else{\r\n  //   let products = response.data;\r\n  //\r\n  //     if (!!filters && filters.length > 0) {\r\n  //       products = products.filter(p =>\r\n  //         filters.find(f => p.availableSizes.find(size => size === f))\r\n  //       );\r\n  //     }\r\n  //\r\n  //     if (!!sortBy) {\r\n  //       products = products.sort(compare[sortBy]);\r\n  //     }\r\n  //\r\n  //     if (!!callback) {\r\n  //       callback();\r\n  //     }\r\n  //\r\n  //   dispatch({ type: FETCH_PRODUCTS, payload: products });\r\n  // }\r\n}\r\n\r\n// export const fetchProducts = (filters, sortBy, callback) => dispatch => {\r\n//   return axios\r\n//     .get(productsAPI)\r\n//     .then(res => {\r\n//       let { products } = res.data;\r\n//\r\n//       if (!!filters && filters.length > 0) {\r\n//         products = products.filter(p =>\r\n//           filters.find(f => p.availableSizes.find(size => size === f))\r\n//         );\r\n//       }\r\n//\r\n//       if (!!sortBy) {\r\n//         products = products.sort(compare[sortBy]);\r\n//       }\r\n//\r\n//       if (!!callback) {\r\n//         callback();\r\n//       }\r\n//\r\n//       return dispatch({\r\n//         type: FETCH_PRODUCTS,\r\n//         payload: products\r\n//       });\r\n//     })\r\n//     .catch(err => {\r\n//       console.log('Could not fetch products. Try again later.');\r\n//     });\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}