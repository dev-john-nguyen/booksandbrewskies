{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskies\\\\beersandbrewskies\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { LOAD_CART, ADD_PRODUCT, REMOVE_PRODUCT, CHANGE_PRODUCT_QUANTITY } from '../actions/actionTypes';\nconst initialState = {\n  products: [],\n  productToAdd: []\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_CART:\n      return _objectSpread({}, state, {\n        products: action.payload\n      });\n\n    case ADD_PRODUCT:\n      console.log(state);\n    // var duplicate = false;\n    // state.forEach((item, i) => {\n    //   if(item.id === action.payload.id){\n    //     duplicate = true;\n    //   };\n    // });\n    //\n    // if(duplicate){\n    //\n    // }else{\n    //   return {\n    //     ...state,\n    //     // productToAdd: Object.assign({}, action.payload)\n    //     products: [...state.products, action.payload]\n    //   };\n    // }\n\n    case REMOVE_PRODUCT:\n      return _objectSpread({}, state, {\n        productToRemove: Object.assign({}, action.payload)\n      });\n\n    case CHANGE_PRODUCT_QUANTITY:\n      return _objectSpread({}, state, {\n        productToChange: Object.assign({}, action.payload)\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/reducers/cartReducer.js"],"names":["LOAD_CART","ADD_PRODUCT","REMOVE_PRODUCT","CHANGE_PRODUCT_QUANTITY","initialState","products","productToAdd","state","action","type","payload","console","log","productToRemove","Object","assign","productToChange"],"mappings":";AAAA,SAASA,SAAT,EACEC,WADF,EAEEC,cAFF,EAGEC,uBAHF,QAIO,wBAJP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,YAAY,EAAE;AAFK,CAArB;AAKA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,SAAL;AACE,+BACKO,KADL;AAEEF,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AAFnB;;AAIF,SAAKT,WAAL;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACF,SAAKL,cAAL;AACE,+BACKK,KADL;AAEEM,QAAAA,eAAe,EAAEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,MAAM,CAACE,OAAzB;AAFnB;;AAIF,SAAKP,uBAAL;AACE,+BACKI,KADL;AAEES,QAAAA,eAAe,EAAEF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,MAAM,CAACE,OAAzB;AAFnB;;AAIF;AACE,aAAOH,KAAP;AAnCJ;AAqCD,CAtCD","sourcesContent":["import { LOAD_CART,\r\n  ADD_PRODUCT,\r\n  REMOVE_PRODUCT,\r\n  CHANGE_PRODUCT_QUANTITY\r\n} from '../actions/actionTypes';\r\n\r\n\r\nconst initialState = {\r\n  products: [],\r\n  productToAdd: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOAD_CART:\r\n      return {\r\n        ...state,\r\n        products: action.payload\r\n      };\r\n    case ADD_PRODUCT:\r\n    console.log(state);\r\n      // var duplicate = false;\r\n      // state.forEach((item, i) => {\r\n      //   if(item.id === action.payload.id){\r\n      //     duplicate = true;\r\n      //   };\r\n      // });\r\n      //\r\n      // if(duplicate){\r\n      //\r\n      // }else{\r\n      //   return {\r\n      //     ...state,\r\n      //     // productToAdd: Object.assign({}, action.payload)\r\n      //     products: [...state.products, action.payload]\r\n      //   };\r\n      // }\r\n    case REMOVE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        productToRemove: Object.assign({}, action.payload)\r\n      };\r\n    case CHANGE_PRODUCT_QUANTITY:\r\n      return {\r\n        ...state,\r\n        productToChange: Object.assign({}, action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}