{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskies\\\\beersandbrewskies\\\\src\\\\components\\\\shop\\\\components\\\\FloatCart.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CartProduct from './CartProduct';\nimport { removeProduct, changeProductQuantity } from '../../../actions';\nimport './style.scss';\n\nclass FloatCart extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOpen: false,\n      cartTotal: {\n        totalPrice: 0,\n        currencyId: 'USD',\n        currencyFormat: '$'\n      }\n    };\n\n    this.formatPrice = (x, currency) => {\n      switch (currency) {\n        case 'BRL':\n          return x.toFixed(2).replace('.', ',');\n\n        default:\n          return x.toFixed(2);\n      }\n    };\n\n    this.openFloatCart = () => {\n      this.setState({\n        isOpen: true\n      });\n    };\n\n    this.closeFloatCart = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n\n    this.removeCartProduct = product => {\n      const _this$props = this.props,\n            cartProducts = _this$props.cartProducts,\n            removeProduct = _this$props.removeProduct;\n      const index = cartProducts.findIndex(p => p.id === product.id);\n      cartProducts.splice(index, 1);\n      removeProduct(cartProducts);\n    };\n\n    this.changeProductQuantity = changedProduct => {\n      const _this$props2 = this.props,\n            cartProducts = _this$props2.cartProducts,\n            changeProductQuantity = _this$props2.changeProductQuantity;\n      const product = cartProducts.find(p => p.id === changedProduct.id);\n      product.quantity = changedProduct.quantity;\n\n      if (product.quantity <= 0) {\n        this.removeCartProduct(product);\n      } else {\n        changeProductQuantity(product);\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.cartTotal === prevState.cartTotal) {\n      const cartProducts = this.props.cartProducts;\n      var total = 0;\n      cartProducts.forEach((item, i) => {\n        var totalItemPrice = 0;\n\n        if (item.quantity <= 0) {\n          totalItemPrice = item.price;\n        } else {\n          totalItemPrice = item.price * item.quantity;\n        }\n\n        total += totalItemPrice;\n      });\n      this.setState({\n        cartTotal: {\n          totalPrice: total,\n          currencyId: 'USD',\n          currencyFormat: '$'\n        }\n      });\n    }\n\n    console.log(this.state.cartTotal);\n  }\n\n  render() {\n    const cartProducts = this.props.cartProducts;\n    const cartTotal = this.state.cartTotal;\n    const products = cartProducts.map(p => {\n      return React.createElement(CartProduct, {\n        product: p,\n        removeProduct: this.removeCartProduct,\n        changeProductQuantity: this.changeProductQuantity,\n        key: p.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      });\n    });\n    let classes = ['float-cart'];\n\n    if (!!this.state.isOpen) {\n      classes.push('float-cart--open');\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.isOpen && React.createElement(\"div\", {\n      onClick: () => this.closeFloatCart(),\n      className: \"float-cart__close-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"X\"), !this.state.isOpen && React.createElement(\"span\", {\n      onClick: () => this.openFloatCart(),\n      className: \"bag bag--float-cart-closed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag__quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"float-cart__content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-cart__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bag__quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"float-cart__shelf-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, products, !products.length && React.createElement(\"p\", {\n      className: \"shelf-empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Add some products in the cart \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), \":)\")), React.createElement(\"div\", {\n      className: \"float-cart__footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sub\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"SUBTOTAL\"), React.createElement(\"div\", {\n      className: \"sub-price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"sub-price__val\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, `${cartTotal.currencyFormat} ${this.formatPrice(cartTotal.totalPrice, cartTotal.currencyId)}`)), React.createElement(\"div\", {\n      onClick: () => this.proceedToCheckout(),\n      className: \"buy-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Checkout\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  cartProducts: state.cart.products\n});\n\nexport default connect(mapStateToProps, {\n  removeProduct,\n  changeProductQuantity\n})(FloatCart);","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/components/shop/components/FloatCart.js"],"names":["React","connect","CartProduct","removeProduct","changeProductQuantity","FloatCart","Component","state","isOpen","cartTotal","totalPrice","currencyId","currencyFormat","formatPrice","x","currency","toFixed","replace","openFloatCart","setState","closeFloatCart","removeCartProduct","product","props","cartProducts","index","findIndex","p","id","splice","changedProduct","find","quantity","componentDidUpdate","prevProps","prevState","total","forEach","item","i","totalItemPrice","price","console","log","render","products","map","classes","push","join","length","proceedToCheckout","mapStateToProps","cart"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CartProduct from './CartProduct';\r\nimport { removeProduct, changeProductQuantity } from '../../../actions';\r\n\r\nimport './style.scss';\r\n\r\nclass FloatCart extends React.Component {\r\n  state = {\r\n    isOpen: false,\r\n    cartTotal: {\r\n      totalPrice: 0,\r\n      currencyId: 'USD',\r\n      currencyFormat: '$'\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    if(this.state.cartTotal === prevState.cartTotal){\r\n      const { cartProducts } = this.props;\r\n      var total = 0;\r\n      cartProducts.forEach((item, i) => {\r\n        var totalItemPrice = 0;\r\n        if(item.quantity <= 0){\r\n            totalItemPrice = item.price;\r\n        }else{\r\n          totalItemPrice = (item.price * item.quantity);\r\n        }\r\n        total += totalItemPrice;\r\n      });\r\n\r\n      this.setState({\r\n        cartTotal: {\r\n          totalPrice: total,\r\n          currencyId: 'USD',\r\n          currencyFormat: '$'\r\n        }\r\n      })\r\n    }\r\n\r\n    console.log(this.state.cartTotal);\r\n  }\r\n\r\n  formatPrice = (x, currency) => {\r\n    switch (currency) {\r\n      case 'BRL':\r\n        return x.toFixed(2).replace('.', ',');\r\n      default:\r\n        return x.toFixed(2);\r\n    }\r\n  };\r\n\r\n  openFloatCart = () => {\r\n    this.setState({ isOpen: true });\r\n  };\r\n\r\n  closeFloatCart = () => {\r\n    this.setState({ isOpen: false });\r\n  };\r\n\r\n  removeCartProduct = product => {\r\n    const { cartProducts, removeProduct } = this.props;\r\n\r\n    const index = cartProducts.findIndex(p => p.id === product.id);\r\n      cartProducts.splice(index, 1);\r\n      removeProduct(cartProducts);\r\n  };\r\n\r\n  changeProductQuantity = changedProduct => {\r\n    const { cartProducts, changeProductQuantity } = this.props;\r\n\r\n    const product = cartProducts.find(p => p.id === changedProduct.id);\r\n      product.quantity = changedProduct.quantity;\r\n      if(product.quantity <= 0){\r\n        this.removeCartProduct(product);\r\n      }else{\r\n        changeProductQuantity(product);\r\n      }\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { cartProducts } = this.props;\r\n    const { cartTotal } = this.state;\r\n\r\n    const products = cartProducts.map(p => {\r\n      return (\r\n        <CartProduct product={p}\r\n          removeProduct={this.removeCartProduct}\r\n          changeProductQuantity={this.changeProductQuantity}\r\n          key={p.id} />\r\n      );\r\n    });\r\n\r\n    let classes = ['float-cart'];\r\n\r\n    if (!!this.state.isOpen) {\r\n      classes.push('float-cart--open');\r\n    }\r\n\r\n    return (\r\n      <div className={classes.join(' ')}>\r\n        {/* If cart open, show close (x) button */}\r\n        {this.state.isOpen && (\r\n          <div\r\n            onClick={() => this.closeFloatCart()}\r\n            className=\"float-cart__close-btn\"\r\n          >\r\n            X\r\n          </div>\r\n        )}\r\n\r\n        {/* If cart is closed, show bag with quantity of product and open cart action */}\r\n        {!this.state.isOpen && (\r\n          <span\r\n            onClick={() => this.openFloatCart()}\r\n            className=\"bag bag--float-cart-closed\"\r\n          >\r\n            <span className=\"bag__quantity\"></span>\r\n          </span>\r\n        )}\r\n\r\n        <div className=\"float-cart__content\">\r\n          <div className=\"float-cart__header\">\r\n            <span className=\"bag\">\r\n              <span className=\"bag__quantity\"></span>\r\n            </span>\r\n            <span className=\"header-title\"></span>\r\n          </div>\r\n\r\n          <div className=\"float-cart__shelf-container\">\r\n            {products}\r\n            {!products.length && (\r\n              <p className=\"shelf-empty\">\r\n                Add some products in the cart <br />\r\n                :)\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"float-cart__footer\">\r\n            <div className=\"sub\">SUBTOTAL</div>\r\n            <div className=\"sub-price\">\r\n              <p className=\"sub-price__val\">\r\n                {`${cartTotal.currencyFormat} ${this.formatPrice(\r\n                  cartTotal.totalPrice,\r\n                  cartTotal.currencyId\r\n                )}`}\r\n              </p>\r\n            </div>\r\n            <div onClick={() => this.proceedToCheckout()} className=\"buy-btn\">\r\n              Checkout\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  cartProducts: state.cart.products\r\n});\r\n\r\nexport default connect(mapStateToProps,{removeProduct, changeProductQuantity})(FloatCart);\r\n"]},"metadata":{},"sourceType":"module"}