{"ast":null,"code":"import jsonApi from '../../apis/api';\nimport { FETCH_PRODUCTS } from './actionTypes';\nconst compare = {\n  lowestprice: (a, b) => {\n    if (a.price < b.price) return -1;\n    if (a.price > b.price) return 1;\n    return 0;\n  },\n  highestprice: (a, b) => {\n    if (a.price > b.price) return -1;\n    if (a.price < b.price) return 1;\n    return 0;\n  }\n};\nexport const fetchProducts = (filters, sortBy, callback) => async dispatch => {\n  const response = await jsonApi.get('/products');\n  response.then(res => {\n    let products = res.data.products;\n\n    if (!!filters && filters.length > 0) {\n      products = products.filter(p => filters.find(f => p.availableSizes.find(size => size === f)));\n    }\n\n    if (!!sortBy) {\n      products = products.sort(compare[sortBy]);\n    }\n\n    if (!!callback) {\n      callback();\n    }\n\n    return dispatch({\n      type: FETCH_PRODUCTS,\n      payload: products\n    });\n  });\n  response.catch(err => {\n    console.log('Could not fetch products. Try again later.');\n  }); //\n  // dispatch({ type: FETCH_PRODUCTS, payload: response.data });\n};","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/services/shelf/actions.js"],"names":["jsonApi","FETCH_PRODUCTS","compare","lowestprice","a","b","price","highestprice","fetchProducts","filters","sortBy","callback","dispatch","response","get","then","res","products","data","length","filter","p","find","f","availableSizes","size","sort","type","payload","catch","err","console","log"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AAEA,SAASC,cAAT,QAA+B,eAA/B;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,WAAW,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrB,QAAID,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EAAuB,OAAO,CAAC,CAAR;AACvB,QAAIF,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EAAuB,OAAO,CAAP;AACvB,WAAO,CAAP;AACD,GALa;AAMdC,EAAAA,YAAY,EAAE,CAACH,CAAD,EAAIC,CAAJ,KAAU;AACtB,QAAID,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EAAuB,OAAO,CAAC,CAAR;AACvB,QAAIF,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EAAuB,OAAO,CAAP;AACvB,WAAO,CAAP;AACD;AAVa,CAAhB;AAcA,OAAO,MAAME,aAAa,GAAG,CAACC,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,KAA+B,MAAMC,QAAN,IAAkB;AAC5E,QAAMC,QAAQ,GAAG,MAAMb,OAAO,CAACc,GAAR,CAAY,WAAZ,CAAvB;AAEAD,EAAAA,QAAQ,CAACE,IAAT,CAAcC,GAAG,IAAI;AAAA,QACbC,QADa,GACAD,GAAG,CAACE,IADJ,CACbD,QADa;;AAGnB,QAAI,CAAC,CAACR,OAAF,IAAaA,OAAO,CAACU,MAAR,GAAiB,CAAlC,EAAqC;AACnCF,MAAAA,QAAQ,GAAGA,QAAQ,CAACG,MAAT,CAAgBC,CAAC,IAC1BZ,OAAO,CAACa,IAAR,CAAaC,CAAC,IAAIF,CAAC,CAACG,cAAF,CAAiBF,IAAjB,CAAsBG,IAAI,IAAIA,IAAI,KAAKF,CAAvC,CAAlB,CADS,CAAX;AAGD;;AAED,QAAI,CAAC,CAACb,MAAN,EAAc;AACZO,MAAAA,QAAQ,GAAGA,QAAQ,CAACS,IAAT,CAAcxB,OAAO,CAACQ,MAAD,CAArB,CAAX;AACD;;AAED,QAAI,CAAC,CAACC,QAAN,EAAgB;AACdA,MAAAA,QAAQ;AACT;;AAED,WAAOC,QAAQ,CAAC;AACde,MAAAA,IAAI,EAAE1B,cADQ;AAEd2B,MAAAA,OAAO,EAAEX;AAFK,KAAD,CAAf;AAID,GArBD;AAsBAJ,EAAAA,QAAQ,CAACgB,KAAT,CAAeC,GAAG,IAAI;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACD,GAFD,EAzB4E,CA6B5E;AACA;AACD,CA/BM","sourcesContent":["import jsonApi from '../../apis/api';\r\n\r\nimport { FETCH_PRODUCTS } from './actionTypes';\r\n\r\nconst compare = {\r\n  lowestprice: (a, b) => {\r\n    if (a.price < b.price) return -1;\r\n    if (a.price > b.price) return 1;\r\n    return 0;\r\n  },\r\n  highestprice: (a, b) => {\r\n    if (a.price > b.price) return -1;\r\n    if (a.price < b.price) return 1;\r\n    return 0;\r\n  }\r\n};\r\n\r\n\r\nexport const fetchProducts = (filters, sortBy, callback) => async dispatch => {\r\n  const response = await jsonApi.get('/products');\r\n\r\n  response.then(res => {\r\n    let { products } = res.data;\r\n\r\n    if (!!filters && filters.length > 0) {\r\n      products = products.filter(p =>\r\n        filters.find(f => p.availableSizes.find(size => size === f))\r\n      );\r\n    }\r\n\r\n    if (!!sortBy) {\r\n      products = products.sort(compare[sortBy]);\r\n    }\r\n\r\n    if (!!callback) {\r\n      callback();\r\n    }\r\n\r\n    return dispatch({\r\n      type: FETCH_PRODUCTS,\r\n      payload: products\r\n    });\r\n  });\r\n  response.catch(err => {\r\n    console.log('Could not fetch products. Try again later.');\r\n  })\r\n\r\n  //\r\n  // dispatch({ type: FETCH_PRODUCTS, payload: response.data });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}