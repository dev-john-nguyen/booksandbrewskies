{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskiesproject\\\\booksandbrewskies\\\\client\\\\src\\\\components\\\\BB\\\\index.js\";\nimport React from 'react';\nimport { isEmpty } from 'lodash';\nimport axios from 'axios';\nimport Modal from '../Modal';\nimport Spinner from '../spinner';\n\nclass BB extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      let reviewItems;\n\n      try {\n        reviewItems = await axios.get('/reviews');\n      } catch (e) {\n        console.log(e);\n        return this.setState({\n          error: true,\n          loading: false\n        });\n      }\n\n      this.setState({\n        reviewItems: reviewItems.data,\n        loading: false\n      });\n    };\n\n    this.state = {\n      reviewItems: [],\n      error: false,\n      loading: true\n    };\n  }\n\n  render() {\n    if (this.state.loading) return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n\n    if (this.state.error) {\n      return React.createElement(Modal, {\n        showValue: true,\n        closeDirect: \"/\",\n        buttonName: \"Close\",\n        title: \"Error\",\n        description: \"Sorry, we are undergoing maintenance. Check back again later.\",\n        svgType: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    }\n\n    if (isEmpty(this.state.reviewItems)) {\n      return React.createElement(Modal, {\n        showValue: true,\n        closeDirect: \"/\",\n        buttonName: \"Close\",\n        title: \"Empty\",\n        description: \"We currently don't have any items. Check back again later.\",\n        svgType: \"empty\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    }\n\n    const review = this.state.reviewItems.map((item, index) => {\n      return React.createElement(\"div\", {\n        className: \"\",\n        style: {\n          width: '300px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: item.imageUrl,\n        alt: item.name,\n        width: \"200\",\n        height: \"300\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, item.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"From: \", item.description), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, item.myReview.rating), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, item.myReview.comment));\n    });\n    return React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, review);\n  }\n\n}\n\nexport default BB;","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskiesproject/booksandbrewskies/client/src/components/BB/index.js"],"names":["React","isEmpty","axios","Modal","Spinner","BB","Component","constructor","props","componentDidMount","reviewItems","get","e","console","log","setState","error","loading","data","state","render","review","map","item","index","width","imageUrl","name","description","myReview","rating","comment"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { isEmpty } from 'lodash';\r\nimport axios from 'axios';\r\nimport Modal from '../Modal';\r\nimport Spinner from '../spinner';\r\n\r\nclass BB extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            reviewItems: [],\r\n            error: false,\r\n            loading: true\r\n        }\r\n    }\r\n    componentDidMount = async() => {\r\n        let reviewItems;\r\n\r\n        try {\r\n            reviewItems = await axios.get('/reviews');\r\n        }catch(e){\r\n            console.log(e)\r\n            return this.setState({error: true, loading: false })\r\n        }\r\n\r\n        this.setState({reviewItems: reviewItems.data, loading: false });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        if(this.state.loading) return <Spinner />;\r\n\r\n        if(this.state.error){\r\n            return (\r\n                <Modal\r\n                showValue={true}\r\n                closeDirect='/'\r\n                buttonName='Close'\r\n                title='Error'\r\n                description='Sorry, we are undergoing maintenance. Check back again later.'\r\n                svgType=\"error\"\r\n              />\r\n            )\r\n        }\r\n\r\n        if(isEmpty(this.state.reviewItems)){\r\n            return (\r\n                <Modal\r\n                showValue={true}\r\n                closeDirect='/'\r\n                buttonName='Close'\r\n                title='Empty'\r\n                description=\"We currently don't have any items. Check back again later.\"\r\n                svgType=\"empty\"\r\n              />\r\n            )\r\n        }\r\n\r\n        const review = this.state.reviewItems.map((item, index) => {\r\n            return (\r\n                <div className=\"\" style={{width: '300px'}}>\r\n                <img src={item.imageUrl} alt={item.name} width='200' height='300' key={index}/>\r\n                <h2>{item.name}</h2>\r\n                <p>From: {item.description}</p>\r\n                <p>{item.myReview.rating}</p>\r\n                <p>{item.myReview.comment}</p>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return(\r\n            <div className=\"d-flex\">\r\n                {review}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BB;"]},"metadata":{},"sourceType":"module"}