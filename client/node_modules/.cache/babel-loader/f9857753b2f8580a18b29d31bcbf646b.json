{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskies\\\\beersandbrewskies\\\\src\\\\components\\\\shop\\\\components\\\\checkout\\\\index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport CartProduct from '../floatcart/components/CartProduct';\nimport { updateCart } from '../../../../services/total/actions';\nimport { formatPrice } from '../util';\nimport { stripe } from '../../../../services/stripe/actions';\n\nclass Checkout extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.proceedToPay = () => {\n      const _this$props = this.props,\n            cartTotal = _this$props.cartTotal,\n            cartProducts = _this$props.cartProducts;\n\n      if (!cartTotal.productQuantity) {\n        alert('Add some product in the cart!');\n      } else {\n        this.props.stripe(cartTotal, cartProducts);\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"mounted\");\n    console.log(this.props.cartTotal);\n  }\n\n  render() {\n    const cartTotal = this.props.cartTotal;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, cartTotal.totalPrice);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cartProducts: state.cart.products,\n    cartTotal: state.total.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateCart,\n  stripe\n})(Checkout);","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/components/shop/components/checkout/index.js"],"names":["React","PropTypes","connect","CartProduct","updateCart","formatPrice","stripe","Checkout","Component","proceedToPay","props","cartTotal","cartProducts","productQuantity","alert","componentDidMount","console","log","render","totalPrice","mapStateToProps","state","cart","products","total","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,SAASC,UAAT,QAA2B,oCAA3B;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,SAASC,MAAT,QAAuB,qCAAvB;;AAEA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAOrCC,YAPqC,GAOtB,MAAM;AAAA,0BAEiB,KAAKC,KAFtB;AAAA,YAEXC,SAFW,eAEXA,SAFW;AAAA,YAEAC,YAFA,eAEAA,YAFA;;AAInB,UAAI,CAACD,SAAS,CAACE,eAAf,EAAgC;AAC9BC,QAAAA,KAAK,CAAC,+BAAD,CAAL;AACD,OAFD,MAEO;AACL,aAAKJ,KAAL,CAAWJ,MAAX,CAAkBK,SAAlB,EAA6BC,YAA7B;AACD;AAEF,KAjBoC;AAAA;;AAErCG,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,SAAvB;AACD;;AAgBCO,EAAAA,MAAM,GAAE;AAAA,UACCP,SADD,GACc,KAAKD,KADnB,CACCC,SADD;AAEN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,SAAS,CAACQ,UAAhB,CADF;AAGH;;AA1BoC;;AA6BvC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACPT,IAAAA,YAAY,EAAES,KAAK,CAACC,IAAN,CAAWC,QADlB;AAEPZ,IAAAA,SAAS,EAAEU,KAAK,CAACG,KAAN,CAAYC;AAFhB,GAAP;AAID,CALD;;AAOA,eAAevB,OAAO,CAACkB,eAAD,EAAiB;AAAChB,EAAAA,UAAD;AAAaE,EAAAA;AAAb,CAAjB,CAAP,CAA8CC,QAA9C,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport CartProduct from '../floatcart/components/CartProduct';\r\nimport { updateCart } from '../../../../services/total/actions';\r\nimport { formatPrice } from '../util';\r\nimport { stripe } from '../../../../services/stripe/actions';\r\n\r\nclass Checkout extends React.Component {\r\n\r\n  componentDidMount() {\r\n    console.log(\"mounted\")\r\n    console.log(this.props.cartTotal);\r\n  }\r\n\r\n  proceedToPay = () => {\r\n\r\n    const { cartTotal, cartProducts } = this.props;\r\n\r\n    if (!cartTotal.productQuantity) {\r\n      alert('Add some product in the cart!');\r\n    } else {\r\n      this.props.stripe(cartTotal, cartProducts);\r\n    }\r\n\r\n  };\r\n\r\n\r\n\r\n    render(){\r\n      const {cartTotal} = this.props;\r\n      return (\r\n        <div>{cartTotal.totalPrice}</div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  cartProducts: state.cart.products,\r\n  cartTotal: state.total.data\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{updateCart, stripe})(Checkout);\r\n"]},"metadata":{},"sourceType":"module"}