{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\Modern React With Redux Projects\\\\beersandbrewskies\\\\beersandbrewskies\\\\src\\\\components\\\\shop\\\\components\\\\checkout\\\\index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport CartProduct from '../floatcart/components/CartProduct';\nimport { updateCart } from '../../../../services/total/actions';\nimport { formatPrice } from '../util';\nimport { stripe } from '../../../../services/stripe/actions';\n\nclass Checkout extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cartTotal: this.props.cartTotal\n    };\n\n    this.updateLocalStorage = () => {\n      const _this$props = this.props,\n            cartProducts = _this$props.cartProducts,\n            cartTotal = _this$props.cartTotal;\n      localStorage.setItem('cartProducts', JSON.stringify(cartProducts));\n      localStorage.setItem('cartTotal', JSON.stringify(cartTotal));\n    };\n\n    this.updateCart = () => {\n      const cartProductsLs = JSON.parse(localStorage.getItem('cartProducts'));\n      const cartTotalLs = JSON.parse(localStorage.getItem('cartTotal'));\n      const _this$props2 = this.props,\n            cartProducts = _this$props2.cartProducts,\n            cartTotal = _this$props2.cartTotal;\n\n      if (cartProductsLs && cartTotalLs) {\n        if (cartProductsLs.length > 0) {\n          Object.assign(cartProducts, cartProductsLs);\n          Object.assign(cartTotal, cartTotalLs);\n        }\n      }\n    };\n\n    this.proceedToPay = () => {\n      const _this$props3 = this.props,\n            cartTotal = _this$props3.cartTotal,\n            cartProducts = _this$props3.cartProducts;\n\n      if (!cartTotal.productQuantity) {\n        alert('Add some product in the cart!');\n      } else {\n        this.props.stripe(cartTotal, cartProducts);\n      }\n    };\n  }\n\n  componentDidUpdate() {\n    this.updateLocalStorage();\n  }\n\n  componentDidMount() {\n    console.log(\"mounted\");\n    this.updateCart();\n    console.log(this.props.cartTotal);\n  }\n\n  render() {\n    const cartTotal = this.state.cartTotal;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, cartTotal.totalPrice);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cartProducts: state.cart.products,\n    cartTotal: state.total.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateCart,\n  stripe\n})(Checkout);","map":{"version":3,"sources":["C:/Users/John/Desktop/Modern React With Redux Projects/beersandbrewskies/beersandbrewskies/src/components/shop/components/checkout/index.js"],"names":["React","PropTypes","connect","CartProduct","updateCart","formatPrice","stripe","Checkout","Component","state","cartTotal","props","updateLocalStorage","cartProducts","localStorage","setItem","JSON","stringify","cartProductsLs","parse","getItem","cartTotalLs","length","Object","assign","proceedToPay","productQuantity","alert","componentDidUpdate","componentDidMount","console","log","render","totalPrice","mapStateToProps","cart","products","total","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,SAASC,UAAT,QAA2B,oCAA3B;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,SAASC,MAAT,QAAuB,qCAAvB;;AAEA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWD;AADhB,KAD6B;;AAAA,SASrCE,kBATqC,GAShB,MAAM;AAAA,0BACW,KAAKD,KADhB;AAAA,YACjBE,YADiB,eACjBA,YADiB;AAAA,YACHH,SADG,eACHA,SADG;AAEzBI,MAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAeJ,YAAf,CAArC;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeP,SAAf,CAAlC;AACD,KAboC;;AAAA,SAqBrCN,UArBqC,GAqBxB,MAAM;AACjB,YAAMc,cAAc,GAAGF,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,cAArB,CAAX,CAAvB;AACA,YAAMC,WAAW,GAAGL,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,WAArB,CAAX,CAApB;AAFiB,2BAGmB,KAAKT,KAHxB;AAAA,YAGTE,YAHS,gBAGTA,YAHS;AAAA,YAGKH,SAHL,gBAGKA,SAHL;;AAIf,UAAGQ,cAAc,IAAIG,WAArB,EAAiC;AAC/B,YAAGH,cAAc,CAACI,MAAf,GAAwB,CAA3B,EAA6B;AAC3BC,UAAAA,MAAM,CAACC,MAAP,CAAcX,YAAd,EAA4BK,cAA5B;AACAK,UAAAA,MAAM,CAACC,MAAP,CAAcd,SAAd,EAAyBW,WAAzB;AACD;AACF;AACF,KA/BkC;;AAAA,SAiCrCI,YAjCqC,GAiCtB,MAAM;AAAA,2BAEiB,KAAKd,KAFtB;AAAA,YAEXD,SAFW,gBAEXA,SAFW;AAAA,YAEAG,YAFA,gBAEAA,YAFA;;AAInB,UAAI,CAACH,SAAS,CAACgB,eAAf,EAAgC;AAC9BC,QAAAA,KAAK,CAAC,+BAAD,CAAL;AACD,OAFD,MAEO;AACL,aAAKhB,KAAL,CAAWL,MAAX,CAAkBI,SAAlB,EAA6BG,YAA7B;AACD;AAEF,KA3CoC;AAAA;;AAKrCe,EAAAA,kBAAkB,GAAG;AACnB,SAAKhB,kBAAL;AACD;;AAQDiB,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,SAAK3B,UAAL;AACA0B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWD,SAAvB;AACD;;AA0BCsB,EAAAA,MAAM,GAAE;AAAA,UACCtB,SADD,GACc,KAAKD,KADnB,CACCC,SADD;AAEN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,SAAS,CAACuB,UAAhB,CADF;AAGH;;AAlDoC;;AAqDvC,MAAMC,eAAe,GAAGzB,KAAK,IAAI;AAC/B,SAAO;AACPI,IAAAA,YAAY,EAAEJ,KAAK,CAAC0B,IAAN,CAAWC,QADlB;AAEP1B,IAAAA,SAAS,EAAED,KAAK,CAAC4B,KAAN,CAAYC;AAFhB,GAAP;AAID,CALD;;AAOA,eAAepC,OAAO,CAACgC,eAAD,EAAiB;AAAC9B,EAAAA,UAAD;AAAaE,EAAAA;AAAb,CAAjB,CAAP,CAA8CC,QAA9C,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport CartProduct from '../floatcart/components/CartProduct';\r\nimport { updateCart } from '../../../../services/total/actions';\r\nimport { formatPrice } from '../util';\r\nimport { stripe } from '../../../../services/stripe/actions';\r\n\r\nclass Checkout extends React.Component {\r\n  state = {\r\n    cartTotal: this.props.cartTotal,\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    this.updateLocalStorage();\r\n  }\r\n\r\n  updateLocalStorage = () => {\r\n    const { cartProducts, cartTotal } = this.props;\r\n    localStorage.setItem('cartProducts', JSON.stringify(cartProducts));\r\n    localStorage.setItem('cartTotal', JSON.stringify(cartTotal));\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"mounted\")\r\n    this.updateCart();\r\n    console.log(this.props.cartTotal);\r\n  }\r\n\r\n  updateCart = () => {\r\n    const cartProductsLs = JSON.parse(localStorage.getItem('cartProducts'));\r\n    const cartTotalLs = JSON.parse(localStorage.getItem('cartTotal'));\r\n    const { cartProducts, cartTotal } = this.props;\r\n      if(cartProductsLs && cartTotalLs){\r\n        if(cartProductsLs.length > 0){\r\n          Object.assign(cartProducts, cartProductsLs);\r\n          Object.assign(cartTotal, cartTotalLs);\r\n        }\r\n      }\r\n    }\r\n\r\n  proceedToPay = () => {\r\n\r\n    const { cartTotal, cartProducts } = this.props;\r\n\r\n    if (!cartTotal.productQuantity) {\r\n      alert('Add some product in the cart!');\r\n    } else {\r\n      this.props.stripe(cartTotal, cartProducts);\r\n    }\r\n\r\n  };\r\n\r\n    render(){\r\n      const {cartTotal} = this.state;\r\n      return (\r\n        <div>{cartTotal.totalPrice}</div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  cartProducts: state.cart.products,\r\n  cartTotal: state.total.data\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{updateCart, stripe})(Checkout);\r\n"]},"metadata":{},"sourceType":"module"}